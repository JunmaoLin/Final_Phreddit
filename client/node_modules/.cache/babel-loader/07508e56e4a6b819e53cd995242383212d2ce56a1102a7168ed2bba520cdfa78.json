{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/postPage.js\";\nimport React from 'react';\nimport { InfoSection, getPost, getComment, getTotalComments, TimeStamp } from './homePage.js';\nimport '../stylesheets/postPage.css';\nimport upvoteIcon from '../images/upvoteIcon.png';\nimport downVoteIcon from '../images/downvoteIcon.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ThePostPage extends React.Component {\n  render() {\n    //console.log(\"THIS IS PROPS\", this.props)\n    const {\n      posts,\n      post,\n      comments,\n      communities,\n      linkFlairs,\n      setPage,\n      setCommentOrReplyParentID,\n      setCommentOrReply,\n      loggedIn,\n      userInfo\n    } = this.props;\n    //console.log(\"RENDERING\", post, comments)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postMainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(PostPageHeader, {\n        posts: posts,\n        post: post,\n        communities: communities,\n        comments: comments,\n        linkFlairs: linkFlairs,\n        setPage: setPage,\n        setCommentOrReplyParentID: setCommentOrReplyParentID,\n        setCommentOrReply: setCommentOrReply,\n        loggedIn: loggedIn,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CommentThread, {\n        posts: posts,\n        post: post,\n        communities: communities,\n        comments: comments,\n        linkFlairs: linkFlairs,\n        setPage: setPage,\n        setCommentOrReplyParentID: setCommentOrReplyParentID,\n        setCommentOrReply: setCommentOrReply,\n        loggedIn: loggedIn,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass PostPageHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentForm: false\n    };\n    this.createComment = this.createComment.bind(this);\n  }\n  createComment() {\n    //console.log(\"Creating Comment\");\n    this.setState({\n      commentForm: true\n    });\n  }\n  render() {\n    const {\n      posts,\n      post,\n      communities,\n      comments,\n      linkFlairs,\n      setPage,\n      setCommentOrReplyParentID,\n      setCommentOrReply,\n      loggedIn\n    } = this.props;\n    //console.log(\"POST PAGE HEADER\", post);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: postPageView(posts, post, communities, comments, linkFlairs, setPage, setCommentOrReplyParentID, setCommentOrReply, loggedIn)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction postPageView(posts, postName, communities, comments, linkFlairs, setPage, setCommentOrReplyParentID, setCommentOrReply, loggedIn) {\n  // const commentSection = document.getElementById(\"posts\");\n  // commentSection.innerHTML = '';\n  const post = posts.find(function (post) {\n    //console.log(post);\n    return post.title === postName.title;\n  });\n\n  //console.log(\"POST PAGE VIEW\", post)\n\n  const postInfo = getPost(post, communities, comments, linkFlairs);\n  const content = post.content;\n\n  //console.log(\"POST INFO\", postInfo);\n\n  const linkFlair = postInfo[4] !== 'not FOUND' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"linkFlair\",\n      children: postInfo[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this) : null;\n  post.commentIDs.sort(function (a, b) {\n    //console.log(\"in the sort\");\n    return new Date(getComment(b, comments).commentedDate) - new Date(getComment(a, comments).commentedDate);\n  });\n  //console.log(\"POST PAGE VIEW\", post);\n  console.log(\"POST PAGE VIEWlogggggeddddinnnnn?\", loggedIn);\n  return /*#__PURE__*/_jsxDEV(InfoSection, {\n    page: 'post',\n    comName: postInfo[0],\n    userName: postInfo[1],\n    startDate: postInfo[2],\n    title: postInfo[3],\n    linkFlairInput: linkFlair,\n    content: content,\n    viewCount: post.views,\n    commentCount: postInfo[7],\n    upVotes: postInfo[9],\n    loggedIn: loggedIn\n    // userInfo = {userInfo}\n    ,\n\n    setPage: setPage,\n    setCommentOrReplyParentID: setCommentOrReplyParentID,\n    setCommentOrReply: setCommentOrReply,\n    postID: post._id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\nclass CommentThread extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      replyForm: false\n    };\n    this.createReply = this.createReply.bind(this);\n  }\n  createReply() {\n    //console.log(\"Creating Reply\");\n    this.setState({\n      replyForm: true\n    });\n  }\n  render() {\n    const {\n      posts,\n      post,\n      comments,\n      setPage,\n      setCommentOrReplyParentID,\n      setCommentOrReply\n    } = this.props;\n    //console.log(this.props);\n    const postToDisplay = posts.find(postIter => {\n      return postIter.title === post.title;\n    });\n    //console.log(\"COMMENT THREAD\", postToDisplay);\n\n    postToDisplay.commentIDs.sort(function (a, b) {\n      //console.log(\"A\", getComment(a, comments), \"B\", getComment(b, comments));\n      return new Date(getComment(b, comments).commentedDate) - new Date(getComment(a, comments).commentedDate);\n    });\n    const commentArray = getTotalComments(postToDisplay, comments);\n    //console.log(\"THIS IS COMMENT ARRAY\", commentArray);\n    let marginMap = new Map();\n    const listComments = commentArray.map((comment, index) => {\n      // Determine the margin for this comment\n      //console.log(comment);\n      let spacing = marginMap.get(comment._id) || \"0.5rem\";\n\n      //console.log(marginMap)\n\n      // Prepare the margin for child comments\n      comment.commentIDs.forEach(childID => {\n        marginMap.set(childID, `${parseFloat(spacing) + 4}rem`);\n      });\n\n      // Render the comment with appropriate margin\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        style: {\n          marginLeft: spacing\n        },\n        children: /*#__PURE__*/_jsxDEV(Comment, {\n          postName: post.title,\n          id: comment._id,\n          userName: comment.commentedBy,\n          content: comment.content,\n          timeStamp: comment.commentedDate,\n          setPage: setPage,\n          setCommentOrReplyParentID: setCommentOrReplyParentID,\n          setCommentOrReply: setCommentOrReply,\n          loggedIn: this.props.loggedIn,\n          upVotes: comment.upVotes,\n          userInfo: this.props.userInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts\",\n      children: listComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// function updateVoteCountNRepretation(comment, loggedIn){\n// }\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateVote: 0\n    };\n  }\n  async updateVoteCountNReputation(commentID, loggedIn) {\n    console.log(\"\");\n    let userReputation;\n    if (this.props.loggedIn && this.props.userInfo[0]) {\n      userReputation = await axios.get('http://localhost:8000/getUserReputation', {\n        params: {\n          display: this.props.userInfo[0]\n        }\n      });\n      console.log(\"USER REPUTATION\", userReputation);\n    }\n    // if(loggedIn){\n    //     const response = await axios.post('http://localhost:8000/updateVoteCount', {\n    //         commentID: commentID,\n    //         vote: this.state.updateVote,\n    //     },{ withCredentials: true });\n    //     console.log(\"RESPONSE\", response);\n    // }\n  }\n  render() {\n    console.log(\"is loggggggggin?????\", this.props.loggedIn);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"comment_style\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentTitle\",\n          children: [this.props.userName, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeStamp\",\n            children: /*#__PURE__*/_jsxDEV(TimeStamp, {\n              postedDate: this.props.timeStamp\n            }, this.props.timeStamp, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentContent\",\n        children: this.props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentVoteDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upVoteButton\",\n          disabled: !this.props.loggedIn,\n          onClick: () => this.updateVoteCountNReputation(this.props.id, this.props.loggedIn),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"upvoteIcon\",\n            alt: \"voteCountIcon\",\n            src: upvoteIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"downVoteButton\",\n          disabled: !this.props.loggedIn,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"downvoteIcon\",\n            alt: \"voteCountIcon\",\n            src: downVoteIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), this.props.upVotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !this.props.loggedIn,\n        \"data-commentunder\": this.props.id,\n        \"data-post-name\": this.props.postName,\n        className: \"replyButton\",\n        onClick: () => {\n          this.props.setPage(\"NewCommentPageView\");\n          this.props.setCommentOrReplyParentID(this.props.id);\n          this.props.setCommentOrReply(\"reply\");\n        },\n        children: \"Reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","InfoSection","getPost","getComment","getTotalComments","TimeStamp","upvoteIcon","downVoteIcon","axios","jsxDEV","_jsxDEV","ThePostPage","Component","render","posts","post","comments","communities","linkFlairs","setPage","setCommentOrReplyParentID","setCommentOrReply","loggedIn","userInfo","props","id","children","PostPageHeader","fileName","_jsxFileName","lineNumber","columnNumber","CommentThread","constructor","state","commentForm","createComment","bind","setState","postPageView","postName","find","title","postInfo","content","linkFlair","className","commentIDs","sort","a","b","Date","commentedDate","console","log","page","comName","userName","startDate","linkFlairInput","viewCount","views","commentCount","upVotes","postID","_id","replyForm","createReply","postToDisplay","postIter","commentArray","marginMap","Map","listComments","map","comment","index","spacing","get","forEach","childID","set","parseFloat","style","marginLeft","Comment","commentedBy","timeStamp","updateVote","updateVoteCountNReputation","commentID","userReputation","params","display","postedDate","disabled","onClick","alt","src"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/postPage.js"],"sourcesContent":["import React from 'react';\nimport {InfoSection, getPost, getComment, getTotalComments, TimeStamp} from './homePage.js';\nimport '../stylesheets/postPage.css'\nimport upvoteIcon from '../images/upvoteIcon.png'\nimport downVoteIcon from '../images/downvoteIcon.png'\nimport axios from 'axios';\n\nexport default class ThePostPage extends React.Component{\n\n    render(){\n        //console.log(\"THIS IS PROPS\", this.props)\n        const {posts, post, comments, communities, linkFlairs, setPage, setCommentOrReplyParentID, setCommentOrReply, loggedIn, userInfo} = this.props\n        //console.log(\"RENDERING\", post, comments)\n        return (\n            <div id=\"postMainDiv\">\n                <PostPageHeader posts={posts} post={post} communities={communities} comments={comments} linkFlairs={linkFlairs} setPage={setPage} setCommentOrReplyParentID={setCommentOrReplyParentID} setCommentOrReply={setCommentOrReply} loggedIn={loggedIn} userInfo={userInfo}/>\n                <CommentThread posts={posts} post={post} communities={communities} comments={comments} linkFlairs={linkFlairs} setPage={setPage} setCommentOrReplyParentID={setCommentOrReplyParentID} setCommentOrReply={setCommentOrReply} loggedIn={loggedIn} userInfo={userInfo}/>\n            </div>\n        );\n    }\n}\n\nclass PostPageHeader extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {commentForm: false};\n        this.createComment= this.createComment.bind(this);\n    }\n\n    createComment(){\n        //console.log(\"Creating Comment\");\n        this.setState({commentForm: true});\n    }\n\n    render(){\n        const {posts, post, communities, comments, linkFlairs, setPage, setCommentOrReplyParentID, setCommentOrReply, loggedIn} = this.props\n        //console.log(\"POST PAGE HEADER\", post);\n        return(\n            <div id=\"header\">\n                {postPageView(posts, post, communities, comments, linkFlairs, setPage, setCommentOrReplyParentID, setCommentOrReply, loggedIn)}\n            </div>\n        );\n    }\n}\n\n\nfunction postPageView(posts, postName, communities, comments, linkFlairs, setPage, setCommentOrReplyParentID, setCommentOrReply, loggedIn){\n    // const commentSection = document.getElementById(\"posts\");\n    // commentSection.innerHTML = '';\n    const post = posts.find(function(post){\n        //console.log(post);\n      return post.title === postName.title;\n    });\n\n\n    //console.log(\"POST PAGE VIEW\", post)\n    \n    const postInfo = getPost(post, communities, comments, linkFlairs);\n    const content = post.content;\n\n    //console.log(\"POST INFO\", postInfo);\n\n\n    const linkFlair = postInfo[4] !== 'not FOUND' ?\n        (\n        <div>\n            <span className=\"linkFlair\">\n                {postInfo[4]}\n            </span>\n        </div>\n        ) : null;\n\n    post.commentIDs.sort(function(a,b){\n        //console.log(\"in the sort\");\n        return(new Date(getComment(b, comments).commentedDate) - new Date(getComment(a, comments).commentedDate))\n    });\n    //console.log(\"POST PAGE VIEW\", post);\n    console.log(\"POST PAGE VIEWlogggggeddddinnnnn?\", loggedIn);\n    return(\n    <InfoSection\n        page={'post'}\n        comName = {postInfo[0]}\n        userName = {postInfo[1]}\n        startDate = {postInfo[2]}\n        title = {postInfo[3]}\n        linkFlairInput = {linkFlair}\n        content = {content}\n        viewCount = {post.views}\n        commentCount = {postInfo[7]}\n        upVotes = {postInfo[9]}\n        loggedIn = {loggedIn}\n        // userInfo = {userInfo}\n\n        setPage = {setPage}\n        setCommentOrReplyParentID = {setCommentOrReplyParentID}\n        setCommentOrReply = {setCommentOrReply}\n        postID = {post._id}\n    />\n    );\n}\n\nclass CommentThread extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {replyForm: false};\n        this.createReply= this.createReply.bind(this);\n    }\n\n    createReply(){\n        //console.log(\"Creating Reply\");\n        this.setState({replyForm: true});\n    }\n\n    render(){\n        const {posts, post, comments, setPage, setCommentOrReplyParentID, setCommentOrReply} = this.props\n        //console.log(this.props);\n        const postToDisplay = posts.find((postIter) => {return postIter.title === post.title});\n        //console.log(\"COMMENT THREAD\", postToDisplay);\n      \n        postToDisplay.commentIDs.sort(function(a,b){\n            //console.log(\"A\", getComment(a, comments), \"B\", getComment(b, comments));\n            return(new Date(getComment(b, comments).commentedDate) - new Date(getComment(a, comments).commentedDate))\n        });\n\n        const commentArray = getTotalComments(postToDisplay,  comments);\n        //console.log(\"THIS IS COMMENT ARRAY\", commentArray);\n        let marginMap = new Map();\n        const listComments = commentArray.map((comment, index) =>{\n            // Determine the margin for this comment\n            //console.log(comment);\n            let spacing = marginMap.get(comment._id) || \"0.5rem\";\n\n            //console.log(marginMap)\n            \n            // Prepare the margin for child comments\n            comment.commentIDs.forEach((childID) => {\n                marginMap.set(childID, `${parseFloat(spacing) + 4}rem`);\n            });\n            \n            // Render the comment with appropriate margin\n            return (\n                <div className=\"comment\" key={comment._id} style={{ marginLeft: spacing }}>\n                    <Comment\n                        postName = {post.title}\n                        id = {comment._id}\n                        userName = {comment.commentedBy}\n                        content = {comment.content}\n                        timeStamp = {comment.commentedDate} \n                        setPage = {setPage}\n                        setCommentOrReplyParentID = {setCommentOrReplyParentID}\n                        setCommentOrReply = {setCommentOrReply}\n                        loggedIn = {this.props.loggedIn}\n                        upVotes = {comment.upVotes}\n                        userInfo = {this.props.userInfo}\n                    />\n                </div>\n            );})\n\n        return(\n            <div id=\"posts\">\n                {listComments}\n            </div>\n        );\n    }\n}\n\n// function updateVoteCountNRepretation(comment, loggedIn){\n// }\n\nclass Comment extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {updateVote: 0};\n    }\n\n    async updateVoteCountNReputation(commentID, loggedIn){\n        console.log(\"\");\n        let userReputation;\n        if(this.props.loggedIn && this.props.userInfo[0]){\n            userReputation = await axios.get('http://localhost:8000/getUserReputation', { params: {display: this.props.userInfo[0] }});\n            console.log(\"USER REPUTATION\", userReputation);\n        }\n        // if(loggedIn){\n        //     const response = await axios.post('http://localhost:8000/updateVoteCount', {\n        //         commentID: commentID,\n        //         vote: this.state.updateVote,\n        //     },{ withCredentials: true });\n        //     console.log(\"RESPONSE\", response);\n        // }\n    }\n\n    render(){\n        console.log(\"is loggggggggin?????\", this.props.loggedIn);\n        return(\n            <span className=\"comment_style\">\n            <div className=\"commentInfo\">\n            <div className=\"commentTitle\">\n                {/* {this.props.id} */}\n                {this.props.userName}\n                <span>•</span>\n                <div className=\"timeStamp\">\n                <TimeStamp key={this.props.timeStamp} postedDate={this.props.timeStamp}/>\n                </div>\n            </div>\n            </div>\n            <div className=\"commentContent\">\n            {this.props.content}\n            </div>\n\n            {/* comment up/down votes */}\n            <div className=\"commentVoteDiv\">\n                <button className='upVoteButton' disabled={!this.props.loggedIn} onClick={() => this.updateVoteCountNReputation(this.props.id, this.props.loggedIn)}>\n                    <img\n                        className='upvoteIcon'\n                        alt=\"voteCountIcon\"\n                        src={upvoteIcon}\n                    />\n                </button>\n                <button className='downVoteButton' disabled={!this.props.loggedIn}>\n                    <img\n                    className='downvoteIcon'\n                    alt=\"voteCountIcon\"\n                    src={downVoteIcon}\n                />\n                </button>\n                \n                {this.props.upVotes}\n            </div>\n\n            <button \n                disabled={!this.props.loggedIn}\n                data-commentunder={this.props.id} \n                data-post-name={this.props.postName} \n                className=\"replyButton\" \n                onClick={() => { \n                    this.props.setPage(\"NewCommentPageView\"); \n                    this.props.setCommentOrReplyParentID(this.props.id); \n                    this.props.setCommentOrReply(\"reply\");\n                }}\n            >Reply\n            </button>\n        </span>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}