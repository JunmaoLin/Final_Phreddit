{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/register.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TheRegisterPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"registerPage\",\n      className: \"main_cont_divs\",\n      children: [\"Register\", /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst SubmitUserFormButton = async e => {\n  e.preventDefault();\n  if (!validateForm()) return;\n\n  //pass in linkFlairID\n  let linkFlairID = formData.linkFlair;\n  //console.log(formData);\n\n  if (formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" && formData.createNewLinkFlair) {\n    const newLinkFlair = {\n      content: formData.createNewLinkFlair\n    };\n    try {\n      const response = await axios.post('http://localhost:8000/createNewLinkFlair', newLinkFlair);\n      newLinkFlair.linkFlairID = response.data._id;\n      linkFlairID = newLinkFlair.linkFlairID;\n      setLinkFlairs([...linkFlairs, response.data]);\n    } catch (error) {\n      console.log(\"Failed to submit link flair. Please try again.\");\n    }\n  }\n  const newPost = {\n    title: formData.postTitle,\n    content: formData.postText,\n    linkFlairID: linkFlairID,\n    postedBy: formData.creatorUsername,\n    postedDate: new Date(),\n    commentIDs: [],\n    views: 0\n  };\n  try {\n    const response = await axios.post('http://localhost:8000/createNewPost', newPost);\n    newPost._id = response.data._id;\n    setPosts([...posts, response.data]); //update post array\n\n    // need to update it on the server side\n    //console.log(\"new post id\", newPost._id);\n    for (const community of communities) {\n      //console.log(community.postIDs);\n      if (community.name === formData.communitySelection) {\n        community.postIDs.push(newPost._id);\n        //console.log(\"AFTER\", community.postIDs);\n        // console.log(\"Community ID:\", community._id);\n        // console.log(\"Community ID:\", newPost._id);\n        try {\n          await axios.post(`http://localhost:8000/communities/updateCommunityPostIDs/${community._id}`, community);\n        } catch (error) {\n          console.log(\"Failed to update community postIDs array. Please try again.\");\n        }\n      } //update community postIDs array\n    }\n    ;\n\n    // Clear form after submission\n    setFormData({\n      communitySelection: '',\n      postTitle: '',\n      linkFlair: '',\n      postText: '',\n      creatorUsername: '',\n      createNewLinkFlair: ''\n    });\n    setPage('home');\n    alert(\"Post submitted successfully!\");\n  } catch (error) {\n    console.log(\"Failed to submit post. Please try again.\");\n  }\n};\n_c = SubmitUserFormButton;\nclass Register extends React.Component {\n  // render(){\n  //     return(\n  //         <div id=\"newCommentPageView\">\n  //         <form id=\"newCommentForm\" onSubmit={SubmitUserFormButton}>\n  //             <div id=\"create_comment_div\">\n  //                 <h2 id=\"createCommentHTag\">Register New User</h2>\n  //             </div>\n\n  //             <div id=\"first_text_div\" className=\"post_divs\">\n  //                 <label htmlFor=\"text\"><b>First Name<span className=\"required-indicator\">*</span></b></label>\n  //                 <textarea \n  //                     placeholder=\"Enter A First Name\" \n  //                     id=\"first_text\" \n  //                     className=\"post_input_box\" \n  //                     /*value={formData.comment_text}\n  //                     onChange={handleInputChange}*/\n  //                     noValidate\n  //                 ></textarea>\n  //                 <div id=\"comment_text_error\" className=\"error-message\">\n\n  //                 error Value\n\n  //                 {/* {errors.comment_text} */}\n\n  //                 </div>\n  //             </div>\n\n  //             <div id=\"comment_text_div\" className=\"post_divs\">\n  //                 <label htmlFor=\"text\"><b>Last Name<span className=\"required-indicator\">*</span></b></label>\n  //                 <textarea \n  //                     placeholder=\"Enter A Last Name\" \n  //                     id=\"last_text\" \n  //                     className=\"post_input_box\" \n  //                     /*value={formData.comment_text}\n  //                     onChange={handleInputChange}*/\n  //                     noValidate\n  //                 ></textarea>\n  //                 <div id=\"comment_text_error\" className=\"error-message\">\n\n  //                 error Value\n\n  //                 {/* {errors.comment_text} */}\n\n  //                 </div>\n  //             </div>\n\n  //             <div id=\"post_user_div\" className=\"post_divs\">\n  //                 <label htmlFor=\"username\"><b>Email<span className=\"required-indicator\">*</span></b></label>\n  //                 <input \n  //                     type=\"text\" \n  //                     placeholder=\"Enter Valid Email\" \n  //                     id=\"comment_creator_username\" \n  //                     className=\"post_input_box\" \n  //                     /*value={formData.comment_creator_username}\n  //                     onChange={handleInputChange}*/\n  //                     noValidate\n  //                 ></input>\n  //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n\n  //                 errorValue\n  //                 {/* {errors.comment_creator_username} */}\n\n  //                 </div>\n  //             </div>\n\n  //             <div id=\"post_user_div\" className=\"post_divs\">\n  //                 <label htmlFor=\"username\"><b>Display Name<span className=\"required-indicator\">*</span></b></label>\n  //                 <input \n  //                     type=\"text\" \n  //                     placeholder=\"Enter Username\" \n  //                     id=\"comment_creator_username\" \n  //                     className=\"post_input_box\" \n  //                     /*value={formData.comment_creator_username}\n  //                     onChange={handleInputChange}*/\n  //                     noValidate\n  //                 ></input>\n  //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n\n  //                 errorValue\n  //                 {/* {errors.comment_creator_username} */}\n\n  //                 </div>\n  //             </div>\n\n  //             <div id=\"post_user_div\" className=\"post_divs\">\n  //                 <label htmlFor=\"username\"><b>Password<span className=\"required-indicator\">*</span></b></label>\n  //                 <input \n  //                     type=\"text\" \n  //                     placeholder=\"Enter Valid Password\" \n  //                     id=\"comment_creator_username\" \n  //                     className=\"post_input_box\" \n  //                     /*value={formData.comment_creator_username}\n  //                     onChange={handleInputChange}*/\n  //                     noValidate\n  //                 ></input>\n  //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n\n  //                 errorValue\n  //                 {/* {errors.comment_creator_username} */}\n\n  //                 </div>\n  //             </div>\n\n  //             <div id=\"post_user_div\" className=\"post_divs\">\n  //                 <label htmlFor=\"username\"><b>Verify Password<span className=\"required-indicator\">*</span></b></label>\n  //                 <input \n  //                     type=\"text\" \n  //                     placeholder=\"Enter Username\" \n  //                     id=\"comment_creator_username\" \n  //                     className=\"post_input_box\" \n  //                     /*value={formData.comment_creator_username}\n  //                     onChange={handleInputChange}*/\n  //                     noValidate\n  //                 ></input>\n  //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n\n  //                 errorValue\n  //                 {/* {errors.comment_creator_username} */}\n\n  //                 </div>\n  //             </div>\n\n  //             <div id=\"comment_button_div\">\n  //                 <button type=\"submit\" id=\"submitCommentFormButton\">Submit Comment</button> \n  //                 <button type=\"button\" id=\"closeCommentFormButton\" \n  //                 // onClick={cancelButton}\n\n  //                 >Cancel Submission</button>\n  //             </div>\n  //         </form>\n  //     </div>\n  //     );\n  // }\n}\nvar _c;\n$RefreshReg$(_c, \"SubmitUserFormButton\");","map":{"version":3,"names":["axios","React","jsxDEV","_jsxDEV","TheRegisterPage","Component","render","id","className","children","Register","fileName","_jsxFileName","lineNumber","columnNumber","SubmitUserFormButton","e","preventDefault","validateForm","linkFlairID","formData","linkFlair","createNewLinkFlair","newLinkFlair","content","response","post","data","_id","setLinkFlairs","linkFlairs","error","console","log","newPost","title","postTitle","postText","postedBy","creatorUsername","postedDate","Date","commentIDs","views","setPosts","posts","community","communities","name","communitySelection","postIDs","push","setFormData","setPage","alert","_c","$RefreshReg$"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/register.js"],"sourcesContent":["import axios from 'axios';\nimport React from 'react';\n\nexport default class TheRegisterPage extends React.Component{\n\n    render(){\n        return(\n            <div id=\"registerPage\" className=\"main_cont_divs\">\n            Register\n                <Register></Register>\n            </div>\n        );\n    }\n\n}\n\nconst SubmitUserFormButton = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n\n    //pass in linkFlairID\n    let linkFlairID = formData.linkFlair;\n    //console.log(formData);\n\n    if (formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" && formData.createNewLinkFlair) {\n        const newLinkFlair = { \n            content: formData.createNewLinkFlair,\n        };\n\n        try{\n            const response = await axios.post('http://localhost:8000/createNewLinkFlair', newLinkFlair);\n            newLinkFlair.linkFlairID = response.data._id;\n            linkFlairID = newLinkFlair.linkFlairID;\n            setLinkFlairs([...linkFlairs, response.data]);\n        }\n        catch (error) {\n            console.log(\"Failed to submit link flair. Please try again.\");\n        }\n    }\n\n    \n\n    const newPost = {  \n        title: formData.postTitle,\n        content: formData.postText,\n        linkFlairID: linkFlairID,\n        postedBy: formData.creatorUsername,\n        postedDate: new Date(),\n        commentIDs: [],\n        views: 0,\n    };\n\n    try{\n        const response = await axios.post('http://localhost:8000/createNewPost', newPost);\n\n        newPost._id = response.data._id;\n        setPosts([...posts, response.data]);//update post array\n\n        // need to update it on the server side\n        //console.log(\"new post id\", newPost._id);\n        for(const community of communities) {\n            //console.log(community.postIDs);\n            if (community.name === formData.communitySelection) {\n                community.postIDs.push(newPost._id);\n                //console.log(\"AFTER\", community.postIDs);\n                // console.log(\"Community ID:\", community._id);\n                // console.log(\"Community ID:\", newPost._id);\n                try{\n                    await axios.post(`http://localhost:8000/communities/updateCommunityPostIDs/${community._id}`, community);\n                }\n                catch (error) {\n                    console.log(\"Failed to update community postIDs array. Please try again.\");\n                }\n            }//update community postIDs array\n        };\n    \n        // Clear form after submission\n        setFormData({\n            communitySelection: '',\n            postTitle: '',\n            linkFlair: '',\n            postText: '',\n            creatorUsername: '',\n            createNewLinkFlair: '',\n        });\n\n        setPage('home');\n        alert(\"Post submitted successfully!\");\n    }\n    catch (error) {\n        console.log(\"Failed to submit post. Please try again.\");\n    }\n};\n\nclass Register extends React.Component{   \n    // render(){\n    //     return(\n    //         <div id=\"newCommentPageView\">\n    //         <form id=\"newCommentForm\" onSubmit={SubmitUserFormButton}>\n    //             <div id=\"create_comment_div\">\n    //                 <h2 id=\"createCommentHTag\">Register New User</h2>\n    //             </div>\n\n    //             <div id=\"first_text_div\" className=\"post_divs\">\n    //                 <label htmlFor=\"text\"><b>First Name<span className=\"required-indicator\">*</span></b></label>\n    //                 <textarea \n    //                     placeholder=\"Enter A First Name\" \n    //                     id=\"first_text\" \n    //                     className=\"post_input_box\" \n    //                     /*value={formData.comment_text}\n    //                     onChange={handleInputChange}*/\n    //                     noValidate\n    //                 ></textarea>\n    //                 <div id=\"comment_text_error\" className=\"error-message\">\n\n    //                 error Value\n                    \n    //                 {/* {errors.comment_text} */}\n                    \n    //                 </div>\n    //             </div>\n\n    //             <div id=\"comment_text_div\" className=\"post_divs\">\n    //                 <label htmlFor=\"text\"><b>Last Name<span className=\"required-indicator\">*</span></b></label>\n    //                 <textarea \n    //                     placeholder=\"Enter A Last Name\" \n    //                     id=\"last_text\" \n    //                     className=\"post_input_box\" \n    //                     /*value={formData.comment_text}\n    //                     onChange={handleInputChange}*/\n    //                     noValidate\n    //                 ></textarea>\n    //                 <div id=\"comment_text_error\" className=\"error-message\">\n\n    //                 error Value\n                    \n    //                 {/* {errors.comment_text} */}\n                    \n    //                 </div>\n    //             </div>\n\n    //             <div id=\"post_user_div\" className=\"post_divs\">\n    //                 <label htmlFor=\"username\"><b>Email<span className=\"required-indicator\">*</span></b></label>\n    //                 <input \n    //                     type=\"text\" \n    //                     placeholder=\"Enter Valid Email\" \n    //                     id=\"comment_creator_username\" \n    //                     className=\"post_input_box\" \n    //                     /*value={formData.comment_creator_username}\n    //                     onChange={handleInputChange}*/\n    //                     noValidate\n    //                 ></input>\n    //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n                    \n    //                 errorValue\n    //                 {/* {errors.comment_creator_username} */}\n                    \n    //                 </div>\n    //             </div>\n\n    //             <div id=\"post_user_div\" className=\"post_divs\">\n    //                 <label htmlFor=\"username\"><b>Display Name<span className=\"required-indicator\">*</span></b></label>\n    //                 <input \n    //                     type=\"text\" \n    //                     placeholder=\"Enter Username\" \n    //                     id=\"comment_creator_username\" \n    //                     className=\"post_input_box\" \n    //                     /*value={formData.comment_creator_username}\n    //                     onChange={handleInputChange}*/\n    //                     noValidate\n    //                 ></input>\n    //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n                    \n    //                 errorValue\n    //                 {/* {errors.comment_creator_username} */}\n                    \n    //                 </div>\n    //             </div>\n\n    //             <div id=\"post_user_div\" className=\"post_divs\">\n    //                 <label htmlFor=\"username\"><b>Password<span className=\"required-indicator\">*</span></b></label>\n    //                 <input \n    //                     type=\"text\" \n    //                     placeholder=\"Enter Valid Password\" \n    //                     id=\"comment_creator_username\" \n    //                     className=\"post_input_box\" \n    //                     /*value={formData.comment_creator_username}\n    //                     onChange={handleInputChange}*/\n    //                     noValidate\n    //                 ></input>\n    //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n                    \n    //                 errorValue\n    //                 {/* {errors.comment_creator_username} */}\n                    \n    //                 </div>\n    //             </div>\n\n    //             <div id=\"post_user_div\" className=\"post_divs\">\n    //                 <label htmlFor=\"username\"><b>Verify Password<span className=\"required-indicator\">*</span></b></label>\n    //                 <input \n    //                     type=\"text\" \n    //                     placeholder=\"Enter Username\" \n    //                     id=\"comment_creator_username\" \n    //                     className=\"post_input_box\" \n    //                     /*value={formData.comment_creator_username}\n    //                     onChange={handleInputChange}*/\n    //                     noValidate\n    //                 ></input>\n    //                 <div id=\"comment_creator_username_error\" className=\"error-message\">\n                    \n    //                 errorValue\n    //                 {/* {errors.comment_creator_username} */}\n                    \n    //                 </div>\n    //             </div>\n\n    //             <div id=\"comment_button_div\">\n    //                 <button type=\"submit\" id=\"submitCommentFormButton\">Submit Comment</button> \n    //                 <button type=\"button\" id=\"closeCommentFormButton\" \n    //                 // onClick={cancelButton}\n                    \n    //                 >Cancel Submission</button>\n    //             </div>\n    //         </form>\n    //     </div>\n    //     );\n    // }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}