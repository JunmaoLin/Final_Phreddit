{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/homePage.js\",\n  _s = $RefreshSig$();\nimport '../stylesheets/homePage.css';\nimport viewIcon from '../images/view.svg';\nimport commentIcon from '../images/comment.svg';\nimport noSearchIcon from '../images/no-search-result-icon.svg';\nimport memberCountIcon from '../images/memberCountIcon.svg';\nimport postCountIcon from '../images/postCountIcon.svg';\nimport upvoteIcon from '../images/upvoteIcon.png';\nimport downVoteIcon from '../images/downvoteIcon.png';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TheHomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      order: orderNewest\n    };\n    this.updateOrder = this.updateOrder.bind(this);\n    this.resetOrder = this.resetOrder.bind(this);\n  }\n  updateOrder(newOrder) {\n    //console.log(\"Updating order to: \", newOrder);\n    this.setState({\n      order: newOrder\n    }, () => {\n      console.log(\"Updated state:\", this.state.order);\n    });\n  }\n  resetOrder() {\n    //console.log(\"Resetting to newest\");\n    this.setState({\n      order: orderNewest\n    });\n  }\n  render() {\n    const {\n      setPage,\n      goToPostPage,\n      posts,\n      communities,\n      comments,\n      linkFlairs,\n      handleOrderButtonClick,\n      loggedIn\n    } = this.props;\n    //console.log(\"HOME PAGE PROPS\", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homePage\",\n      className: \"main_cont_divs\",\n      children: [/*#__PURE__*/_jsxDEV(HomePageHeader, {\n        handleOrderButtonClick: handleOrderButtonClick,\n        updateOrder: this.updateOrder,\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostSection, {\n        page: \"home\",\n        posts: posts,\n        comments: comments,\n        linkFlairs: linkFlairs,\n        communities: communities,\n        order: this.state.order,\n        goToPostPage: goToPostPage,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass HomePageHeader extends React.Component {\n  render() {\n    const {\n      setPage\n    } = this.props;\n    //console.log(\"IN HOME PAGE HEADER\", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n        page: \"home\",\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonDisplay, {\n        handleOrderButtonClick: this.props.handleOrderButtonClick,\n        updateOrder: this.props.updateOrder,\n        orderNewest: orderNewest,\n        orderOldest: orderOldest,\n        orderActive: orderActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport function InfoSection(props) {\n  _s();\n  const [upVotes, setUpvotes] = useState(props.upVotes);\n  //let setPage = props.setPage;\n  const checkprops = props.page.toLowerCase().trim();\n  //console.log(\"propppppppssssssss\",props)\n  if (checkprops === 'home') {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"left-side\",\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  } else if (checkprops === 'community') {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comName\",\n        children: props.comName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), \"Created:  \", /*#__PURE__*/_jsxDEV(TimeStamp, {\n        postedDate: props.startDate\n      }, props.startDate, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCount\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"postCountIcon\",\n          alt: \"postCountIcon\",\n          src: postCountIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }, this), \" \", props.comPostCount, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"memberCountIcon\",\n          alt: \"memberCountIcon\",\n          src: memberCountIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 103\n        }, this), \" \", props.memberCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this);\n  } else if (checkprops === 'search') {\n    if (props.posts.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"left-side\",\n        children: [\"Results for: \", props.txtInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"left-side\",\n        children: [\"No results found for: \", props.txtInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    //console.log(\"IN HERE BRO\", props);\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comName\",\n          children: props.comName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TimeStamp, {\n          postedDate: props.startDate\n        }, props.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: props.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"postInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comName\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), props.linkFlairInput, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: props.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"viewingIcon\",\n            className: \"viewIcon\",\n            src: viewIcon,\n            height: \"20\",\n            width: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), props.viewCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"commentingIcon\",\n            src: commentIcon,\n            height: \"17\",\n            width: \"17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), props.commentCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upVoteButton\",\n            disabled: !props.loggedIn,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"upvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: upvoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"downVoteButton\",\n            disabled: !props.loggedIn,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"downvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: downVoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), upVotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"create_comment_button\",\n        disabled: !props.loggedIn,\n        onClick: () => {\n          props.setPage(\"NewCommentPageView\");\n          props.setCommentOrReplyParentID(props.postID);\n          props.setCommentOrReply(\"comment\");\n        },\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(InfoSection, \"H8f2zj0j7PWlpt8tElayI64K68Y=\");\n_c = InfoSection;\nexport class ButtonDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.orderNewest = this.orderNewest.bind(this);\n    this.orderOldest = this.orderOldest.bind(this);\n    this.orderActive = this.orderActive.bind(this);\n  }\n  orderNewest() {\n    //console.log(\"Newest Clicked\");\n    this.props.handleOrderButtonClick();\n    this.props.updateOrder(orderNewest);\n  }\n  orderOldest() {\n    //console.log(\"Oldest Clicked\");\n    this.props.handleOrderButtonClick();\n    this.props.updateOrder(orderOldest);\n  }\n  orderActive() {\n    //console.log(\"Active Clicked\");\n    this.props.handleOrderButtonClick();\n    this.props.updateOrder(orderActive);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttonSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rightSide\",\n        id: \"newest\",\n        onClick: this.orderNewest,\n        children: \"Newest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rightSide\",\n        id: \"oldest\",\n        onClick: this.orderOldest,\n        children: \"Oldest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rightSide\",\n        id: \"active\",\n        onClick: this.orderActive,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction PostCount(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"postCount\",\n    children: [props.arrayLength, \" Posts\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n}\n_c2 = PostCount;\nexport class PostSection extends React.Component {\n  render() {\n    const {\n      posts,\n      communities,\n      order,\n      comments,\n      linkFlairs\n    } = this.props;\n    // console.log(\"THIS SI THE ORDER\", order)\n    //console.log(\"IN POST SECTION\", this.props.page)\n    //console.log(\"IN POST SECTION\", this.props.goToPostPage)\n    //console.log(\"POST SECTION COMMUNITIES\", communities);\n    const sortedPosts = postsList(posts, order, communities, comments, linkFlairs);\n    const listPosts = sortedPosts.map((post, index) => {\n      //console.log(\"THIS IS POST\", this.openPostView)\n      // console.log(\"CURRENT POST TITLE\", post)\n      // console.log(post.props.postID)\n      //console.log(\"IN THE POST SECTION\", post.props)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"id-\" + post.props.first20,\n        onClick: () => {\n          //console.log(\"BEFORE ASSIGNMENT\")\n          this.props.goToPostPage(post.props.postTitle);\n          //console.log(\"AFTER ASSIGNMENT\")\n        },\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          ...post.props,\n          page: this.props.page,\n          loggedIn: this.props.loggedIn\n          //openPost={this.openPostView} // Pass the function as prop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }, this)\n      }, post.props.postID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this);\n    });\n    //console.log(\"listPosts\", listPosts)\n    let postSectionInfo;\n    if (this.props.page === \"home\") {\n      postSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"posts\",\n        children: [/*#__PURE__*/_jsxDEV(PostCount, {\n          arrayLength: sortedPosts.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this), listPosts, sortedPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"noSearchIcon\",\n          alt: \"noSearchIcon\",\n          src: noSearchIcon,\n          height: \"17\",\n          width: \"17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)]\n      }, sortedPosts.length, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this);\n      //console.log(postSectionInfo);\n    } else if (this.props.page === \"community\") {\n      postSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"posts\",\n        children: listPosts\n      }, \"community\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 32\n      }, this);\n    }\n    //console.log(listPosts);\n\n    //console.log(\"BEFORE IF\");\n    if (Array.isArray(postSectionInfo)) {\n      console.warn(\"postSectionInfo is an array!:\", postSectionInfo);\n    }\n    return postSectionInfo;\n  }\n}\nexport class Post extends React.Component {\n  render() {\n    // console.log(\"THIS IS THE DATE\", this.props.startDate);\n    let topOfPost;\n    if (this.props.page === \"home\") {\n      topOfPost = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topOfPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comName\",\n          children: this.props.community\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: this.props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimeStamp, {\n          postedDate: this.props.startDate\n        }, this.props.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 22\n      }, this);\n    } else if (this.props.page === \"community\") {\n      topOfPost = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topOfPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: this.props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimeStamp, {\n          postedDate: this.props.startDate\n        }, this.props.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 22\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      onClick: this.handlePostView,\n      children: [topOfPost, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: this.props.postTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), this.props.postlinkFlairID, this.props.first20, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"viewIcon\",\n            id: \"viewIcon\",\n            src: viewIcon,\n            height: \"20\",\n            width: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"counters\",\n            children: this.props.viewCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"commentIcon\",\n            src: commentIcon,\n            height: \"17\",\n            width: \"17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"counters\",\n            children: this.props.commentCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upVoteButton\",\n            disabled: !this.props.loggedIn,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"upvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: upvoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"downVoteButton\",\n            disabled: !this.props.loggedIn,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"downvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: downVoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"counters\",\n            children: this.props.upVotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 8\n    }, this);\n  }\n}\nexport function getPost(post, communities, comments, linkFlairs) {\n  //console.log(post);\n  // console.log(linkFlairs);\n  //console.log(\"THIS IS THE COMMUNITIES in Get post\", communities)\n  //console.log(\"GETPOST\", post)\n  const postID = post._id;\n  const community = getCommunity(post._id, communities);\n  const userName = post.postedBy;\n  const startDate = post.postedDate;\n  const postTitle = post.title;\n  const postlinkFlairID = getLinkFlair(post.linkFlairID, linkFlairs);\n  const first20 = post.content.substring(0, 80);\n  const viewCount = post.views;\n  const commentCount = getCommentNum(post, comments);\n  const upVotes = post.upVotes;\n  return [community, userName, startDate, postTitle, postlinkFlairID, first20, viewCount, commentCount, postID, upVotes];\n}\nexport class TimeStamp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      startDate: new Date(props.postedDate)\n    };\n  }\n  updateTime(diff) {\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30));\n    const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 30 * 12));\n    if (seconds < 60) {\n      //console.log(\"Time Difference: \" + seconds + \" seconds\");\n      return seconds + \" second(s) ago\";\n    } else if (minutes < 60) {\n      //console.log(\"Time Difference: \" + minutes + \" minutes\");\n      return minutes + \" minute(s) ago\";\n    } else if (hours < 24) {\n      //console.log(\"Time Difference: \" + hours + \" hours\");\n      return hours + \" hour(s) ago\";\n    } else if (days < 30) {\n      //console.log(\"Time Difference: \" + days + \" days\");\n      return days + \" day(s) ago\";\n    } else if (months < 12) {\n      //console.log(\"Time Difference: \" + months + \" months\");\n      return months + \" month(s) ago\";\n    } else {\n      //console.log(\"Time Difference: \" + years + \" years\");\n      return years + \" year(s) ago\";\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeStamp\",\n      id: this.props.id,\n      children: this.updateTime(this.state.date - this.state.startDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }, this);\n  }\n  componentDidMount() {\n    //this.timerID = setInterval(\n    //  ()=> this.setState({date: new Date()}), 1000\n    //);\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n}\nexport function getCommunity(postID, communities) {\n  //console.log(\"POST ID\", postID)\n  //console.log(\"COMMUNITIES\", communities)\n  const community = communities.find(community => {\n    //console.log(\"Checking community:\", community.postIDs);\n    //console.log(\"Checking for:\", postID);\n    return community.postIDs.includes(postID);\n  }) || {\n    name: \"hsjkdhkfj\"\n  };\n\n  //console.log(\"POST IDS\", postID)\n  //console.log(\"COMMUNITY NAME\", community.name)\n  return community.name;\n}\nfunction getCommentNum(post, comments) {\n  // console.log(\"POST OR COMMENT: \");\n  // console.log(post);\n  //console.log(\"THESE ARE THE COMMENTS\", comments);\n\n  if (post === null || post.commentIDs.length === 0 || post.commentIDs === null) {\n    // console.log(\"IN NULL RN BRO\");\n    return 0;\n  }\n  let comment;\n  let total = post.commentIDs.length;\n  for (let i = 0; i < total; i++) {\n    comment = getComment(post.commentIDs[i], comments);\n    if (comment != null) {\n      total += getCommentNum(comment, comments);\n    }\n  }\n  return total;\n}\nfunction getLinkFlair(linkFlairID, linkFlairs) {\n  // console.log(\"THIS IS THE LINK FLAIR ID\", linkFlairs)\n  // console.log(\"THIS IS THE linkflair id to look for\", linkFlairID)\n  const linkFlair = linkFlairs.find(flair => flair._id === linkFlairID);\n  if (!linkFlair) {\n    return \"not FOUND\";\n  }\n  return linkFlair.content;\n}\nexport function getComment(commentName, comments) {\n  //console.log(\"getComment\", comments);\n  //console.log(\"RETURNING THIS: \", comments.find(comment => String(comment._id) === String(commentName)));\n  return comments.find(comment => String(comment._id) === String(commentName)) || console.log(\"CANT FIND THIS\", commentName);\n}\nfunction postsList(postsToDisplay, order, communities, comments, linkFlairs) {\n  //console.log(\"THIS IS THE POST BEFORE GOING TO ORDER\", postsToDisplay);\n  // console.log(\"IN POSTSLIST\", postsToDisplay);\n  //console.log(\"BEFORE communities in postsList\", communities);\n  const sortedList = order(postsToDisplay, comments);\n  //console.log(\"Sorted posts:\", sortedList);\n  //console.log(postsToDisplay);\n  const postsList = sortedList.map(function (post, index) {\n    //console.log(\"AFTER communities in postsList\", communities);\n    let postInfo = getPost(post, communities, comments, linkFlairs);\n    //console.log(\"postsLIST\", postInfo)\n    const linkFlair = postInfo[4] !== 'not FOUND' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"linkFlair\",\n        children: postInfo[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 9\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(Post, {\n      postID: postInfo[8],\n      community: postInfo[0],\n      userName: postInfo[1],\n      startDate: postInfo[2],\n      postTitle: postInfo[3],\n      postlinkFlairID: linkFlair,\n      first20: postInfo[5],\n      viewCount: postInfo[6],\n      commentCount: postInfo[7],\n      upVotes: postInfo[9]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 9\n    }, this);\n  });\n  return postsList;\n}\nexport const orderNewest = postToDisplay => {\n  //console.log(\"pressed newest\");\n  //console.log(\"This is conName:\" + comName);\n  //console.log(\"THESE ARE THE POSTS TO DISPLAY IN NEWEST: \",postToDisplay)\n  let comPosts = postToDisplay;\n  // if(page == \"community\"){\n  //   comPosts = filterPosts(\"community\", comName);\n  // }\n\n  // if(page == \"search\"){\n  //   comPosts = Array.from(filterPosts(\"search\", comName));\n  // }\n  //console.log(\"IN HERE\");\n  comPosts.sort(function (a, b) {\n    return new Date(b.postedDate) - new Date(a.postedDate);\n  });\n  //console.log(comPosts);\n\n  return comPosts;\n\n  //console.log(\"Newest\");\n  //console.log(comPosts);\n\n  //postsList(comPosts, page);\n  //console.log(posts);\n};\nexport const orderOldest = postToDisplay => {\n  //console.log(\"BEING ORDERED BY OLDEST\")\n  // console.log(\"pressed oldest\");\n  let comPosts = postToDisplay;\n  // if(page == \"community\"){\n  //   comPosts = filterPosts(\"community\", comName);\n  // }\n\n  // if(page == \"search\"){\n  //   comPosts = Array.from(filterPosts(\"search\", comName));\n  // }\n\n  // console.log(\"BEFORE\", comPosts);\n\n  comPosts.sort(function (a, b) {\n    // console.log(\"A\", a.postedDate)\n    // console.log(\"B\", b.postedDate)\n    return new Date(a.postedDate) - new Date(b.postedDate);\n  });\n  //console.log(\"After\", comPosts);\n  return comPosts;\n\n  //postsList(comPosts, page);\n};\nexport const orderActive = (postToDisplay, comments) => {\n  //console.log(\"pressed active\");\n  let comPosts = postToDisplay;\n  // if(page == \"community\"){\n  //   comPosts = filterPosts(\"community\", comName);\n  // }\n\n  // if(page == \"search\"){\n  //   comPosts = Array.from(filterPosts(\"search\", comName));\n  // }\n\n  let activePost = new Map([]);\n  for (const post of comPosts) {\n    //let commentNum = getCommentNum(x, comments)\n    //console.log(\"COMMENTS\", comments);\n    let commentArray = getTotalComments(post, comments);\n    //console.log(\"COMMENT ARRAY\", commentArray);\n    commentArray.sort(function (a, b) {\n      return new Date(b.commentedDate) - new Date(a.commentedDate);\n    });\n\n    // If the post has comments, take the most recent comment date\n    // If no comments, use the post creation date\n    let recentDate = commentArray.length > 0 ? new Date(commentArray[0].commentedDate) : new Date(post.postedDate);\n    activePost.set(post, recentDate);\n\n    //activePost.set(post, commentArray[0].commentedDate);\n  }\n  comPosts = Array.from(activePost);\n  //console.log(\"BEFORE\");\n  //console.log(comPosts);\n\n  comPosts.sort(function (a, b) {\n    //console.log(\"THIS IS A\", a[0].postID,  \"THIS IS B\", b[0].postID)\n    if (b[1] === a[1]) {\n      //console.log(\"SAME DATES FOR COMMENTS DETECTED\");\n      return new Date(b[0].postedDate) - new Date(a[0].postedDate);\n    }\n    return b[1] - a[1];\n  });\n\n  //console.log(\"AFTER\");\n  //console.log(comPosts);\n  comPosts = comPosts.map(function (element) {\n    return element[0];\n  });\n  return comPosts;\n  //postsList(comPosts, page);\n};\nexport function getTotalComments(post, comments) {\n  let commentArray = [];\n  if (post === null || post.commentIDs.length === 0 || post.commentIDs === null) {\n    return commentArray;\n  }\n  post.commentIDs.sort(function (a, b) {\n    //console.log(\"in the sort\");\n    return new Date(getComment(b, comments).commentedDate) - new Date(getComment(a, comments).commentedDate);\n  });\n  // console.log(\"THIS IS SORTED\");\n  //console.log(\"COMMENT IDS\", post.commentIDs);\n\n  let total = post.commentIDs.length;\n  for (let i = 0; i < total; i++) {\n    let comment = getComment(post.commentIDs[i], comments);\n    if (comment != null) {\n      // console.log(\"COMMENT GETTING PUSHED INTO ARRAY\");\n      // console.log(comment);\n      commentArray.push(comment);\n      let children = getTotalComments(comment, comments);\n      // console.log(\"CHILDREN BEING CONCAT\");\n      // console.log(children);\n\n      commentArray = commentArray.concat(children);\n      // console.log(\"CONCATING\");\n      // console.log(commentArray.concat(children));\n      // console.log(\"ARRAY AFTER\");\n      // console.log(commentArray);\n    }\n  }\n  // console.log(\"ARRAY BEING RETURNED\");\n  // console.log(commentArray);\n  return commentArray;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"InfoSection\");\n$RefreshReg$(_c2, \"PostCount\");","map":{"version":3,"names":["viewIcon","commentIcon","noSearchIcon","memberCountIcon","postCountIcon","upvoteIcon","downVoteIcon","React","useState","jsxDEV","_jsxDEV","TheHomePage","Component","constructor","props","state","order","orderNewest","updateOrder","bind","resetOrder","newOrder","setState","console","log","render","setPage","goToPostPage","posts","communities","comments","linkFlairs","handleOrderButtonClick","loggedIn","id","className","children","HomePageHeader","fileName","_jsxFileName","lineNumber","columnNumber","PostSection","page","InfoSection","ButtonDisplay","orderOldest","orderActive","_s","upVotes","setUpvotes","checkprops","toLowerCase","trim","comName","description","TimeStamp","postedDate","startDate","alt","src","comPostCount","memberCount","length","txtInput","userName","title","linkFlairInput","content","height","width","viewCount","commentCount","disabled","onClick","setCommentOrReplyParentID","postID","setCommentOrReply","_c","PostCount","arrayLength","_c2","sortedPosts","postsList","listPosts","map","post","index","first20","postTitle","Post","postSectionInfo","Array","isArray","warn","topOfPost","community","handlePostView","postlinkFlairID","getPost","_id","getCommunity","postedBy","getLinkFlair","linkFlairID","substring","views","getCommentNum","date","Date","updateTime","diff","seconds","Math","floor","minutes","hours","days","months","years","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","find","postIDs","includes","name","commentIDs","comment","total","i","getComment","linkFlair","flair","commentName","String","postsToDisplay","sortedList","postInfo","postToDisplay","comPosts","sort","a","b","activePost","Map","commentArray","getTotalComments","commentedDate","recentDate","set","from","element","push","concat","$RefreshReg$"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/homePage.js"],"sourcesContent":["import '../stylesheets/homePage.css';\nimport viewIcon from '../images/view.svg'\nimport commentIcon from '../images/comment.svg'\nimport noSearchIcon from '../images/no-search-result-icon.svg'\nimport memberCountIcon from '../images/memberCountIcon.svg'\nimport postCountIcon from '../images/postCountIcon.svg'\nimport upvoteIcon from '../images/upvoteIcon.png'\nimport downVoteIcon from '../images/downvoteIcon.png'\nimport React, {useState} from 'react';\n\n\nexport default class TheHomePage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {order: orderNewest};\n    \n        this.updateOrder = this.updateOrder.bind(this);\n        this.resetOrder = this.resetOrder.bind(this);\n    }\n\n    updateOrder(newOrder){\n        //console.log(\"Updating order to: \", newOrder);\n        this.setState({order: newOrder}, () => {\n            console.log(\"Updated state:\", this.state.order);\n        });\n    }\n\n    resetOrder(){\n        //console.log(\"Resetting to newest\");\n        this.setState({order: orderNewest});\n    }\n\n    render(){\n        const {setPage, goToPostPage, posts, communities, comments, linkFlairs, handleOrderButtonClick, loggedIn} = this.props\n        //console.log(\"HOME PAGE PROPS\", this.props);\n        return(\n            <div id=\"homePage\" className=\"main_cont_divs\">\n                <HomePageHeader handleOrderButtonClick={handleOrderButtonClick} updateOrder={this.updateOrder} setPage={setPage}/>\n                <PostSection \n                    page={\"home\"} \n                    posts={posts} \n                    comments={comments} \n                    linkFlairs={linkFlairs} \n                    communities={communities} \n                    order={this.state.order} \n                    goToPostPage={goToPostPage}\n                    loggedIn={loggedIn}\n                />\n            </div>\n        ); \n    }\n    \n}\n\nclass HomePageHeader extends React.Component{   \n    render(){\n        const {setPage} = this.props;\n        //console.log(\"IN HOME PAGE HEADER\", this.props);\n        return(\n            <div id=\"header\">\n                <InfoSection page={\"home\"} setPage={setPage}/>\n                <ButtonDisplay\n                    handleOrderButtonClick = {this.props.handleOrderButtonClick}\n                    updateOrder={this.props.updateOrder}\n                    orderNewest={orderNewest}\n                    orderOldest={orderOldest}\n                    orderActive={orderActive}\n                />\n            </div>\n        );\n    }\n}\n\n\n\nexport function InfoSection(props){\n    const [upVotes, setUpvotes] = useState(props.upVotes);\n    //let setPage = props.setPage;\n    const checkprops = props.page.toLowerCase().trim();\n    //console.log(\"propppppppssssssss\",props)\n    if(checkprops === 'home'){\n        return(\n            <header id=\"left-side\">\n                All Posts \n            </header>\n        );\n    }\n    else if(checkprops === 'community'){\n        return(\n        <header id=\"left-side\">\n            <div className=\"comName\">\n            {props.comName}\n            </div>\n            <div className=\"description\">\n            {props.description}  \n            </div>\n\n            Created:  <TimeStamp key={props.startDate} postedDate={props.startDate}/>\n            \n            <div className=\"postCount\"> \n            {/* Post Count: {props.comPostCount} Member Count: {props.memberCount} */}\n            {<img id=\"postCountIcon\" alt=\"postCountIcon\" src={postCountIcon}/>} {props.comPostCount} {<img id=\"memberCountIcon\" alt=\"memberCountIcon\" src={memberCountIcon}/>} {props.memberCount}\n            </div> \n        </header>\n        );\n    }else if(checkprops === 'search'){\n        if(props.posts.length > 0){\n            return(\n                <header id=\"left-side\">\n                    Results for: {props.txtInput}\n                </header>\n            );\n        }\n        else{\n            return(\n                <header id=\"left-side\">\n                    No results found for: {props.txtInput}\n                </header>\n            );\n        }\n    }else{\n        //console.log(\"IN HERE BRO\", props);\n        return(\n            <header id=\"left-side\">\n                <div className=\"postTitle\">\n                    <div className=\"comName\">{props.comName}</div> \n                    <span>•</span> \n                        <TimeStamp key={props.startDate} postedDate={props.startDate}/>\n                </div>\n                <div className=\"postTitle\">\n                {props.userName}\n                </div>\n                <div id=\"postInfo\">\n                <div className=\"comName\">\n                {props.title}\n                </div> \n                {props.linkFlairInput}\n                <div className=\"content\">\n                {props.content}\n                </div>\n                </div>\n                <div className=\"counters\">\n                    <div className='counterDivs'>\n                        <img\n                            alt=\"viewingIcon\"\n                            className=\"viewIcon\"\n                            src={viewIcon}\n                            height=\"20\"\n                            width=\"20\"\n                        />\n                        {props.viewCount}\n                    </div>\n                \n                    <div className='counterDivs'>\n                        <img\n                            alt=\"commentingIcon\"\n                            src={commentIcon}\n                            height=\"17\"\n                            width=\"17\"\n                        />\n                        {props.commentCount}\n                    </div>\n                    \n                    {/* Post Page up/down votes */}\n                    <div className=\"voteDiv\">\n                        <button className='upVoteButton' disabled={!props.loggedIn}>\n                            <img\n                                className='upvoteIcon'\n                                alt=\"voteCountIcon\"\n                                src={upvoteIcon}\n                            />\n                        </button>\n                        <button className='downVoteButton' disabled={!props.loggedIn}>\n                            <img\n                            className='downvoteIcon'\n                            alt=\"voteCountIcon\"\n                            src={downVoteIcon}\n                        />\n                        </button>\n                        {upVotes}\n                    </div>\n                    {/* up and down votes */}\n                </div>\n                <button id=\"create_comment_button\" \n                    disabled={!props.loggedIn}\n                    onClick={() => { \n                    props.setPage(\"NewCommentPageView\"); \n                    props.setCommentOrReplyParentID(props.postID); \n                    props.setCommentOrReply(\"comment\");\n\n                }}\n                >Add a Comment\n                </button>\n                {/* comment button */}\n            </header>\n        );\n    }\n}\n\nexport class ButtonDisplay extends React.Component{\n    constructor(props) {\n        super(props);\n        this.orderNewest = this.orderNewest.bind(this);\n        this.orderOldest = this.orderOldest.bind(this);\n        this.orderActive = this.orderActive.bind(this);\n    }\n    \n    orderNewest(){\n        //console.log(\"Newest Clicked\");\n        this.props.handleOrderButtonClick();\n        this.props.updateOrder(orderNewest);\n    }\n\n    orderOldest(){\n        //console.log(\"Oldest Clicked\");\n        this.props.handleOrderButtonClick();\n        this.props.updateOrder(orderOldest)\n    }\n\n    orderActive(){\n        //console.log(\"Active Clicked\");\n        this.props.handleOrderButtonClick();\n        this.props.updateOrder(orderActive);\n    }\n\n\n    render(){\n        return(\n            <div id=\"buttonSection\">\n                <button className=\"rightSide\" id=\"newest\" onClick={this.orderNewest}>\n                    Newest\n                </button>\n                <button className=\"rightSide\" id=\"oldest\" onClick={this.orderOldest}>\n                    Oldest\n                </button>\n                \n                <button className=\"rightSide\" id=\"active\" onClick={this.orderActive}>\n                    Active\n                </button>\n            </div>\n        );\n    }\n}\n\nfunction PostCount(props){\n    return(\n        <div id=\"postCount\">\n            {props.arrayLength} Posts\n        </div>\n    );\n}\n\nexport class PostSection extends React.Component{\n\n    render(){\n        const {posts, communities, order, comments, linkFlairs} = this.props;\n        // console.log(\"THIS SI THE ORDER\", order)\n        //console.log(\"IN POST SECTION\", this.props.page)\n        //console.log(\"IN POST SECTION\", this.props.goToPostPage)\n        //console.log(\"POST SECTION COMMUNITIES\", communities);\n        const sortedPosts = postsList(posts, order, communities, comments, linkFlairs)\n        const listPosts = sortedPosts.map((post, index) =>{\n            //console.log(\"THIS IS POST\", this.openPostView)\n            // console.log(\"CURRENT POST TITLE\", post)\n            // console.log(post.props.postID)\n            //console.log(\"IN THE POST SECTION\", post.props)\n            return (\n            <div key={post.props.postID} id={\"id-\" + post.props.first20} onClick={\n                () => {\n                    //console.log(\"BEFORE ASSIGNMENT\")\n                    this.props.goToPostPage(post.props.postTitle)\n                    //console.log(\"AFTER ASSIGNMENT\")\n                    }}>\n                <Post \n                    {...post.props}\n                    page={this.props.page}\n                    loggedIn={this.props.loggedIn}\n                    //openPost={this.openPostView} // Pass the function as prop\n                />\n            </div>\n            );\n        })\n        //console.log(\"listPosts\", listPosts)\n        let postSectionInfo;\n        if(this.props.page === \"home\"){\n            postSectionInfo = \n            (\n            <div key={sortedPosts.length} id=\"posts\">\n                <PostCount arrayLength = {sortedPosts.length}/>\n                {listPosts}\n                {sortedPosts.length === 0 && (\n                    <img\n                    id=\"noSearchIcon\"\n                    alt=\"noSearchIcon\"\n                    src={noSearchIcon}\n                    height=\"17\"\n                    width=\"17\"\n                    />\n                )}\n            </div>);\n            //console.log(postSectionInfo);\n        }\n        else if(this.props.page === \"community\"){\n            postSectionInfo = (<div key={\"community\"} id=\"posts\">{listPosts}</div>);\n        }\n        //console.log(listPosts);\n\n        //console.log(\"BEFORE IF\");\n        if (Array.isArray(postSectionInfo)) {\n            console.warn(\"postSectionInfo is an array!:\", postSectionInfo);\n        }\n        return postSectionInfo;\n    }\n}\n\n\nexport class Post extends React.Component{\n    render(){\n    // console.log(\"THIS IS THE DATE\", this.props.startDate);\n    let topOfPost;\n    if(this.props.page === \"home\"){\n        topOfPost = (<div className=\"topOfPost\">\n            <div className=\"comName\">\n                {this.props.community}\n            </div>\n            <span>•</span>\n            <div className=\"user\">\n            {this.props.userName}\n            </div>\n            <span>•</span>\n            <TimeStamp key={this.props.startDate} postedDate={this.props.startDate}/>\n        </div>);\n    }\n    else if(this.props.page === \"community\"){\n        topOfPost = (<div className=\"topOfPost\">\n            <div className=\"user\">\n            {this.props.userName}\n            </div>\n            <span>•</span>\n            <TimeStamp key={this.props.startDate} postedDate={this.props.startDate}/>\n        </div>);\n    }\n    return(\n       <div className=\"post\" onClick={this.handlePostView}>\n        {topOfPost}\n        <div className=\"postTitle\">\n        {this.props.postTitle}\n        </div>\n        {this.props.postlinkFlairID}\n        {this.props.first20}\n        <div className=\"counters\">\n            <div className='counterDivs'>\n                <img\n                    alt=\"viewIcon\"\n                    id=\"viewIcon\"\n                    src={viewIcon}\n                    height=\"20\"\n                    width=\"20\"\n                />\n                <span className=\"counters\">\n                {this.props.viewCount}\n                </span>\n            </div>\n            \n            <div className='counterDivs'>   \n                <img\n                    alt=\"commentIcon\"\n                    src={commentIcon}\n                    height=\"17\"\n                    width=\"17\"\n                />\n                <span className=\"counters\">\n                {this.props.commentCount}\n                </span>\n            </div>\n            \n\n            {/* homepage up/down votes*/}\n            <div className=\"voteDiv\">\n                <button className='upVoteButton' disabled={!this.props.loggedIn}>\n                    <img\n                        className='upvoteIcon'\n                        alt=\"voteCountIcon\"\n                        src={upvoteIcon}\n                    />\n                </button>\n                <button className='downVoteButton' disabled={!this.props.loggedIn}>\n                    <img\n                    className='downvoteIcon'\n                    alt=\"voteCountIcon\"\n                    src={downVoteIcon}\n                />\n                </button>\n                <span className=\"counters\">\n                {this.props.upVotes}\n                </span>\n            </div>\n            {/* up and down votes*/}\n\n        </div>\n       </div> \n    );\n}\n}\n\nexport function getPost(post, communities, comments, linkFlairs){\n    //console.log(post);\n    // console.log(linkFlairs);\n    //console.log(\"THIS IS THE COMMUNITIES in Get post\", communities)\n    //console.log(\"GETPOST\", post)\n    const postID = post._id;\n    const community = getCommunity(post._id, communities);\n    const userName = post.postedBy;\n    const startDate = post.postedDate;\n    const postTitle = post.title;\n    const postlinkFlairID = getLinkFlair(post.linkFlairID, linkFlairs)\n    const first20 = post.content.substring(0, 80);\n    const viewCount = post.views\n    const commentCount = getCommentNum(post, comments);\n    const upVotes = post.upVotes;\n  \n    return [community, userName, startDate, postTitle, postlinkFlairID, first20, viewCount, commentCount, postID, upVotes];\n}\n\n\nexport class TimeStamp extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        this.state = {date: new Date(), startDate: new Date(props.postedDate)};\n    }\n    \n    updateTime(diff){\n        const seconds = Math.floor(diff/1000);\n        const minutes = Math.floor(diff/(1000 * 60));\n        const hours = Math.floor(diff/(1000 * 60 * 60));\n        const days = Math.floor(diff/(1000 * 60 * 60 * 24));\n        const months = Math.floor(diff/(1000 * 60 * 60 * 24 * 30));\n        const years = Math.floor(diff/(1000 * 60 * 60 * 24 * 30 * 12));\n    \n    \n        if(seconds < 60){\n        //console.log(\"Time Difference: \" + seconds + \" seconds\");\n        return seconds + \" second(s) ago\";\n        }\n        else if(minutes < 60){\n        //console.log(\"Time Difference: \" + minutes + \" minutes\");\n        return minutes + \" minute(s) ago\";\n        }\n        else if(hours < 24){\n        //console.log(\"Time Difference: \" + hours + \" hours\");\n        return hours + \" hour(s) ago\";\n        }\n        else if(days < 30){\n        //console.log(\"Time Difference: \" + days + \" days\");\n        return days + \" day(s) ago\";\n        }\n        else if(months < 12){\n        //console.log(\"Time Difference: \" + months + \" months\");\n        return months + \" month(s) ago\";\n        }\n        else{\n        //console.log(\"Time Difference: \" + years + \" years\");\n        return years + \" year(s) ago\";\n        }\n    }\n    \n    render()\n    {   \n        return (\n          <div className=\"timeStamp\" id={this.props.id}>\n              {this.updateTime(this.state.date - this.state.startDate)}\n          </div>\n        );\n    }\n    \n    componentDidMount()\n    {\n        //this.timerID = setInterval(\n        //  ()=> this.setState({date: new Date()}), 1000\n        //);\n        this.timerID = setInterval(()=> this.tick(), 1000);\n    }\n    \n    componentWillUnmount()\n    {\n        clearInterval(this.timerID);\n    }\n    \n    tick()\n    {\n        this.setState({date: new Date()});\n    }\n}\n\nexport function getCommunity(postID, communities){\n    //console.log(\"POST ID\", postID)\n    //console.log(\"COMMUNITIES\", communities)\n    const community = communities.find(community => {\n        //console.log(\"Checking community:\", community.postIDs);\n        //console.log(\"Checking for:\", postID);\n        return community.postIDs.includes(postID);\n      }) || { name: \"hsjkdhkfj\" };\n    \n    //console.log(\"POST IDS\", postID)\n    //console.log(\"COMMUNITY NAME\", community.name)\n    return community.name\n  }\n  \n  function getCommentNum(post, comments){\n    // console.log(\"POST OR COMMENT: \");\n    // console.log(post);\n    //console.log(\"THESE ARE THE COMMENTS\", comments);\n  \n    if(post === null || post.commentIDs.length === 0 || post.commentIDs === null){\n      // console.log(\"IN NULL RN BRO\");\n      return 0;\n    }\n    let comment;\n    let total = post.commentIDs.length;\n    for(let i = 0; i < total; i++){\n      comment = getComment(post.commentIDs[i], comments);\n      if(comment != null){\n        total += getCommentNum(comment, comments);\n      }\n    }\n    return total;\n  }\n  \n  function getLinkFlair(linkFlairID, linkFlairs){\n    // console.log(\"THIS IS THE LINK FLAIR ID\", linkFlairs)\n    // console.log(\"THIS IS THE linkflair id to look for\", linkFlairID)\n    const linkFlair = linkFlairs.find(flair => flair._id === linkFlairID);\n    if(!linkFlair){\n      return \"not FOUND\";\n    }\n    return linkFlair.content;\n  }\n  \n  export function getComment(commentName, comments){\n    //console.log(\"getComment\", comments);\n    //console.log(\"RETURNING THIS: \", comments.find(comment => String(comment._id) === String(commentName)));\n    return comments.find(comment => String(comment._id) === String(commentName)) || console.log(\"CANT FIND THIS\", commentName);\n  }\n\nfunction postsList(postsToDisplay, order, communities, comments, linkFlairs){\n    //console.log(\"THIS IS THE POST BEFORE GOING TO ORDER\", postsToDisplay);\n    // console.log(\"IN POSTSLIST\", postsToDisplay);\n    //console.log(\"BEFORE communities in postsList\", communities);\n    const sortedList = order(postsToDisplay, comments);\n    //console.log(\"Sorted posts:\", sortedList);\n    //console.log(postsToDisplay);\n    const postsList = sortedList.map(function(post, index){\n        //console.log(\"AFTER communities in postsList\", communities);\n        let postInfo = getPost(post, communities, comments, linkFlairs);\n        //console.log(\"postsLIST\", postInfo)\n        const linkFlair = postInfo[4] !== 'not FOUND' ?\n        (\n        <div>\n            <span className=\"linkFlair\">\n                {postInfo[4]}\n            </span>\n        </div>\n        ) : null;\n        return(\n        <Post\n            postID = {postInfo[8]}\n            community = {postInfo[0]}\n            userName = {postInfo[1]}\n            startDate = {postInfo[2]}\n            postTitle= {postInfo[3]}\n            postlinkFlairID = {linkFlair}\n            first20 = {postInfo[5]}\n            viewCount = {postInfo[6]}\n            commentCount = {postInfo[7]}\n            upVotes = {postInfo[9]}\n        />);\n    })\n\n    return postsList;\n}\n\nexport const orderNewest = (postToDisplay) => {\n    //console.log(\"pressed newest\");\n    //console.log(\"This is conName:\" + comName);\n    //console.log(\"THESE ARE THE POSTS TO DISPLAY IN NEWEST: \",postToDisplay)\n    let comPosts = postToDisplay;\n    // if(page == \"community\"){\n    //   comPosts = filterPosts(\"community\", comName);\n    // }\n  \n    // if(page == \"search\"){\n    //   comPosts = Array.from(filterPosts(\"search\", comName));\n    // }\n    //console.log(\"IN HERE\");\n    comPosts.sort(function(a, b){\n      return(new Date(b.postedDate) - new Date(a.postedDate))\n    })\n    //console.log(comPosts);\n\n    return comPosts;\n  \n    //console.log(\"Newest\");\n    //console.log(comPosts);\n    \n    //postsList(comPosts, page);\n    //console.log(posts);\n  }\n  \n  export const orderOldest = (postToDisplay) => {\n    //console.log(\"BEING ORDERED BY OLDEST\")\n    // console.log(\"pressed oldest\");\n    let comPosts = postToDisplay;\n    // if(page == \"community\"){\n    //   comPosts = filterPosts(\"community\", comName);\n    // }\n  \n    // if(page == \"search\"){\n    //   comPosts = Array.from(filterPosts(\"search\", comName));\n    // }\n\n   // console.log(\"BEFORE\", comPosts);\n  \n    comPosts.sort(function(a, b){\n        // console.log(\"A\", a.postedDate)\n        // console.log(\"B\", b.postedDate)\n      return(new Date(a.postedDate) - new Date(b.postedDate))\n    })\n    //console.log(\"After\", comPosts);\n    return comPosts;\n    \n    //postsList(comPosts, page);\n\n  }\n  \n  export const orderActive = (postToDisplay, comments) => {\n    //console.log(\"pressed active\");\n    let comPosts = postToDisplay;\n    // if(page == \"community\"){\n    //   comPosts = filterPosts(\"community\", comName);\n    // }\n  \n    // if(page == \"search\"){\n    //   comPosts = Array.from(filterPosts(\"search\", comName));\n    // }\n  \n    let activePost = new Map([]);\n    for(const post of comPosts){\n        //let commentNum = getCommentNum(x, comments)\n        //console.log(\"COMMENTS\", comments);\n        let commentArray = getTotalComments(post, comments);\n        //console.log(\"COMMENT ARRAY\", commentArray);\n        commentArray.sort(function(a, b){\n            return(new Date(b.commentedDate) - new Date(a.commentedDate))\n        });\n\n        // If the post has comments, take the most recent comment date\n        // If no comments, use the post creation date\n        let recentDate = commentArray.length > 0 ? new Date(commentArray[0].commentedDate) : new Date(post.postedDate);\n        activePost.set(post, recentDate);\n\n        //activePost.set(post, commentArray[0].commentedDate);\n    }\n    comPosts = Array.from(activePost)\n    //console.log(\"BEFORE\");\n    //console.log(comPosts);\n  \n    comPosts.sort(function(a, b){\n        //console.log(\"THIS IS A\", a[0].postID,  \"THIS IS B\", b[0].postID)\n        if(b[1] === a[1]){\n            //console.log(\"SAME DATES FOR COMMENTS DETECTED\");\n            return (new Date(b[0].postedDate) - new Date(a[0].postedDate))\n        }\n      return(b[1] - a[1]);\n    });\n  \n    //console.log(\"AFTER\");\n    //console.log(comPosts);\n    comPosts = comPosts.map(function(element){\n      return element[0];\n    })\n    \n    return comPosts;\n    //postsList(comPosts, page);\n  }\n\n\n\nexport function getTotalComments(post, comments){\n    let commentArray = [];\n    if(post === null || post.commentIDs.length === 0 || post.commentIDs === null){\n      return commentArray;\n    }\n\n    post.commentIDs.sort(function(a,b){\n      //console.log(\"in the sort\");\n      return(new Date(getComment(b, comments).commentedDate) - new Date(getComment(a,  comments).commentedDate))\n    });\n    // console.log(\"THIS IS SORTED\");\n    //console.log(\"COMMENT IDS\", post.commentIDs);\n  \n    let total = post.commentIDs.length;\n    for(let i = 0; i < total; i++){\n      let comment = getComment(post.commentIDs[i], comments);\n      if(comment != null){\n        // console.log(\"COMMENT GETTING PUSHED INTO ARRAY\");\n        // console.log(comment);\n        commentArray.push(comment);\n  \n        let children = getTotalComments(comment,  comments);\n        // console.log(\"CHILDREN BEING CONCAT\");\n        // console.log(children);\n  \n        \n        commentArray = commentArray.concat(children);\n        // console.log(\"CONCATING\");\n        // console.log(commentArray.concat(children));\n        // console.log(\"ARRAY AFTER\");\n        // console.log(commentArray);\n      }\n    }\n    // console.log(\"ARRAY BEING RETURNED\");\n    // console.log(commentArray);\n    return commentArray;\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}