{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/register.js\",\n  _s = $RefreshSig$();\nimport '../stylesheets/register.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TheRegisterPage({\n  setPage\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    displayName: '',\n    secretPassword: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    displayName: '',\n    secretPassword: '',\n    confirmPassword: ''\n  });\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n  };\n  const validateForm = async () => {\n    const newErrors = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      displayName: '',\n      secretPassword: \"\",\n      confirmPassword: ''\n    };\n    let isValid = true;\n    //send object to backend\n    // const currentEmailAndDisplayName = {\n    //     firstName: formData.firstName,\n    //     lastName: formData.lastName,\n    //     email: formData.email,\n    //     displayName: formData.displayName,\n    //     secretPassword: formData.secretPassword,\n    // };\n\n    const forbiddenWords = [formData.firstName.toLowerCase(), formData.lastName.toLowerCase(), formData.displayName.toLowerCase(), formData.email.toLowerCase()];\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    //Name fields cannot be empty\n    if (formData.firstName === \"\") {\n      newErrors.firstName = \"First name is required.\";\n      isValid = false;\n    }\n    if (formData.lastName === \"\") {\n      newErrors.lastName = \"Last name is required.\";\n      isValid = false;\n    }\n    if (!emailRegex.test(formData.email)) {\n      newErrors.email = \"Invalid email format.\";\n      isValid = false;\n    }\n\n    //check if it is already in the database\n    if (formData.email === \"\") {\n      newErrors.email = \"Email cannot be empty.\";\n      isValid = false;\n    }\n\n    //check if it is already in the database\n    if (formData.displayName === \"\" || formData.displayName.length > 100) {\n      newErrors.displayName = \"Display name cannot be empty\";\n      isValid = false;\n    }\n\n    //check if it is the same as secret password and send it back to backend for hashing\n    if (formData.secretPassword === \"\") {\n      newErrors.secretPassword = 'Password cannot be empty.';\n      isValid = false;\n    } else if (forbiddenWords.some(word => formData.secretPassword.toLowerCase().includes(word))) {\n      newErrors.secretPassword = \"Password cannot include your name, email, or display name.\";\n      isValid = false;\n    }\n    if (formData.confirmPassword === \"\" || formData.confirmPassword !== formData.secretPassword) {\n      newErrors.confirmPassword = 'Passwords do not match.';\n      isValid = false;\n    }\n    if (isValid) {\n      try {\n        const response = await axios.post('http://localhost:8000/checkUserAvailability', {\n          email: formData.email,\n          displayName: formData.displayName\n        });\n        if (!response.data.emailAvailable) {\n          newErrors.email = \"This email is already in use.\";\n          isValid = false;\n        }\n        if (!response.data.displayNameAvailable) {\n          newErrors.displayName = \"This display name is already in use.\";\n          isValid = false;\n        }\n      } catch (error) {\n        console.error(\"Error checking user availability:\", error);\n        newErrors.email = \"Error validating email or display name. Please try again.\";\n        isValid = false;\n      }\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const SubmitCommunityFormButton = async e => {\n    e.preventDefault();\n    if (!(await validateForm())) return;\n    const newUser = {\n      first: formData.firstName,\n      last: formData.lastName,\n      email: formData.email,\n      display: formData.displayName,\n      password: formData.secretPassword //password needs to be hashed in the backend\n    };\n    try {\n      const response = await axios.post('http://localhost:8000/createNewUser', newUser);\n\n      //clear form\n      setFormData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        displayName: '',\n        secretPassword: '',\n        confirmPassword: ''\n      });\n      console.log(response);\n      alert(\"New User Registered successfully!\");\n      setPage('welcome');\n    } catch (error) {\n      console.error(\"Error registering user:\", error);\n    }\n  };\n  const cancelButton = () => {\n    setFormData({\n      firstName: '',\n      lastName: '',\n      email: '',\n      displayName: '',\n      secretPassword: '',\n      confirmPassword: ''\n    });\n    setPage('welcome');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"registerUserDiv\",\n    className: \"main_cont_divs\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"registerFormContainer\",\n      onSubmit: SubmitCommunityFormButton,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"registerFormHeader\",\n        children: \"Register a New Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"registerFormDescription\",\n        children: \"Please enter the following fields to create your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"First Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n        // maxLength=\"100\"\n        ,\n        placeholder: \"Enter your first name\",\n        id: \"firstName\",\n        className: \"registerInputBox\",\n        value: formData.firstName,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register_firstName_error\",\n        className: \"errorMessage\",\n        children: errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"LastName\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Last Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n        //maxLength=\"100\"\n        ,\n        placeholder: \"Enter your last name\",\n        id: \"lastName\",\n        className: \"registerInputBox\",\n        value: formData.lastName,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register_lastName_error\",\n        className: \"errorMessage\",\n        children: errors.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Email Address\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n        //maxLength=\"100\"\n        ,\n        placeholder: \"Enter your email\",\n        id: \"email\",\n        className: \"registerInputBox\",\n        value: formData.email,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register_email_error\",\n        className: \"errorMessage\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"displayName\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Display Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n        //maxLength=\"100\"\n        ,\n        placeholder: \"Enter a display name\",\n        id: \"displayName\",\n        className: \"registerInputBox\",\n        value: formData.displayName,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register_displayName_error\",\n        className: \"errorMessage\",\n        children: errors.displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"secretPassword\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n        //maxLength=\"100\"\n        ,\n        placeholder: \"Enter a password\",\n        id: \"secretPassword\",\n        className: \"registerInputBox\",\n        value: formData.secretPassword,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register_secretPassword_error\",\n        className: \"errorMessage\",\n        children: errors.secretPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Confirm Your Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n        //maxLength=\"100\"\n        ,\n        placeholder: \"Re-enter your password\",\n        id: \"confirmPassword\",\n        className: \"registerInputBox\",\n        value: formData.confirmPassword,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"register_confirmPassword_error\",\n        className: \"errorMessage\",\n        children: errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"registerButtonDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"SubmitRegisterFormButton\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"cancel\",\n          id: \"cancelRegisterFormButton\",\n          onClick: cancelButton,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n_s(TheRegisterPage, \"jXLmZHRh+MGXp7uBwqR6vBSZfL4=\");\n_c = TheRegisterPage;\nvar _c;\n$RefreshReg$(_c, \"TheRegisterPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TheRegisterPage","setPage","_s","formData","setFormData","firstName","lastName","email","displayName","secretPassword","confirmPassword","errors","setErrors","handleInputChange","e","id","value","target","validateForm","newErrors","isValid","forbiddenWords","toLowerCase","emailRegex","test","length","some","word","includes","response","post","data","emailAvailable","displayNameAvailable","error","console","SubmitCommunityFormButton","preventDefault","newUser","first","last","display","password","log","alert","cancelButton","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","onChange","noValidate","onClick","_c","$RefreshReg$"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/register.js"],"sourcesContent":["import '../stylesheets/register.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function TheRegisterPage({setPage, }) {\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        displayName: '',\n        secretPassword: '',\n        confirmPassword: ''\n\n    });\n\n    const [errors, setErrors] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        displayName: '',\n        secretPassword: '',\n        confirmPassword: ''\n    });\n\n    const handleInputChange = (e) => {\n        const { id, value } = e.target;\n        setFormData({\n            ...formData,  \n            [id]: value   \n        });\n    };\n\n    const validateForm = async () => {\n        const newErrors = { firstName: '', lastName: '', email: '', displayName: '',  secretPassword: \"\", confirmPassword: '' };\n        let isValid = true;\n        //send object to backend\n        // const currentEmailAndDisplayName = {\n        //     firstName: formData.firstName,\n        //     lastName: formData.lastName,\n        //     email: formData.email,\n        //     displayName: formData.displayName,\n        //     secretPassword: formData.secretPassword,\n        // };\n\n        const forbiddenWords = [\n            formData.firstName.toLowerCase(),\n            formData.lastName.toLowerCase(),\n            formData.displayName.toLowerCase(),\n            formData.email.toLowerCase(),\n        ];\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n        //Name fields cannot be empty\n        if (formData.firstName === \"\") {\n            newErrors.firstName = \"First name is required.\";\n            isValid = false;\n        }\n        if (formData.lastName === \"\") {\n            newErrors.lastName = \"Last name is required.\";\n            isValid = false;\n        }\n\n        if (!emailRegex.test(formData.email)) {\n            newErrors.email = \"Invalid email format.\";\n            isValid = false;\n        }\n\n        //check if it is already in the database\n        if (formData.email === \"\") {\n            newErrors.email = \"Email cannot be empty.\";\n            isValid = false;\n        }\n\n        //check if it is already in the database\n        if (formData.displayName === \"\" || formData.displayName.length > 100) {\n            newErrors.displayName = \"Display name cannot be empty\";\n            isValid = false;\n        }\n\n\n        //check if it is the same as secret password and send it back to backend for hashing\n        if (formData.secretPassword === \"\") {\n            newErrors.secretPassword = 'Password cannot be empty.';\n            isValid = false;\n        }else if (forbiddenWords.some(word => formData.secretPassword.toLowerCase().includes(word))) {\n            newErrors.secretPassword = \"Password cannot include your name, email, or display name.\";\n            isValid = false;\n        }\n        if (formData.confirmPassword === \"\" || formData.confirmPassword !== formData.secretPassword) {\n            newErrors.confirmPassword = 'Passwords do not match.';\n            isValid = false;\n        }\n\n        if (isValid) {\n            try {\n                const response = await axios.post('http://localhost:8000/checkUserAvailability', {\n                    email: formData.email,\n                    displayName: formData.displayName,\n                });\n    \n                if (!response.data.emailAvailable) {\n                    newErrors.email = \"This email is already in use.\";\n                    isValid = false;\n                }\n    \n                if (!response.data.displayNameAvailable) {\n                    newErrors.displayName = \"This display name is already in use.\";\n                    isValid = false;\n                }\n            } catch (error) {\n                console.error(\"Error checking user availability:\", error);\n                newErrors.email = \"Error validating email or display name. Please try again.\";\n                isValid = false;\n            }\n        }\n\n        setErrors(newErrors);\n        return isValid;\n    };\n\n    const SubmitCommunityFormButton = async (e) => {\n        e.preventDefault();\n        if (!(await validateForm())) return;\n\n        const newUser = {\n            first: formData.firstName,\n            last: formData.lastName,\n            email: formData.email, \n            display: formData.displayName,\n            password: formData.secretPassword, //password needs to be hashed in the backend\n        };\n        try{\n            const response = await axios.post('http://localhost:8000/createNewUser', newUser);\n\n            //clear form\n            setFormData({\n                firstName: '',\n                lastName: '',\n                email: '',\n                displayName: '',\n                secretPassword: '',\n                confirmPassword: '',\n            });\n\n            console.log(response)\n\n            alert(\"New User Registered successfully!\");\n            setPage('welcome');\n\n        }\n        catch (error){\n            console.error(\"Error registering user:\", error);\n        }\n    };\n\n    const cancelButton = () =>{\n        setFormData({\n            firstName: '',\n            lastName: '',\n            email: '',\n            displayName: '',\n            secretPassword: '',\n            confirmPassword: '',\n        });\n        setPage('welcome');\n    };\n\n    return(\n        <div id=\"registerUserDiv\" className=\"main_cont_divs\">\n            <form id=\"registerFormContainer\" onSubmit={SubmitCommunityFormButton}>\n                <h2 id=\"registerFormHeader\">Register a New Account</h2>\n                <p id=\"registerFormDescription\">Please enter the following fields to create your account.</p>\n                \n                {/* <label htmlFor=\"firstName\"><b>First Name<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    maxLength=\"100\"\n                    placeholder=\"Enter First Name\"\n                    id=\"firstName\"\n                    className=\"registerInputBox\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"register_name_error\" className=\"errorMessage\">{errors.firstName}</div> */}\n\n                <label htmlFor=\"firstName\"><b>First Name<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    // maxLength=\"100\"\n                    placeholder=\"Enter your first name\"\n                    id=\"firstName\"\n                    className=\"registerInputBox\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"register_firstName_error\" className=\"errorMessage\">{errors.firstName}</div>\n\n                <label htmlFor=\"LastName\"><b>Last Name<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    //maxLength=\"100\"\n                    placeholder=\"Enter your last name\"\n                    id=\"lastName\"\n                    className=\"registerInputBox\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"register_lastName_error\" className=\"errorMessage\">{errors.lastName}</div>\n\n                <label htmlFor=\"email\"><b>Email Address<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    //maxLength=\"100\"\n                    placeholder=\"Enter your email\"\n                    id=\"email\"\n                    className=\"registerInputBox\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"register_email_error\" className=\"errorMessage\">{errors.email}</div>\n\n                <label htmlFor=\"displayName\"><b>Display Name<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    //maxLength=\"100\"\n                    placeholder=\"Enter a display name\"\n                    id=\"displayName\"\n                    className=\"registerInputBox\"\n                    value={formData.displayName}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"register_displayName_error\" className=\"errorMessage\">{errors.displayName}</div>\n\n                <label htmlFor=\"secretPassword\"><b>Password<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    //maxLength=\"100\"\n                    placeholder=\"Enter a password\"\n                    id=\"secretPassword\"\n                    className=\"registerInputBox\"\n                    value={formData.secretPassword}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"register_secretPassword_error\" className=\"errorMessage\">{errors.secretPassword}</div>\n\n                <label htmlFor=\"confirmPassword\"><b>Confirm Your Password<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    //maxLength=\"100\"\n                    placeholder=\"Re-enter your password\"\n                    id=\"confirmPassword\"\n                    className=\"registerInputBox\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"register_confirmPassword_error\" className=\"errorMessage\">{errors.confirmPassword}</div>\n\n                <div id=\"registerButtonDiv\">\n                    <button type=\"submit\" id=\"SubmitRegisterFormButton\">Sign Up</button>\n                    <button type=\"cancel\" id=\"cancelRegisterFormButton\" onClick={cancelButton}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}