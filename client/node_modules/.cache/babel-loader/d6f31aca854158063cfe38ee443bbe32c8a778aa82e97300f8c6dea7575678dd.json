{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/newCommunityPageView.js\",\n  _s = $RefreshSig$();\nimport '../stylesheets/newCommunityPageView.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewCommunityPageView({\n  communities,\n  setCommunities,\n  setPage,\n  loggedIn,\n  userInfo,\n  editCom,\n  selectedUser,\n  handleButtonChange\n}) {\n  _s();\n  console.log(editCom);\n  const [formData, setFormData] = useState({\n    communityName: (editCom === null || editCom === void 0 ? void 0 : editCom.name) || '',\n    description: (editCom === null || editCom === void 0 ? void 0 : editCom.description) || '',\n    username: userInfo[0]\n  });\n  const [errors, setErrors] = useState({\n    communityName: '',\n    description: ''\n    // username: ''\n  });\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n  };\n  const validateForm = () => {\n    //const newErrors = { communityName: '', description: '', username: '' };\n    const newErrors = {\n      communityName: '',\n      description: ''\n    };\n    let isValid = true;\n    const exist = communities.some(community => community.name.trim().toLowerCase() === formData.communityName.trim().toLowerCase());\n    if (exist) {\n      newErrors.communityName = \"Community name already exists. Please choose a different name.\";\n      isValid = false;\n    } else if (formData.communityName === \"\" || formData.communityName.length > 100) {\n      newErrors.communityName = \"Community name should be between 0 - 100 characters.\";\n      isValid = false;\n    }\n    if (formData.description === \"\" || formData.description.length > 500) {\n      newErrors.description = \"Description should be between 0 - 500 characters.\";\n      isValid = false;\n    }\n    if (!loggedIn) {\n      alert(\"You must be logged in to create a community.\");\n      isValid = false;\n    }\n    // else{\n    //     console.log(\"userInfo\", userInfo[0]);\n    //     const updatedFormData = { ...formData, username: userInfo[0] };\n    //     setFormData(updatedFormData);\n    // }\n    // if (formData.username === \"\") {\n    //     newErrors.username = 'Username is required.';\n    //     isValid = false;\n    //     alert(\"You must be logged in to create a community\");\n    // }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n  const SubmitCommunityFormButton = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n\n    //console.log(\"createdby:\", formData.username);\n    const newCommunity = {\n      name: formData.communityName,\n      //name from form\n      description: formData.description,\n      //description from form\n      members: editCom ? editCom.members : [formData.username],\n      // Keep existing members for edits\n      createdBy: editCom ? editCom.createdBy : formData.username,\n      postIDs: editCom ? editCom.postIDs : [],\n      startDate: editCom ? editCom.startDate : new Date()\n      // not needed\n      //memberCount: 1, \n    };\n    try {\n      if (editCom) {\n        const editResponse = await axios.post(`http://localhost:8000/communities/edit/${editCom._id}`, newCommunity);\n        console.log(editResponse.data);\n        // const updatedCommunities = communities.map((community) =>\n        //     community._id === editCom._id ? { ...community, ...editResponse.data } : community\n        // );\n\n        // console.log(\"Updated communities array:\", updatedCommunities);\n        // setCommunities(updatedCommunities); // Directly set the new array\n\n        setCommunities(prevCommunities => {\n          console.log(\"Previous Communities in Callback:\", prevCommunities);\n          const updated = prevCommunities.map(community => community._id === editCom._id ? {\n            ...community,\n            ...newCommunity\n          } : community);\n          console.log(\"Updated Communities in Callback:\", updated);\n          return updated;\n        });\n        alert(\"Community updated successfully!\");\n        e.stopPropagation();\n        setPage('userProf', null, selectedUser);\n        handleButtonChange('communities', selectedUser);\n      } else {\n        console.log(\"SENDING THIS TO GET CREATED\", newCommunity);\n        const response = await axios.post('http://localhost:8000/createNewCommunity', newCommunity);\n\n        //update state for rerendering\n        newCommunity.communityID = response.data._id;\n        setCommunities([...communities, response.data]);\n\n        //clear form\n        setFormData({\n          communityName: '',\n          description: '',\n          username: ''\n        });\n        alert(\"Community created successfully!\");\n      }\n      setPage('community', newCommunity.name);\n    } catch (error) {\n      console.error(\"Error creating community:\", error);\n    }\n  };\n  const cancelButton = e => {\n    e.preventDefault();\n    setFormData({\n      communityName: '',\n      description: '',\n      username: ''\n    });\n    //setPage('home');\n    if (editCom) {\n      e.stopPropagation();\n      setPage('userProf', null, selectedUser);\n      handleButtonChange('communities', selectedUser);\n    } else {\n      setPage('home');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"CreateCommunityDiv\",\n    className: \"main_cont_divs\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"communityFormContainer\",\n      onSubmit: SubmitCommunityFormButton,\n      children: [editCom ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"communityFormHeader\",\n        children: \"Edit your community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"communityFormHeader\",\n        children: \"Tell us about your community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 87\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"communityFormDescription\",\n        children: \"A name and description help people understand what your community is all about\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"communityName\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Community Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"100\",\n        placeholder: \"Enter Community Name\",\n        id: \"communityName\",\n        className: \"communityInputBox\",\n        value: formData.communityName,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community_name_error\",\n        className: \"errorMessage\",\n        children: errors.communityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        maxLength: \"500\",\n        placeholder: \"Enter Description\",\n        id: \"description\",\n        className: \"communityInputBox\",\n        value: formData.description,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community_description_error\",\n        className: \"errorMessage\",\n        children: errors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"communityButtonDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"SubmitCommunityFormButton\",\n          children: \"Engender Community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"cancel\",\n          id: \"cancelCommunityFormButton\",\n          onClick: cancelButton,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n_s(NewCommunityPageView, \"pFY/1pRTFkA2EN9fMvr6Pzc/ji8=\");\n_c = NewCommunityPageView;\nvar _c;\n$RefreshReg$(_c, \"NewCommunityPageView\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewCommunityPageView","communities","setCommunities","setPage","loggedIn","userInfo","editCom","selectedUser","handleButtonChange","_s","console","log","formData","setFormData","communityName","name","description","username","errors","setErrors","handleInputChange","e","id","value","target","validateForm","newErrors","isValid","exist","some","community","trim","toLowerCase","length","alert","SubmitCommunityFormButton","preventDefault","newCommunity","members","createdBy","postIDs","startDate","Date","editResponse","post","_id","data","prevCommunities","updated","map","stopPropagation","response","communityID","error","cancelButton","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","maxLength","placeholder","onChange","noValidate","onClick","_c","$RefreshReg$"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/newCommunityPageView.js"],"sourcesContent":["import '../stylesheets/newCommunityPageView.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function NewCommunityPageView({communities, setCommunities, setPage, loggedIn, userInfo, editCom, selectedUser, handleButtonChange}) {\n    console.log(editCom)\n    const [formData, setFormData] = useState({\n        communityName: editCom?.name || '',\n        description: editCom?.description || '',\n        username: userInfo[0],\n    });\n    const [errors, setErrors] = useState({\n        communityName: '',\n        description: '',\n        // username: ''\n    });\n    const handleInputChange = (e) => {\n        const { id, value } = e.target;\n        setFormData({\n            ...formData,  \n            [id]: value   \n        });\n    };\n    const validateForm = () => {\n        //const newErrors = { communityName: '', description: '', username: '' };\n        const newErrors = { communityName: '', description: ''};\n        let isValid = true;\n\n        const exist = communities.some(community => community.name.trim().toLowerCase() === formData.communityName.trim().toLowerCase());\n\n        if(exist){\n            newErrors.communityName = \"Community name already exists. Please choose a different name.\";\n            isValid = false;\n        }\n        else if (formData.communityName === \"\" || formData.communityName.length > 100) {\n            newErrors.communityName = \"Community name should be between 0 - 100 characters.\";\n            isValid = false;\n        }\n\n        if (formData.description === \"\" || formData.description.length > 500) {\n            newErrors.description = \"Description should be between 0 - 500 characters.\";\n            isValid = false;\n        }\n\n        if(!loggedIn){\n            alert(\"You must be logged in to create a community.\");\n            isValid = false;\n        }\n        // else{\n        //     console.log(\"userInfo\", userInfo[0]);\n        //     const updatedFormData = { ...formData, username: userInfo[0] };\n        //     setFormData(updatedFormData);\n        // }\n        // if (formData.username === \"\") {\n        //     newErrors.username = 'Username is required.';\n        //     isValid = false;\n        //     alert(\"You must be logged in to create a community\");\n        // }\n\n        setErrors(newErrors);\n        return isValid;\n    };\n\n    const SubmitCommunityFormButton = async (e) => {\n        e.preventDefault();\n        if (!validateForm()) return;\n\n        //console.log(\"createdby:\", formData.username);\n        const newCommunity = {\n            name: formData.communityName,   //name from form\n            description: formData.description, //description from form\n            members: editCom ? editCom.members : [formData.username], // Keep existing members for edits\n            createdBy: editCom ? editCom.createdBy : formData.username,\n            postIDs: editCom ? editCom.postIDs : [],\n            startDate: editCom ? editCom.startDate : new Date(),\n            // not needed\n            //memberCount: 1, \n        };\n\n\n        try{\n            if (editCom) {\n                const editResponse = await axios.post(`http://localhost:8000/communities/edit/${editCom._id}`, newCommunity);\n                console.log(editResponse.data)\n                // const updatedCommunities = communities.map((community) =>\n                //     community._id === editCom._id ? { ...community, ...editResponse.data } : community\n                // );\n                \n                // console.log(\"Updated communities array:\", updatedCommunities);\n                // setCommunities(updatedCommunities); // Directly set the new array\n\n                setCommunities((prevCommunities) => {\n                    console.log(\"Previous Communities in Callback:\", prevCommunities);\n                    const updated = prevCommunities.map((community) =>\n                        community._id === editCom._id ? { ...community, ...newCommunity } : community\n                    );\n                    console.log(\"Updated Communities in Callback:\", updated);\n                    return updated;\n                });\n            \n    \n                alert(\"Community updated successfully!\");\n                e.stopPropagation();\n                setPage('userProf', null, selectedUser);\n                handleButtonChange('communities', selectedUser);\n            }\n            else{\n                console.log(\"SENDING THIS TO GET CREATED\", newCommunity)\n                const response = await axios.post('http://localhost:8000/createNewCommunity', newCommunity);\n                \n                //update state for rerendering\n                newCommunity.communityID = response.data._id;\n                setCommunities([...communities, response.data]);\n            \n\n                //clear form\n                setFormData({\n                    communityName: '',\n                    description: '',\n                    username: ''\n                });\n\n                alert(\"Community created successfully!\");\n            }\n            setPage('community', newCommunity.name);\n\n        }\n        catch (error){\n            console.error(\"Error creating community:\", error);\n        }\n    };\n\n    const cancelButton = (e) =>{\n        e.preventDefault();\n        setFormData({\n            communityName: '',\n            description: '',\n            username: ''\n        });\n        //setPage('home');\n        if(editCom){\n            e.stopPropagation();\n            setPage('userProf', null, selectedUser);\n            handleButtonChange('communities', selectedUser);\n        }\n        else{\n            setPage('home');\n        }\n    };\n\n    return(\n        <div id=\"CreateCommunityDiv\" className=\"main_cont_divs\">\n            <form id=\"communityFormContainer\" onSubmit={SubmitCommunityFormButton}>\n                {editCom ? (<h2 id=\"communityFormHeader\">Edit your community</h2>) : (<h2 id=\"communityFormHeader\">Tell us about your community</h2>)}\n                {/* <h2 id=\"communityFormHeader\">Tell us about your community</h2> */}\n                <p id=\"communityFormDescription\">A name and description help people understand what your community is all about</p>\n                \n                <label htmlFor=\"communityName\"><b>Community Name<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    maxLength=\"100\"\n                    placeholder=\"Enter Community Name\"\n                    id=\"communityName\"\n                    className=\"communityInputBox\"\n                    value={formData.communityName}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"community_name_error\" className=\"errorMessage\">{errors.communityName}</div>\n\n                <label htmlFor=\"description\"><b>Description<span className=\"requiredIndicator\">*</span></b></label>\n                <textarea\n                    maxLength=\"500\"\n                    placeholder=\"Enter Description\"\n                    id=\"description\"\n                    className=\"communityInputBox\"\n                    value={formData.description}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"community_description_error\" className=\"errorMessage\">{errors.description}</div>\n\n                {/* <label htmlFor=\"username\"><b>Creator Username<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter Username\"\n                    id=\"username\"\n                    className=\"communityInputBox\"\n                    value={formData.username}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"creator_username_error\" className=\"errorMessage\">{errors.username}</div> */}\n\n                <div id=\"communityButtonDiv\">\n                    <button type=\"submit\" id=\"SubmitCommunityFormButton\">Engender Community</button>\n                    <button type=\"cancel\" id=\"cancelCommunityFormButton\" onClick={cancelButton}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}