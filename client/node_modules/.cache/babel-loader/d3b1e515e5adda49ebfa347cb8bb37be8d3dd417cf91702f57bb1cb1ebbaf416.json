{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/communityPage.js\";\nimport React from 'react';\nimport { PostSection, InfoSection, getTotalComments, getCommunity, ButtonDisplay, orderNewest } from './homePage.js';\nimport '../stylesheets/communityPage.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TheCommunityPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      order: orderNewest,\n      isMember: false\n    };\n    this.updateOrder = this.updateOrder.bind(this);\n    this.handleJoinLeave = this.handleJoinLeave.bind(this);\n  }\n  sortCommunitiesByMembership(user, communities, setCommunities) {\n    // return communities.sort((a, b) => {\n    //   const aIsMember = a.members.includes(user);\n    //   const bIsMember = b.members.includes(user);\n\n    //   // Prioritize communities the user has joined\n    //   if (aIsMember && !bIsMember) return -1; // a should come first\n    //   if (!aIsMember && bIsMember) return 1;  // b should come first\n    //   return a.name.localeCompare(b.name);  // Sort alphabetically if both are same status\n    // });\n  }\n  async handleJoinLeave(loggedIn, userInfo, setCommunities) {\n    const {\n      community,\n      communities\n    } = this.props;\n    const comName = communities.find(com => com.name === community);\n    const {\n      isMember\n    } = this.state;\n    if (isMember) {\n      // Handle leaving the community\n      try {\n        await axios.post(`http://localhost:8000/leaveCommunity`, {\n          communityId: comName._id\n        }, {\n          withCredentials: true\n        });\n        this.setState({\n          isMember: false\n        });\n        alert('You have left the community.');\n      } catch (error) {\n        console.error('Error leaving community:', error);\n        alert('Failed to leave the community. Please try again.');\n      }\n    } else {\n      // Handle joining the community\n      try {\n        await axios.post(`http://localhost:8000/joinCommunity`, {\n          communityId: comName._id\n        }, {\n          withCredentials: true\n        });\n        this.setState({\n          isMember: true\n        });\n        alert('You have joined the community.');\n      } catch (error) {\n        console.error('Error joining community:', error);\n        alert('Failed to join the community. Please try again.');\n      }\n    }\n    const displayName = loggedIn ? userInfo[0] : \"Guest\";\n    let sortedCommunities = this.sortCommunitiesByMembership(displayName, this.props.communities, setCommunities);\n    setCommunities(sortedCommunities);\n  }\n  async componentDidMount() {\n    const {\n      community,\n      communities,\n      loggedIn,\n      userInfo\n    } = this.props;\n    console.log(community);\n    const comName = communities.find(com => com.name === community);\n    console.log(comName);\n    if (loggedIn) {\n      const displayName = userInfo[0];\n      const comID = comName._id;\n      try {\n        const response = await axios.get(`http://localhost:8000/checkMembership`, {\n          params: {\n            communityId: comID,\n            displayName: displayName\n          },\n          withCredentials: true\n        });\n        console.log(\"IS IT A MEMBER?\", response.data);\n        this.setState({\n          isMember: response.data.isMember\n        });\n      } catch (error) {\n        console.error('Error checking membership:', error);\n      }\n    }\n  }\n  async componentDidUpdate(prevProps) {\n    console.log(\"THIS IS PREV PROPS\", prevProps);\n    const {\n      community,\n      communities,\n      loggedIn,\n      userInfo\n    } = this.props;\n    console.log(community);\n    //const comName = communities.find((com) => com.name === community);\n    //console.log(comName)\n    if (community !== prevProps.community) {\n      const comName = communities.find(com => com.name === community);\n      if (loggedIn) {\n        const displayName = userInfo[0];\n        const comID = comName._id;\n        try {\n          const response = await axios.get(`http://localhost:8000/checkMembership`, {\n            params: {\n              communityId: comID,\n              displayName: displayName\n            },\n            withCredentials: true\n          });\n          console.log(\"IS IT A MEMBER?\", response.data);\n          this.setState({\n            isMember: response.data.isMember\n          });\n        } catch (error) {\n          console.error('Error checking membership:', error);\n        }\n      }\n    }\n  }\n  updateOrder(newOrder) {\n    //console.log(\"UPDATING ORDER\");\n    this.setState({\n      order: newOrder\n    });\n  }\n  render() {\n    const {\n      community,\n      communities,\n      posts,\n      comments,\n      linkFlairs,\n      goToPostPage,\n      handleOrderButtonClick,\n      loggedIn,\n      userInfo,\n      setCommunities\n    } = this.props;\n    const {\n      isMember\n    } = this.state;\n    console.log(\"COMMUNITY PROPS\", this.props);\n    //console.log(comName);\n    console.log(\"am i logggggged in?\", loggedIn);\n    const filtered = filterPosts('community', community, posts, communities, comments);\n    //console.log(\"FILTERED POSTS\", filtered)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homePage\",\n      className: \"main_cont_divs\",\n      children: [/*#__PURE__*/_jsxDEV(CommunityPageHeader, {\n        comName: community,\n        communities: communities,\n        handleOrderButtonClick: handleOrderButtonClick,\n        updateOrder: this.updateOrder,\n        loggedIn: loggedIn,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"communityActions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleJoinLeave(loggedIn, userInfo, setCommunities),\n          className: \"joinLeaveButton\",\n          children: isMember ? 'Leave Community' : 'Join Community'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PostSection, {\n        page: 'community',\n        posts: filtered,\n        comments: comments,\n        linkFlairs: linkFlairs,\n        communities: communities,\n        order: this.state.order,\n        goToPostPage: goToPostPage,\n        loggedIn: loggedIn,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this);\n  }\n}\nclass CommunityPageHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memberCount: null,\n      createdBy: ''\n    };\n  }\n  async fetchMemberCount(community) {\n    try {\n      const response = await axios.get(`http://localhost:8000/communityInformation/${community._id}`);\n      console.log(response.data);\n      this.setState({\n        memberCount: response.data.memberCount,\n        createdBy: response.data.createdBy\n      }); // Assuming response.data is the member count\n    } catch (error) {\n      console.log(\"No community found\");\n    }\n  }\n  componentDidMount() {\n    const {\n      communities,\n      comName\n    } = this.props;\n    const community = communities.find(community => community.name === comName);\n    if (community) {\n      this.fetchMemberCount(community);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      communities,\n      comName\n    } = this.props;\n    if (comName !== prevProps.comName) {\n      const community = communities.find(community => community.name === comName);\n      if (community) {\n        this.fetchMemberCount(community);\n      }\n    }\n  }\n  render() {\n    const {\n      communities,\n      comName,\n      updateOrder,\n      handleOrderButtonClick\n    } = this.props;\n    const community = communities.find(community => community.name === comName);\n    if (!community) return null;\n    const {\n      memberCount,\n      createdBy\n    } = this.state;\n    const startDate = community.startDate;\n    const comPostCount = community.postIDs.length;\n    console.log(\"logggggedin???????\", this.props.loggedIn);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n        page: 'community',\n        startDate: startDate,\n        comName: comName,\n        memberCount: memberCount // Using memberCount from state\n        ,\n        setMemberCount: this.setMemberCount,\n        createdBy: createdBy,\n        description: community.description,\n        comPostCount: comPostCount,\n        loggedIn: this.props.loggedIn,\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonDisplay, {\n        handleOrderButtonClick: handleOrderButtonClick,\n        updateOrder: updateOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport function filterPosts(page, comName, posts, communities, comments) {\n  //console.log(\"CHECKING THE POSTS\", posts);\n  let filter = [...posts];\n  //console.log(filter);\n  if (page === \"community\") {\n    filter = filter.filter(function (element) {\n      // console.log(\"ELEMENT\", element);\n      // console.log(getCommunity(element._id, communities));\n      return getCommunity(element._id, communities) === comName;\n    });\n  }\n  if (page === \"search\") {\n    filter = new Set();\n    for (let i = 0; i < comName.length; i++) {\n      for (let j = 0; j < posts.length; j++) {\n        let commentArray = getTotalComments(posts[j], comments);\n        for (const x of commentArray) {\n          if (x.content.toLowerCase().includes(comName[i])) {\n            filter.add(posts[j]);\n          }\n        }\n        if (posts[j].title.toLowerCase().includes(comName[i])) {\n          filter.add(posts[j]);\n        } else if (posts[j].content.toLowerCase().includes(comName[i])) {\n          filter.add(posts[j]);\n        }\n      }\n    }\n  }\n  //console.log(filter);\n  return filter;\n}","map":{"version":3,"names":["React","PostSection","InfoSection","getTotalComments","getCommunity","ButtonDisplay","orderNewest","axios","jsxDEV","_jsxDEV","TheCommunityPage","Component","constructor","props","state","order","isMember","updateOrder","bind","handleJoinLeave","sortCommunitiesByMembership","user","communities","setCommunities","loggedIn","userInfo","community","comName","find","com","name","post","communityId","_id","withCredentials","setState","alert","error","console","displayName","sortedCommunities","componentDidMount","log","comID","response","get","params","data","componentDidUpdate","prevProps","newOrder","render","posts","comments","linkFlairs","goToPostPage","handleOrderButtonClick","filtered","filterPosts","id","className","children","CommunityPageHeader","fileName","_jsxFileName","lineNumber","columnNumber","onClick","page","memberCount","createdBy","fetchMemberCount","startDate","comPostCount","postIDs","length","setMemberCount","description","filter","element","Set","i","j","commentArray","x","content","toLowerCase","includes","add","title"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/communityPage.js"],"sourcesContent":["import React from 'react';\nimport {PostSection, InfoSection, getTotalComments, getCommunity, ButtonDisplay, orderNewest} from './homePage.js';\nimport '../stylesheets/communityPage.css'\nimport axios from 'axios';\n\n\nexport default class TheCommunityPage extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        order: orderNewest,\n        isMember: false,\n      };\n\n      this.updateOrder = this.updateOrder.bind(this);\n      this.handleJoinLeave = this.handleJoinLeave.bind(this);\n    }\n\n    sortCommunitiesByMembership(user, communities, setCommunities) {\n      // return communities.sort((a, b) => {\n      //   const aIsMember = a.members.includes(user);\n      //   const bIsMember = b.members.includes(user);\n\n      //   // Prioritize communities the user has joined\n      //   if (aIsMember && !bIsMember) return -1; // a should come first\n      //   if (!aIsMember && bIsMember) return 1;  // b should come first\n      //   return a.name.localeCompare(b.name);  // Sort alphabetically if both are same status\n      // });\n    }\n\n    async handleJoinLeave(loggedIn, userInfo, setCommunities) {\n      const { community, communities } = this.props;\n      const comName = communities.find((com) => com.name === community);\n      const { isMember } = this.state;\n  \n      if (isMember) {\n        // Handle leaving the community\n        try {\n          await axios.post(`http://localhost:8000/leaveCommunity`, { communityId: comName._id }, { withCredentials: true });\n          this.setState({ isMember: false });\n          alert('You have left the community.');\n        } catch (error) {\n          console.error('Error leaving community:', error);\n          alert('Failed to leave the community. Please try again.');\n        }\n      } else {\n        // Handle joining the community\n        try {\n          await axios.post(`http://localhost:8000/joinCommunity`, { communityId: comName._id }, { withCredentials: true });\n          this.setState({ isMember: true });\n          alert('You have joined the community.');\n        } catch (error) {\n          console.error('Error joining community:', error);\n          alert('Failed to join the community. Please try again.');\n        }\n      }\n      const displayName = loggedIn ? userInfo[0] : \"Guest\";\n      let sortedCommunities = this.sortCommunitiesByMembership(displayName, this.props.communities, setCommunities);\n      setCommunities(sortedCommunities);\n    }\n\n    async componentDidMount() {\n      const { community, communities, loggedIn, userInfo } = this.props;\n      console.log(community);\n      const comName = communities.find((com) => com.name === community);\n      console.log(comName)\n      if (loggedIn) {\n        const displayName = userInfo[0];\n        const comID = comName._id\n        try {\n          const response = await axios.get(`http://localhost:8000/checkMembership`, {\n            params: { communityId: comID, displayName: displayName }, withCredentials: true,});\n          console.log(\"IS IT A MEMBER?\", response.data)\n          this.setState({ isMember: response.data.isMember });\n        } catch (error) {\n          console.error('Error checking membership:', error);\n        }\n      }\n    }\n\n    async componentDidUpdate(prevProps) {\n      console.log(\"THIS IS PREV PROPS\", prevProps)\n      const { community, communities, loggedIn, userInfo } = this.props;\n      console.log(community);\n      //const comName = communities.find((com) => com.name === community);\n      //console.log(comName)\n      if (community !== prevProps.community) {\n        const comName = communities.find((com) => com.name === community);\n        if (loggedIn) {\n          const displayName = userInfo[0];\n          const comID = comName._id\n          try {\n            const response = await axios.get(`http://localhost:8000/checkMembership`, {\n              params: { communityId: comID, displayName: displayName }, withCredentials: true,});\n            console.log(\"IS IT A MEMBER?\", response.data)\n            this.setState({ isMember: response.data.isMember });\n          } catch (error) {\n            console.error('Error checking membership:', error);\n          }\n        }\n      }\n    }\n\n    updateOrder(newOrder){\n      //console.log(\"UPDATING ORDER\");\n      this.setState({order: newOrder})\n    }\n\n    render(){\n      const {community, communities, posts, comments, linkFlairs, goToPostPage, handleOrderButtonClick, loggedIn, userInfo, setCommunities} = this.props;\n      const { isMember } = this.state;\n      console.log(\"COMMUNITY PROPS\", this.props);\n      //console.log(comName);\n      console.log(\"am i logggggged in?\", loggedIn);\n      const filtered = filterPosts('community', community, posts, communities, comments);\n      //console.log(\"FILTERED POSTS\", filtered)\n      return(\n        <div id=\"homePage\" className=\"main_cont_divs\">\n          <CommunityPageHeader \n            comName={community} \n            communities={communities} \n            handleOrderButtonClick={handleOrderButtonClick} \n            updateOrder={this.updateOrder}\n            loggedIn={loggedIn}\n            userInfo={userInfo}\n          />\n\n          {loggedIn && (\n          <div id=\"communityActions\">\n            <button onClick={() => this.handleJoinLeave(loggedIn, userInfo, setCommunities)} className=\"joinLeaveButton\">\n              {isMember ? 'Leave Community' : 'Join Community'}\n            </button>\n          </div>\n          )}\n          <PostSection \n            page={'community'} \n            posts={filtered} \n            comments={comments} \n            linkFlairs={linkFlairs} \n            communities={communities} \n            order={this.state.order} \n            goToPostPage={goToPostPage}\n            loggedIn={loggedIn}\n            userInfo={userInfo}\n          />\n        </div>\n      );\n    }\n}\n\nclass CommunityPageHeader extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        memberCount: null,\n        createdBy: ''\n      };\n  }\n\n  async fetchMemberCount(community) {\n    try {\n      const response = await axios.get(`http://localhost:8000/communityInformation/${community._id}`);\n      console.log(response.data)\n      this.setState({ memberCount: response.data.memberCount,\n        createdBy: response.data.createdBy\n       }); // Assuming response.data is the member count\n    } catch (error) {\n      console.log(\"No community found\");\n    }\n  }\n\n  componentDidMount() {\n    const { communities, comName } = this.props;\n    const community = communities.find((community) => community.name === comName);\n\n    if (community) {\n      this.fetchMemberCount(community);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { communities, comName } = this.props;\n    if (comName !== prevProps.comName) {\n      const community = communities.find((community) => community.name === comName);\n      if (community) {\n        this.fetchMemberCount(community);\n      }\n    }\n  }\n\n  render() {\n    const { communities, comName, updateOrder, handleOrderButtonClick  } = this.props;\n    const community = communities.find((community) => community.name === comName);\n\n    if (!community) return null;\n\n    const { memberCount, createdBy } = this.state;\n    const startDate = community.startDate;\n    const comPostCount = community.postIDs.length;\n    console.log(\"logggggedin???????\", this.props.loggedIn);\n    return (\n      <div id=\"header\">\n        <InfoSection \n          page={'community'}\n          startDate={startDate}\n          comName={comName}\n          memberCount={memberCount} // Using memberCount from state\n          setMemberCount={this.setMemberCount}\n          createdBy={createdBy}\n          description={community.description}\n          comPostCount={comPostCount}\n          loggedIn={this.props.loggedIn}\n          userInfo={this.props.userInfo}\n        />\n        <ButtonDisplay handleOrderButtonClick={handleOrderButtonClick} updateOrder={updateOrder} />\n      </div>\n    );\n  }\n}\n\n\nexport function filterPosts(page, comName, posts, communities, comments){\n  //console.log(\"CHECKING THE POSTS\", posts);\n  let filter = [...posts];\n  //console.log(filter);\n  if(page === \"community\"){\n    filter = filter.filter(function(element){\n      // console.log(\"ELEMENT\", element);\n      // console.log(getCommunity(element._id, communities));\n      return getCommunity(element._id, communities) === comName;\n    });\n  }\n\n  if(page === \"search\"){\n    filter = new Set();\n    \n    for(let i = 0; i < comName.length; i++){\n      for(let j = 0; j < posts.length; j++){ \n        let commentArray = getTotalComments(posts[j], comments);\n        for(const x of commentArray){\n          if(x.content.toLowerCase().includes(comName[i])){\n            filter.add(posts[j]);\n          }\n        }\n        \n        if(posts[j].title.toLowerCase().includes(comName[i])){\n          filter.add(posts[j]);\n        }\n        else if(posts[j].content.toLowerCase().includes(comName[i])){\n          filter.add(posts[j]);\n        }\n      }\n    }\n  }\n  //console.log(filter);\n  return filter;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}