{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/newCommunityPageView.js\",\n  _s = $RefreshSig$();\nimport '../stylesheets/newCommunityPageView.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewCommunityPageView({\n  communities,\n  setCommunities,\n  setPage,\n  loggedIn,\n  userInfo\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    communityName: '',\n    description: '',\n    username: ''\n  });\n  const [errors, setErrors] = useState({\n    communityName: '',\n    description: '',\n    username: ''\n  });\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n  };\n  const validateForm = () => {\n    //const newErrors = { communityName: '', description: '', username: '' };\n    const newErrors = {\n      communityName: '',\n      description: ''\n    };\n    let isValid = true;\n    if (formData.communityName === \"\" || formData.communityName.length > 100) {\n      newErrors.communityName = \"Community name should be between 0 - 100 characters.\";\n      isValid = false;\n    }\n    if (formData.description === \"\" || formData.description.length > 500) {\n      newErrors.description = \"Description should be between 0 - 500 characters.\";\n      isValid = false;\n    }\n    if (!loggedIn) {\n      alert(\"You must be logged in to create a community\");\n      isValid = false;\n    } else {\n      console.log(\"userInfo\", userInfo[0]);\n      setFormData({\n        ...formData,\n        username: userInfo[0]\n      });\n    }\n    // if (formData.username === \"\") {\n    //     newErrors.username = 'Username is required.';\n    //     isValid = false;\n    //     alert(\"You must be logged in to create a community\");\n    // }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n  const SubmitCommunityFormButton = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    const newCommunity = {\n      name: formData.communityName,\n      //name from form\n      description: formData.description,\n      //description from form\n      postIDs: [],\n      //no posts\n      startDate: new Date(),\n      members: [formData.username],\n      //username from form\n      createdBy: formData.username\n      // not needed\n      //memberCount: 1, \n    };\n    try {\n      //send data to express with post request\n      //console.log(\"new community being created\");\n      const response = await axios.post('http://localhost:8000/createNewCommunity', newCommunity);\n\n      //update state for rerendering\n      newCommunity.communityID = response.data._id;\n      setCommunities([...communities, response.data]);\n\n      //clear form\n      setFormData({\n        communityName: '',\n        description: '',\n        username: ''\n      });\n      alert(\"Community created successfully!\");\n      setPage('community', newCommunity.name);\n    } catch (error) {\n      console.error(\"Error creating community:\", error);\n    }\n  };\n  const cancelButton = () => {\n    setFormData({\n      communityName: '',\n      description: '',\n      username: ''\n    });\n    setPage('home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"CreateCommunityDiv\",\n    className: \"main_cont_divs\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"communityFormContainer\",\n      onSubmit: SubmitCommunityFormButton,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"communityFormHeader\",\n        children: \"Tell us about your community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"communityFormDescription\",\n        children: \"A name and description help people understand what your community is all about\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"communityName\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Community Name\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"100\",\n        placeholder: \"Enter Community Name\",\n        id: \"communityName\",\n        className: \"communityInputBox\",\n        value: formData.communityName,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community_name_error\",\n        className: \"errorMessage\",\n        children: errors.communityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"requiredIndicator\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        maxLength: \"500\",\n        placeholder: \"Enter Description\",\n        id: \"description\",\n        className: \"communityInputBox\",\n        value: formData.description,\n        onChange: handleInputChange,\n        noValidate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community_description_error\",\n        className: \"errorMessage\",\n        children: errors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"communityButtonDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"SubmitCommunityFormButton\",\n          children: \"Engender Community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"cancel\",\n          id: \"cancelCommunityFormButton\",\n          onClick: cancelButton,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(NewCommunityPageView, \"5Y3iFBdyIU141gQE1dFVPeXx0S8=\");\n_c = NewCommunityPageView;\nvar _c;\n$RefreshReg$(_c, \"NewCommunityPageView\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewCommunityPageView","communities","setCommunities","setPage","loggedIn","userInfo","_s","formData","setFormData","communityName","description","username","errors","setErrors","handleInputChange","e","id","value","target","validateForm","newErrors","isValid","length","alert","console","log","SubmitCommunityFormButton","preventDefault","newCommunity","name","postIDs","startDate","Date","members","createdBy","response","post","communityID","data","_id","error","cancelButton","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","maxLength","placeholder","onChange","noValidate","onClick","_c","$RefreshReg$"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/newCommunityPageView.js"],"sourcesContent":["import '../stylesheets/newCommunityPageView.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function NewCommunityPageView({communities, setCommunities, setPage, loggedIn, userInfo}) {\n    const [formData, setFormData] = useState({\n        communityName: '',\n        description: '',\n        username: ''\n    });\n    const [errors, setErrors] = useState({\n        communityName: '',\n        description: '',\n        username: ''\n    });\n    const handleInputChange = (e) => {\n        const { id, value } = e.target;\n        setFormData({\n            ...formData,  \n            [id]: value   \n        });\n    };\n    const validateForm = () => {\n        //const newErrors = { communityName: '', description: '', username: '' };\n        const newErrors = { communityName: '', description: ''};\n        let isValid = true;\n        \n\n        if (formData.communityName === \"\" || formData.communityName.length > 100) {\n            newErrors.communityName = \"Community name should be between 0 - 100 characters.\";\n            isValid = false;\n        }\n\n        if (formData.description === \"\" || formData.description.length > 500) {\n            newErrors.description = \"Description should be between 0 - 500 characters.\";\n            isValid = false;\n        }\n\n        if(!loggedIn){\n            alert(\"You must be logged in to create a community\");\n            isValid = false;\n        }\n        else{\n            console.log(\"userInfo\", userInfo[0]);\n            setFormData({...formData, username: userInfo[0]});\n        }\n        // if (formData.username === \"\") {\n        //     newErrors.username = 'Username is required.';\n        //     isValid = false;\n        //     alert(\"You must be logged in to create a community\");\n        // }\n\n        setErrors(newErrors);\n        return isValid;\n    };\n\n    const SubmitCommunityFormButton = async (e) => {\n        e.preventDefault();\n        if (!validateForm()) return;\n\n        const newCommunity = {\n            name: formData.communityName,   //name from form\n            description: formData.description, //description from form\n            postIDs: [], //no posts\n            startDate: new Date(),\n            members: [formData.username],   //username from form\n            createdBy: formData.username,\n            // not needed\n            //memberCount: 1, \n        };\n\n        try{\n            //send data to express with post request\n            //console.log(\"new community being created\");\n            const response = await axios.post('http://localhost:8000/createNewCommunity', newCommunity);\n            \n            //update state for rerendering\n            newCommunity.communityID = response.data._id;\n            setCommunities([...communities, response.data]);\n           \n\n            //clear form\n            setFormData({\n                communityName: '',\n                description: '',\n                username: ''\n            });\n\n            alert(\"Community created successfully!\");\n            setPage('community', newCommunity.name);\n\n        }\n        catch (error){\n            console.error(\"Error creating community:\", error);\n        }\n    };\n\n    const cancelButton = () =>{\n        setFormData({\n            communityName: '',\n            description: '',\n            username: ''\n        });\n        setPage('home');\n    };\n\n    return(\n        <div id=\"CreateCommunityDiv\" className=\"main_cont_divs\">\n            <form id=\"communityFormContainer\" onSubmit={SubmitCommunityFormButton}>\n                <h2 id=\"communityFormHeader\">Tell us about your community</h2>\n                <p id=\"communityFormDescription\">A name and description help people understand what your community is all about</p>\n                \n                <label htmlFor=\"communityName\"><b>Community Name<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    maxLength=\"100\"\n                    placeholder=\"Enter Community Name\"\n                    id=\"communityName\"\n                    className=\"communityInputBox\"\n                    value={formData.communityName}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"community_name_error\" className=\"errorMessage\">{errors.communityName}</div>\n\n                <label htmlFor=\"description\"><b>Description<span className=\"requiredIndicator\">*</span></b></label>\n                <textarea\n                    maxLength=\"500\"\n                    placeholder=\"Enter Description\"\n                    id=\"description\"\n                    className=\"communityInputBox\"\n                    value={formData.description}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"community_description_error\" className=\"errorMessage\">{errors.description}</div>\n\n                {/* <label htmlFor=\"username\"><b>Creator Username<span className=\"requiredIndicator\">*</span></b></label>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter Username\"\n                    id=\"username\"\n                    className=\"communityInputBox\"\n                    value={formData.username}\n                    onChange={handleInputChange}\n                    noValidate\n                />\n                <div id=\"creator_username_error\" className=\"errorMessage\">{errors.username}</div> */}\n\n                <div id=\"communityButtonDiv\">\n                    <button type=\"submit\" id=\"SubmitCommunityFormButton\">Engender Community</button>\n                    <button type=\"cancel\" id=\"cancelCommunityFormButton\" onClick={cancelButton}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}