{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/newPostPageView.js\",\n  _s = $RefreshSig$();\nimport '../stylesheets/newPostPageView.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPostPageView({\n  communities,\n  setCommunities,\n  linkFlairs,\n  setLinkFlairs,\n  posts,\n  setPosts,\n  setPage,\n  loggedIn,\n  userInfo,\n  editPost\n}) {\n  _s();\n  var _communities$find;\n  const initialCommunitySelection = editPost ? ((_communities$find = communities.find(community => community.postIDs.includes(editPost._id))) === null || _communities$find === void 0 ? void 0 : _communities$find.name) || '' : '';\n  const [formData, setFormData] = useState({\n    communitySelection: initialCommunitySelection,\n    postTitle: (editPost === null || editPost === void 0 ? void 0 : editPost.title) || '',\n    linkFlair: (editPost === null || editPost === void 0 ? void 0 : editPost.linkFlairID) || '',\n    postText: (editPost === null || editPost === void 0 ? void 0 : editPost.content) || '',\n    creatorUsername: (editPost === null || editPost === void 0 ? void 0 : editPost.postedBy) || userInfo[0],\n    createNewLinkFlair: ''\n  });\n  console.log(\"communities\", communities);\n  console.log(\"EDIT POST\", editPost);\n  const [errors, setErrors] = useState({\n    communitySelection: '',\n    postTitle: '',\n    linkFlair: '',\n    postText: '',\n    // creatorUsername: '',\n    createNewLinkFlair: ''\n  });\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [id]: value\n    }));\n\n    //console.log(\"ID\", id)\n    if (id === 'linkFlair') {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        createNewLinkFlair: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    //const newErrors = { communitySelection: '', postTitle: '', linkFlair: '', postText: '', creatorUsername: '', createNewLinkFlair: '' };\n    const newErrors = {\n      communitySelection: '',\n      postTitle: '',\n      linkFlair: '',\n      postText: '',\n      createNewLinkFlair: ''\n    };\n    let isValid = true;\n\n    // Add validation logic\n    if (!formData.communitySelection) {\n      newErrors.communitySelection = 'Please select a community.';\n      isValid = false;\n    }\n    if (!formData.postTitle || formData.postTitle.length > 100) {\n      newErrors.postTitle = 'Post title should be between 0 - 100 characters.';\n      isValid = false;\n    }\n    if (!formData.postText) {\n      newErrors.postText = 'Post content cannot be empty.';\n      isValid = false;\n    }\n    if (formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" && !formData.createNewLinkFlair || formData.createNewLinkFlair.length > 30) {\n      newErrors.createNewLinkFlair = 'Link Flair should be between 0 - 30 characters.';\n      isValid = false;\n    }\n    // if (!formData.creatorUsername) {\n    //     newErrors.creatorUsername = 'Username is required.';\n    //     isValid = false;\n    // }\n    if (!loggedIn) {\n      alert(\"You must be logged in to create a post.\");\n      isValid = false;\n    }\n    // else{\n    //     console.log(\"userInfo\", userInfo[0]);\n    //     setFormData({...formData, creatorUsername: userInfo[0]});\n    // }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n\n    //pass in linkFlairID\n    let linkFlairID = formData.linkFlair;\n    //console.log(formData);\n\n    if (formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" && formData.createNewLinkFlair) {\n      const newLinkFlair = {\n        content: formData.createNewLinkFlair\n      };\n      try {\n        const response = await axios.post('http://localhost:8000/createNewLinkFlair', newLinkFlair);\n        newLinkFlair.linkFlairID = response.data._id;\n        linkFlairID = newLinkFlair.linkFlairID;\n        setLinkFlairs([...linkFlairs, response.data]);\n      } catch (error) {\n        console.log(\"Failed to submit link flair. Please try again.\");\n      }\n    }\n    const newPost = {\n      title: formData.postTitle,\n      content: formData.postText,\n      linkFlairID: linkFlairID,\n      postedBy: formData.creatorUsername,\n      postedDate: (editPost === null || editPost === void 0 ? void 0 : editPost.postedDate) || new Date(),\n      commentIDs: (editPost === null || editPost === void 0 ? void 0 : editPost.commentIDs) || [],\n      views: (editPost === null || editPost === void 0 ? void 0 : editPost.views) || 0\n    };\n    try {\n      if (editPost) {\n        const editResponse = await axios.post(`http://localhost:8000/posts/edit/${editPost._id}`, newPost);\n        console.log(\"BEFORE EDIT:\", posts);\n        setPosts(prevPosts => prevPosts.map(post => post._id === editPost._id ? {\n          ...post,\n          ...editResponse.data.post\n        } : post));\n        console.log(\"AFTER EDIT:\", posts);\n        alert(\"Post updated successfully!\");\n      } else {\n        const response = await axios.post('http://localhost:8000/createNewPost', newPost);\n        newPost._id = response.data._id;\n        setPosts([...posts, response.data]); //update post array\n\n        // need to update it on the server side\n        //console.log(\"new post id\", newPost._id);\n        for (const community of communities) {\n          //console.log(community.postIDs);\n          if (community.name === formData.communitySelection) {\n            community.postIDs.push(newPost._id);\n            //console.log(\"AFTER\", community.postIDs);\n            // console.log(\"Community ID:\", community._id);\n            // console.log(\"Community ID:\", newPost._id);\n            try {\n              await axios.post(`http://localhost:8000/communities/updateCommunityPostIDs/${community._id}`, community);\n            } catch (error) {\n              console.log(\"Failed to update community postIDs array. Please try again.\");\n            }\n          } //update community postIDs array\n        }\n        ;\n\n        // Clear form after submission\n        setFormData({\n          communitySelection: '',\n          postTitle: '',\n          linkFlair: '',\n          postText: '',\n          creatorUsername: '',\n          createNewLinkFlair: ''\n        });\n        alert(\"Post submitted successfully!\");\n      }\n      setPage('home');\n    } catch (error) {\n      console.log(\"Failed to submit post. Please try again.\");\n    }\n  };\n  const cancelButton = e => {\n    e.preventDefault();\n    setFormData({\n      communitySelection: '',\n      postTitle: '',\n      linkFlair: '',\n      postText: '',\n      creatorUsername: '',\n      createNewLinkFlair: ''\n    });\n    setPage('home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newPostPageViewDiv\",\n    className: \"main_cont_divs\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"create_post_div\",\n      children: [editPost ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"createPostHTag\",\n        children: \"Edit your community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"createPostHTag\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"createPostHTag\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"create_post_drop_down_div\",\n        className: \"postDivs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"communitySelection\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Community Selection\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredIndicator\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          disabled: editPost,\n          id: \"communitySelection\",\n          className: \"selectDropdown\",\n          value: formData.communitySelection,\n          onChange: handleInputChange,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Community\"\n          }, \"\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), communities.map(community => {\n            //value will indicate community name\n            //console.log('Community ID:', community.name)\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: community.name,\n              className: \"postBarElement\",\n              children: community.name\n            }, community._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.communitySelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post_title_div\",\n        className: \"postDivs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postTitle\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Post Title\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredIndicator\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"100\",\n          placeholder: \"Enter Post Title\",\n          id: \"postTitle\",\n          className: \"postInputBox\",\n          value: formData.postTitle,\n          onChange: handleInputChange,\n          noValidate: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.postTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"link_flair_selection\",\n        className: \"postDivs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"linkFlair\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Link Flair Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"linkFlairDropdownAndInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"linkFlair\",\n            className: \"selectDropdown\",\n            value: formData.linkFlair,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Link Flair\"\n            }, \"\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), linkFlairs.map(linkFlair =>\n            /*#__PURE__*/\n            //value will indicate linkFlair content\n            _jsxDEV(\"option\", {\n              value: linkFlair._id,\n              className: \"postBarElement\",\n              children: linkFlair.content\n            }, linkFlair._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"CREATE_NEW_LINK_FLAIR\",\n              className: \"navBarElement\",\n              children: \"CREATE NEW LINK FLAIR\"\n            }, \"CREATE_NEW_LINK_FLAIR\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            maxLength: \"30\",\n            placeholder: \"Enter New Link Flair\",\n            id: \"createNewLinkFlair\",\n            className: \"postInputBox\",\n            value: formData.createNewLinkFlair,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"linkFlairInputError\",\n            className: \"error-message\",\n            children: errors.createNewLinkFlair\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post_text_div\",\n        className: \"postDivs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postText\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Post Text\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"requiredIndicator\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter Post Text\",\n          id: \"postText\",\n          className: \"postInputBox\",\n          value: formData.postText,\n          onChange: handleInputChange,\n          noValidate: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post_button_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submitPostFormButton\",\n          children: \"Submit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"cancel\",\n          id: \"cancelPostFormButton\",\n          onClick: cancelButton,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n_s(NewPostPageView, \"1tSzAj2XHeWHgLWabhb3UrRx7O4=\");\n_c = NewPostPageView;\n;\n//export default NewPostPageView;\nvar _c;\n$RefreshReg$(_c, \"NewPostPageView\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewPostPageView","communities","setCommunities","linkFlairs","setLinkFlairs","posts","setPosts","setPage","loggedIn","userInfo","editPost","_s","_communities$find","initialCommunitySelection","find","community","postIDs","includes","_id","name","formData","setFormData","communitySelection","postTitle","title","linkFlair","linkFlairID","postText","content","creatorUsername","postedBy","createNewLinkFlair","console","log","errors","setErrors","handleInputChange","e","id","value","target","prevData","prevErrors","validateForm","newErrors","isValid","length","alert","submitForm","preventDefault","newLinkFlair","response","post","data","error","newPost","postedDate","Date","commentIDs","views","editResponse","prevPosts","map","push","cancelButton","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","disabled","onChange","noValidate","type","maxLength","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/newPostPageView.js"],"sourcesContent":["import '../stylesheets/newPostPageView.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function NewPostPageView({communities, setCommunities, linkFlairs, setLinkFlairs, posts, setPosts, setPage, loggedIn, userInfo, editPost}){\n\n    const initialCommunitySelection = editPost\n    ? communities.find((community) =>\n          community.postIDs.includes(editPost._id)\n      )?.name || ''\n    : '';\n\n    const [formData, setFormData] = useState({\n        communitySelection: initialCommunitySelection,\n        postTitle: editPost?.title || '',\n        linkFlair: editPost?.linkFlairID || '',\n        postText: editPost?.content || '',\n        creatorUsername: editPost?.postedBy || userInfo[0],\n        createNewLinkFlair: '',\n    });\n    console.log(\"communities\", communities)\n    console.log(\"EDIT POST\", editPost)\n\n    const [errors, setErrors] = useState({\n        communitySelection: '',\n        postTitle: '',\n        linkFlair: '',\n        postText: '',\n        // creatorUsername: '',\n        createNewLinkFlair: '',\n    });\n\n    const handleInputChange = (e) => { \n        const { id, value } = e.target;\n        setFormData((prevData) => ({\n          ...prevData,\n          [id]: value,\n        }));\n\n        //console.log(\"ID\", id)\n        if(id === 'linkFlair'){\n            setErrors((prevErrors) => ({\n                ...prevErrors,\n                createNewLinkFlair: ''\n            }));\n        }\n    };\n\n    const validateForm = () => {\n        //const newErrors = { communitySelection: '', postTitle: '', linkFlair: '', postText: '', creatorUsername: '', createNewLinkFlair: '' };\n        const newErrors = { communitySelection: '', postTitle: '', linkFlair: '', postText: '', createNewLinkFlair: '' };\n        let isValid = true;\n    \n        // Add validation logic\n        if (!formData.communitySelection) {\n          newErrors.communitySelection = 'Please select a community.';\n          isValid = false;\n        }\n        if (!formData.postTitle || formData.postTitle.length > 100) {\n          newErrors.postTitle = 'Post title should be between 0 - 100 characters.';\n          isValid = false;\n        }\n        if (!formData.postText) {\n          newErrors.postText = 'Post content cannot be empty.';\n          isValid = false;\n        }\n        if ((formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" && !formData.createNewLinkFlair) || formData.createNewLinkFlair.length > 30) {\n          newErrors.createNewLinkFlair = 'Link Flair should be between 0 - 30 characters.';\n          isValid = false;\n        }\n        // if (!formData.creatorUsername) {\n        //     newErrors.creatorUsername = 'Username is required.';\n        //     isValid = false;\n        // }\n        if(!loggedIn){\n            alert(\"You must be logged in to create a post.\");\n            isValid = false;\n        }\n        // else{\n        //     console.log(\"userInfo\", userInfo[0]);\n        //     setFormData({...formData, creatorUsername: userInfo[0]});\n        // }\n    \n        setErrors(newErrors);\n        return isValid;\n    };\n\n    const submitForm = async (e) => {\n        e.preventDefault();\n        if (!validateForm()) return;\n\n        //pass in linkFlairID\n        let linkFlairID = formData.linkFlair;\n        //console.log(formData);\n\n        if (formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" && formData.createNewLinkFlair) {\n            const newLinkFlair = { \n                content: formData.createNewLinkFlair,\n            };\n\n            try{\n                const response = await axios.post('http://localhost:8000/createNewLinkFlair', newLinkFlair);\n                newLinkFlair.linkFlairID = response.data._id;\n                linkFlairID = newLinkFlair.linkFlairID;\n                setLinkFlairs([...linkFlairs, response.data]);\n            }\n            catch (error) {\n                console.log(\"Failed to submit link flair. Please try again.\");\n            }\n        }\n\n        \n\n        const newPost = {  \n            title: formData.postTitle,\n            content: formData.postText,\n            linkFlairID: linkFlairID,\n            postedBy: formData.creatorUsername,\n            postedDate: editPost?.postedDate || new Date(), \n            commentIDs: editPost?.commentIDs || [],\n            views: editPost?.views || 0,\n        };\n\n        try{\n            if (editPost) {\n                const editResponse = await axios.post(`http://localhost:8000/posts/edit/${editPost._id}`, newPost);\n                console.log(\"BEFORE EDIT:\", posts)\n                setPosts((prevPosts) =>\n                    prevPosts.map((post) =>\n                        post._id === editPost._id ? { ...post, ...editResponse.data.post } : post\n                    )\n                );\n                console.log(\"AFTER EDIT:\", posts)\n                alert(\"Post updated successfully!\");\n            } else {\n                const response = await axios.post('http://localhost:8000/createNewPost', newPost);\n\n                newPost._id = response.data._id;\n                setPosts([...posts, response.data]);//update post array\n\n                // need to update it on the server side\n                //console.log(\"new post id\", newPost._id);\n                for(const community of communities) {\n                    //console.log(community.postIDs);\n                    if (community.name === formData.communitySelection) {\n                        community.postIDs.push(newPost._id);\n                        //console.log(\"AFTER\", community.postIDs);\n                        // console.log(\"Community ID:\", community._id);\n                        // console.log(\"Community ID:\", newPost._id);\n                        try{\n                            await axios.post(`http://localhost:8000/communities/updateCommunityPostIDs/${community._id}`, community);\n                        }\n                        catch (error) {\n                            console.log(\"Failed to update community postIDs array. Please try again.\");\n                        }\n                    }//update community postIDs array\n                };\n            \n                // Clear form after submission\n                setFormData({\n                    communitySelection: '',\n                    postTitle: '',\n                    linkFlair: '',\n                    postText: '',\n                    creatorUsername: '',\n                    createNewLinkFlair: '',\n                });\n                alert(\"Post submitted successfully!\");\n            }\n                setPage('home');\n        }\n        catch (error) {\n            console.log(\"Failed to submit post. Please try again.\");\n        }\n    };\n\n    const cancelButton = (e) =>{\n        e.preventDefault();\n        setFormData({\n            communitySelection: '',\n            postTitle: '',\n            linkFlair: '',\n            postText: '',\n            creatorUsername: '',\n            createNewLinkFlair: '',\n        });\n        setPage('home');\n    };\n    return (\n        <div id=\"newPostPageViewDiv\" className=\"main_cont_divs\">\n            <div id=\"create_post_div\">\n                {editPost ? (<h2 id=\"createPostHTag\">Edit your community</h2>) : (<h2 id=\"createPostHTag\">Create Post</h2>)}\n                <h2 id=\"createPostHTag\">Create Post</h2>\n            </div>\n        \n            <form onSubmit={submitForm}>\n                {/* This is the drop down menu */}\n                <div id=\"create_post_drop_down_div\" className=\"postDivs\">\n                    <label htmlFor=\"communitySelection\"><b>Community Selection<span className=\"requiredIndicator\">*</span></b></label>\n                    <select disabled={editPost}\n                    id=\"communitySelection\" className=\"selectDropdown\" value={formData.communitySelection} onChange={handleInputChange} noValidate>\n                        <option key=\"\" value=\"\" disabled>Select Community</option>\n                        {communities.map((community) => {//value will indicate community name\n                            //console.log('Community ID:', community.name)\n                            return (<option key={community._id} value={community.name} className=\"postBarElement\">\n                                {community.name}\n                            </option>\n                        )})}\n                    </select>\n                    <div className=\"error-message\">{errors.communitySelection}</div>\n                </div>\n    \n                {/* This is the post title input */}\n                <div id=\"post_title_div\" className=\"postDivs\">\n                    <label htmlFor=\"postTitle\"><b>Post Title<span className=\"requiredIndicator\">*</span></b></label>\n                    <input type=\"text\" maxLength=\"100\" placeholder=\"Enter Post Title\" id=\"postTitle\" className=\"postInputBox\" value={formData.postTitle} onChange={handleInputChange} noValidate/>\n                    <div className=\"error-message\">{errors.postTitle}</div>\n                </div>\n                        \n                {/* This is the link flair selection menu */}\n                <div id=\"link_flair_selection\" className=\"postDivs\">\n                    <label htmlFor=\"linkFlair\"><b>Link Flair Selection</b></label>\n                    <div id=\"linkFlairDropdownAndInput\">\n                        <select id=\"linkFlair\" className=\"selectDropdown\" value={formData.linkFlair} onChange={handleInputChange}>\n                            <option key=\"\" value=\"\">Select Link Flair</option>\n                            {linkFlairs.map((linkFlair) => (//value will indicate linkFlair content\n                                <option key={linkFlair._id} value={linkFlair._id} className=\"postBarElement\">\n                                {linkFlair.content}\n                                </option>\n                            ))}\n                            <option key=\"CREATE_NEW_LINK_FLAIR\" value=\"CREATE_NEW_LINK_FLAIR\" className=\"navBarElement\">CREATE NEW LINK FLAIR</option>\n        \n                        </select>\n                        {formData.linkFlair === \"CREATE_NEW_LINK_FLAIR\" ? (\n                            <input \n                                type=\"text\" \n                                maxLength=\"30\" \n                                placeholder=\"Enter New Link Flair\" \n                                id=\"createNewLinkFlair\" \n                                className=\"postInputBox\" \n                                value={formData.createNewLinkFlair} \n                                onChange={handleInputChange} \n                            />\n                        ) : null}\n                        <div id=\"linkFlairInputError\" className=\"error-message\">{errors.createNewLinkFlair}</div>\n                    </div>\n                </div>\n    \n                {/* This is the post text input box */}\n                <div id=\"post_text_div\" className=\"postDivs\">\n                    <label htmlFor=\"postText\"><b>Post Text<span className=\"requiredIndicator\">*</span></b></label>\n                    <textarea placeholder=\"Enter Post Text\" id=\"postText\" className=\"postInputBox\" value={formData.postText} onChange={handleInputChange} noValidate/>\n                    <div className=\"error-message\">{errors.postText}</div>\n                </div>\n    \n                {/* This is the creator username input box */}\n                {/* <div id=\"post_user_div\" className=\"postDivs\">\n                <label htmlFor=\"creatorUsername\"><b>Content Creator Name<span className=\"requiredIndicator\">*</span></b></label>\n                <input type=\"text\" placeholder=\"Enter Username\" id=\"creatorUsername\" className=\"postInputBox\" value={formData.creatorUsername} onChange={handleInputChange} noValidate/>\n                    <div className=\"error-message\">{errors.creatorUsername}</div>\n                </div> */}\n    \n                <div id=\"post_button_div\">\n                    <button type=\"submit\" id=\"submitPostFormButton\">Submit Post</button>\n                    <button type=\"cancel\" id=\"cancelPostFormButton\" onClick={cancelButton}>Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n//export default NewPostPageView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}