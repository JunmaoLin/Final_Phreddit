{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/homePage.js\",\n  _s = $RefreshSig$();\nimport '../stylesheets/homePage.css';\nimport viewIcon from '../images/view.svg';\nimport commentIcon from '../images/comment.svg';\nimport noSearchIcon from '../images/no-search-result-icon.svg';\nimport memberCountIcon from '../images/memberCountIcon.svg';\nimport postCountIcon from '../images/postCountIcon.svg';\nimport upvoteIcon from '../images/upvoteIcon.png';\nimport downVoteIcon from '../images/downvoteIcon.png';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TheHomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      order: orderNewest\n    };\n    this.updateOrder = this.updateOrder.bind(this);\n    this.resetOrder = this.resetOrder.bind(this);\n  }\n  updateOrder(newOrder) {\n    //console.log(\"Updating order to: \", newOrder);\n    this.setState({\n      order: newOrder\n    }, () => {\n      console.log(\"Updated state:\", this.state.order);\n    });\n  }\n  resetOrder() {\n    //console.log(\"Resetting to newest\");\n    this.setState({\n      order: orderNewest\n    });\n  }\n  render() {\n    const {\n      setPage,\n      goToPostPage,\n      posts,\n      communities,\n      comments,\n      linkFlairs,\n      handleOrderButtonClick,\n      loggedIn,\n      userInfo\n    } = this.props;\n    //console.log(\"HOME PAGE PROPS\", this.props);\n\n    let userCommunityPosts = [];\n    let otherCommunityPosts = posts;\n    if (loggedIn) {\n      const userCommunities = communities.filter(community => community.members.includes(userInfo[0]));\n      userCommunityPosts = posts.filter(post => userCommunities.some(community => community.postIDs.includes(post._id)));\n      otherCommunityPosts = posts.filter(post => !userCommunityPosts.some(userPost => userPost._id === post._id));\n    }\n    const noPostsFound = userCommunityPosts.length === 0 && otherCommunityPosts.length === 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homePage\",\n      className: \"main_cont_divs\",\n      children: [/*#__PURE__*/_jsxDEV(HomePageHeader, {\n        handleOrderButtonClick: handleOrderButtonClick,\n        updateOrder: this.updateOrder,\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostCount, {\n        arrayLength: posts.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), \" Total\", noPostsFound && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noPostsImage\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"noSearchIcon\",\n          alt: \"No search results\",\n          src: noSearchIcon,\n          height: \"100%\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), !noPostsFound && loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PostSection, {\n          posts: userCommunityPosts,\n          order: this.state.order,\n          comments: comments,\n          linkFlairs: linkFlairs,\n          communities: communities,\n          goToPostPage: goToPostPage,\n          page: \"home\",\n          loggedIn: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), !noPostsFound && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: loggedIn ? \"Other Communities\" : \"All Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostSection, {\n          posts: otherCommunityPosts,\n          order: this.state.order,\n          comments: comments,\n          linkFlairs: linkFlairs,\n          communities: communities,\n          goToPostPage: goToPostPage,\n          page: \"home\",\n          loggedIn: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass HomePageHeader extends React.Component {\n  render() {\n    const {\n      setPage\n    } = this.props;\n    //console.log(\"IN HOME PAGE HEADER\", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n        page: \"home\",\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonDisplay, {\n        handleOrderButtonClick: this.props.handleOrderButtonClick,\n        updateOrder: this.props.updateOrder,\n        orderNewest: orderNewest,\n        orderOldest: orderOldest,\n        orderActive: orderActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport function InfoSection(props) {\n  _s();\n  const [upVotes, setUpVotes] = useState(props.upVotes);\n  const updatePostVoteCountNReputation = async (upOrDown, postID, loggedIn, setUpVotes) => {\n    if (!loggedIn) {\n      alert(\"You need to log in to vote.\");\n      return;\n    }\n    try {\n      console.log(\"updatePostVoteCountNReputation is callllllleedddd\", postID, loggedIn);\n      let userReputation;\n      if (loggedIn) {\n        let userReputationData = await axios.get('http://localhost:8000/getUserReputation', {\n          withCredentials: true\n        });\n        userReputation = userReputationData.data.userReputation;\n        // console.log(\"USER REPUTATION\", userReputation);\n        // console.log(\"USER REPUTATION\", userReputation.data.userReputation);\n      }\n      if (userReputation < 50) {\n        alert(\"You need a reputation of at least 50 to vote\");\n        return;\n      }\n      if (userReputation >= 50) {\n        let vote = upOrDown === \"up\" ? 1 : -1;\n        const response = await axios.post('http://localhost:8000/updatePostVoteCount', {\n          id: postID,\n          vote: vote\n        }, {\n          withCredentials: true\n        });\n        console.log(\"RESPONSE\", response);\n        if (response.data.success) {\n          setUpVotes(response.data.upVotes); // Update state here\n        }\n      }\n    } catch (error) {\n      console.error(\"Error updating vote count:\", error);\n      alert(\"An error occurred while updating your vote.\");\n    }\n  };\n  //let setPage = props.setPage;\n  const checkprops = props.page.toLowerCase().trim();\n  //console.log(\"propppppppssssssss\",props)\n  if (checkprops === 'home') {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"left-side\",\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  } else if (checkprops === 'community') {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comName\",\n        children: props.comName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this), \"Created:  \", /*#__PURE__*/_jsxDEV(TimeStamp, {\n        postedDate: props.startDate\n      }, props.startDate, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), \"Created By: \", props.createdBy, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postCount\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"postCountIcon\",\n          alt: \"postCountIcon\",\n          src: postCountIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 14\n        }, this), \" \", props.comPostCount, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"memberCountIcon\",\n          alt: \"memberCountIcon\",\n          src: memberCountIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 103\n        }, this), \" \", props.memberCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this);\n  } else if (checkprops === 'search') {\n    if (props.posts.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"left-side\",\n        children: [\"Results for: \", props.txtInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"left-side\",\n        children: [\"No results found for: \", props.txtInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    //console.log(\"IN HERE BRO\", props);\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comName\",\n          children: props.comName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TimeStamp, {\n          postedDate: props.startDate\n        }, props.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: props.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"postInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comName\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), props.linkFlairInput, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: props.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"viewingIcon\",\n            className: \"viewIcon\",\n            src: viewIcon,\n            height: \"20\",\n            width: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), props.viewCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"commentingIcon\",\n            src: commentIcon,\n            height: \"17\",\n            width: \"17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), props.commentCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upVoteButton\",\n            disabled: !props.loggedIn,\n            onClick: () => updatePostVoteCountNReputation(\"up\", props.postID, props.loggedIn, setUpVotes),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"upvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: upvoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"downVoteButton\",\n            disabled: !props.loggedIn,\n            onClick: () => updatePostVoteCountNReputation(\"down\", props.postID, props.loggedIn, setUpVotes),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"downvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: downVoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), upVotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"create_comment_button\",\n        disabled: !props.loggedIn,\n        onClick: () => {\n          props.setPage(\"NewCommentPageView\");\n          props.setCommentOrReplyParentID(props.postID);\n          props.setCommentOrReply(\"comment\");\n        },\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(InfoSection, \"7sInmC8mC+qxFc9vMYA18VmQ8rs=\");\n_c = InfoSection;\nexport class ButtonDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.orderNewest = this.orderNewest.bind(this);\n    this.orderOldest = this.orderOldest.bind(this);\n    this.orderActive = this.orderActive.bind(this);\n  }\n  orderNewest() {\n    //console.log(\"Newest Clicked\");\n    this.props.handleOrderButtonClick();\n    this.props.updateOrder(orderNewest);\n  }\n  orderOldest() {\n    //console.log(\"Oldest Clicked\");\n    this.props.handleOrderButtonClick();\n    this.props.updateOrder(orderOldest);\n  }\n  orderActive() {\n    //console.log(\"Active Clicked\");\n    this.props.handleOrderButtonClick();\n    this.props.updateOrder(orderActive);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttonSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rightSide\",\n        id: \"newest\",\n        onClick: this.orderNewest,\n        children: \"Newest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rightSide\",\n        id: \"oldest\",\n        onClick: this.orderOldest,\n        children: \"Oldest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rightSide\",\n        id: \"active\",\n        onClick: this.orderActive,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport function PostCount(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"postCount\",\n    children: [props.arrayLength, \" Posts\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 9\n  }, this);\n}\n_c2 = PostCount;\nexport class PostSection extends React.Component {\n  render() {\n    const {\n      posts,\n      communities,\n      order,\n      comments,\n      linkFlairs\n    } = this.props;\n    // console.log(\"THIS SI THE ORDER\", order)\n    //console.log(\"IN POST SECTION\", this.props.page)\n    //console.log(\"IN POST SECTION\", this.props.goToPostPage)\n    //console.log(\"POST SECTION COMMUNITIES\", communities);\n    const sortedPosts = postsList(posts, order, communities, comments, linkFlairs);\n    const listPosts = sortedPosts.map((post, index) => {\n      //console.log(\"THIS IS POST\", this.openPostView)\n      // console.log(\"CURRENT POST TITLE\", post)\n      // console.log(post.props.postID)\n      //console.log(\"IN THE POST SECTION\", post.props)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"id-\" + post.props.first20,\n        onClick: () => {\n          //console.log(\"BEFORE ASSIGNMENT\")\n          this.props.goToPostPage(post.props.postTitle);\n          //console.log(\"AFTER ASSIGNMENT\")\n        },\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          ...post.props,\n          page: this.props.page,\n          loggedIn: this.props.loggedIn\n          //openPost={this.openPostView} // Pass the function as prop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }, this)\n      }, post.props.postID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this);\n    });\n    //console.log(\"listPosts\", listPosts)\n    let postSectionInfo;\n    if (this.props.page === \"home\") {\n      postSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"posts\",\n        children: [/*#__PURE__*/_jsxDEV(PostCount, {\n          arrayLength: sortedPosts.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }, this), listPosts]\n      }, sortedPosts.length, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }, this);\n      //console.log(postSectionInfo);\n    } else if (this.props.page === \"community\") {\n      postSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"posts\",\n        children: listPosts\n      }, \"community\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 32\n      }, this);\n    }\n    // else if(this.props.page === \"search\"){\n    //     postSectionInfo = \n    //     (\n    //     <div key={sortedPosts.length} class=\"posts\">\n    //         <PostCount arrayLength = {sortedPosts.length}/>\n    //         {listPosts}\n    //     </div>);\n    // }\n    //console.log(listPosts);\n\n    //console.log(\"BEFORE IF\");\n    if (Array.isArray(postSectionInfo)) {\n      console.warn(\"postSectionInfo is an array!:\", postSectionInfo);\n    }\n    return postSectionInfo;\n  }\n}\nexport class Post extends React.Component {\n  render() {\n    // console.log(\"THIS IS THE DATE\", this.props.startDate);\n    let topOfPost;\n    if (this.props.page === \"home\") {\n      topOfPost = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topOfPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comName\",\n          children: this.props.community\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: this.props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimeStamp, {\n          postedDate: this.props.startDate\n        }, this.props.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 22\n      }, this);\n    } else if (this.props.page === \"community\") {\n      topOfPost = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topOfPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: this.props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TimeStamp, {\n          postedDate: this.props.startDate\n        }, this.props.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 22\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      onClick: this.handlePostView,\n      children: [topOfPost, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postTitle\",\n        children: this.props.postTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), this.props.postlinkFlairID, this.props.first20, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"viewIcon\",\n            id: \"viewIcon\",\n            src: viewIcon,\n            height: \"20\",\n            width: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"counters\",\n            children: this.props.viewCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterDivs\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"commentIcon\",\n            src: commentIcon,\n            height: \"17\",\n            width: \"17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"counters\",\n            children: this.props.commentCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voteDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"HomePageUpVoteButton\",\n            disabled: !this.props.loggedIn,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"upvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: upvoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"HomePageDownVoteButton\",\n            disabled: !this.props.loggedIn,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"downvoteIcon\",\n              alt: \"voteCountIcon\",\n              src: downVoteIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"counters\",\n            children: this.props.upVotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 8\n    }, this);\n  }\n}\nexport function getPost(post, communities, comments, linkFlairs) {\n  //console.log(post);\n  // console.log(linkFlairs);\n  //console.log(\"THIS IS THE COMMUNITIES in Get post\", communities)\n  //console.log(\"GETPOST\", post)\n  const postID = post._id;\n  const community = getCommunity(post._id, communities);\n  const userName = post.postedBy;\n  const startDate = post.postedDate;\n  const postTitle = post.title;\n  const postlinkFlairID = getLinkFlair(post.linkFlairID, linkFlairs);\n  const first20 = post.content.substring(0, 80);\n  const viewCount = post.views;\n  const commentCount = getCommentNum(post, comments);\n  const upVotes = post.upVotes;\n  return [community, userName, startDate, postTitle, postlinkFlairID, first20, viewCount, commentCount, postID, upVotes];\n}\nexport class TimeStamp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      startDate: new Date(props.postedDate)\n    };\n  }\n  updateTime(diff) {\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const months = Math.floor(diff / (1000 * 60 * 60 * 24 * 30));\n    const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 30 * 12));\n    if (seconds < 60) {\n      //console.log(\"Time Difference: \" + seconds + \" seconds\");\n      return seconds + \" second(s) ago\";\n    } else if (minutes < 60) {\n      //console.log(\"Time Difference: \" + minutes + \" minutes\");\n      return minutes + \" minute(s) ago\";\n    } else if (hours < 24) {\n      //console.log(\"Time Difference: \" + hours + \" hours\");\n      return hours + \" hour(s) ago\";\n    } else if (days < 30) {\n      //console.log(\"Time Difference: \" + days + \" days\");\n      return days + \" day(s) ago\";\n    } else if (months < 12) {\n      //console.log(\"Time Difference: \" + months + \" months\");\n      return months + \" month(s) ago\";\n    } else {\n      //console.log(\"Time Difference: \" + years + \" years\");\n      return years + \" year(s) ago\";\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeStamp\",\n      id: this.props.id,\n      children: this.updateTime(this.state.date - this.state.startDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 11\n    }, this);\n  }\n  componentDidMount() {\n    //this.timerID = setInterval(\n    //  ()=> this.setState({date: new Date()}), 1000\n    //);\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n}\nexport function getCommunity(postID, communities) {\n  //console.log(\"POST ID\", postID)\n  //console.log(\"COMMUNITIES\", communities)\n  const community = communities.find(community => {\n    //console.log(\"Checking community:\", community.postIDs);\n    //console.log(\"Checking for:\", postID);\n    return community.postIDs.includes(postID);\n  }) || {\n    name: \"hsjkdhkfj\"\n  };\n\n  //console.log(\"POST IDS\", postID)\n  //console.log(\"COMMUNITY NAME\", community.name)\n  return community.name;\n}\nfunction getCommentNum(post, comments) {\n  // console.log(\"POST OR COMMENT: \");\n  // console.log(post);\n  //console.log(\"THESE ARE THE COMMENTS\", comments);\n\n  if (post === null || post.commentIDs.length === 0 || post.commentIDs === null) {\n    // console.log(\"IN NULL RN BRO\");\n    return 0;\n  }\n  let comment;\n  let total = post.commentIDs.length;\n  for (let i = 0; i < total; i++) {\n    comment = getComment(post.commentIDs[i], comments);\n    if (comment != null) {\n      total += getCommentNum(comment, comments);\n    }\n  }\n  return total;\n}\nfunction getLinkFlair(linkFlairID, linkFlairs) {\n  // console.log(\"THIS IS THE LINK FLAIR ID\", linkFlairs)\n  // console.log(\"THIS IS THE linkflair id to look for\", linkFlairID)\n  const linkFlair = linkFlairs.find(flair => flair._id === linkFlairID);\n  if (!linkFlair) {\n    return \"not FOUND\";\n  }\n  return linkFlair.content;\n}\nexport function getComment(commentName, comments) {\n  //console.log(\"getComment\", comments);\n  //console.log(\"RETURNING THIS: \", comments.find(comment => String(comment._id) === String(commentName)));\n  return comments.find(comment => String(comment._id) === String(commentName)) || console.log(\"CANT FIND THIS\", commentName);\n}\nfunction postsList(postsToDisplay, order, communities, comments, linkFlairs) {\n  //console.log(\"THIS IS THE POST BEFORE GOING TO ORDER\", postsToDisplay);\n  // console.log(\"IN POSTSLIST\", postsToDisplay);\n  //console.log(\"BEFORE communities in postsList\", communities);\n  const sortedList = order(postsToDisplay, comments);\n  //console.log(\"Sorted posts:\", sortedList);\n  //console.log(postsToDisplay);\n  const postsList = sortedList.map(function (post, index) {\n    //console.log(\"AFTER communities in postsList\", communities);\n    let postInfo = getPost(post, communities, comments, linkFlairs);\n    //console.log(\"postsLIST\", postInfo)\n    const linkFlair = postInfo[4] !== 'not FOUND' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"linkFlair\",\n        children: postInfo[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 9\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(Post, {\n      postID: postInfo[8],\n      community: postInfo[0],\n      userName: postInfo[1],\n      startDate: postInfo[2],\n      postTitle: postInfo[3],\n      postlinkFlairID: linkFlair,\n      first20: postInfo[5],\n      viewCount: postInfo[6],\n      commentCount: postInfo[7],\n      upVotes: postInfo[9]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 9\n    }, this);\n  });\n  return postsList;\n}\nexport const orderNewest = postToDisplay => {\n  //console.log(\"pressed newest\");\n  //console.log(\"This is conName:\" + comName);\n  //console.log(\"THESE ARE THE POSTS TO DISPLAY IN NEWEST: \",postToDisplay)\n  let comPosts = postToDisplay;\n  // if(page == \"community\"){\n  //   comPosts = filterPosts(\"community\", comName);\n  // }\n\n  // if(page == \"search\"){\n  //   comPosts = Array.from(filterPosts(\"search\", comName));\n  // }\n  //console.log(\"IN HERE\");\n  comPosts.sort(function (a, b) {\n    return new Date(b.postedDate) - new Date(a.postedDate);\n  });\n  //console.log(comPosts);\n\n  return comPosts;\n\n  //console.log(\"Newest\");\n  //console.log(comPosts);\n\n  //postsList(comPosts, page);\n  //console.log(posts);\n};\nexport const orderOldest = postToDisplay => {\n  //console.log(\"BEING ORDERED BY OLDEST\")\n  // console.log(\"pressed oldest\");\n  let comPosts = postToDisplay;\n  // if(page == \"community\"){\n  //   comPosts = filterPosts(\"community\", comName);\n  // }\n\n  // if(page == \"search\"){\n  //   comPosts = Array.from(filterPosts(\"search\", comName));\n  // }\n\n  // console.log(\"BEFORE\", comPosts);\n\n  comPosts.sort(function (a, b) {\n    // console.log(\"A\", a.postedDate)\n    // console.log(\"B\", b.postedDate)\n    return new Date(a.postedDate) - new Date(b.postedDate);\n  });\n  //console.log(\"After\", comPosts);\n  return comPosts;\n\n  //postsList(comPosts, page);\n};\nexport const orderActive = (postToDisplay, comments) => {\n  //console.log(\"pressed active\");\n  let comPosts = postToDisplay;\n  // if(page == \"community\"){\n  //   comPosts = filterPosts(\"community\", comName);\n  // }\n\n  // if(page == \"search\"){\n  //   comPosts = Array.from(filterPosts(\"search\", comName));\n  // }\n\n  let activePost = new Map([]);\n  for (const post of comPosts) {\n    //let commentNum = getCommentNum(x, comments)\n    //console.log(\"COMMENTS\", comments);\n    let commentArray = getTotalComments(post, comments);\n    //console.log(\"COMMENT ARRAY\", commentArray);\n    commentArray.sort(function (a, b) {\n      return new Date(b.commentedDate) - new Date(a.commentedDate);\n    });\n\n    // If the post has comments, take the most recent comment date\n    // If no comments, use the post creation date\n    let recentDate = commentArray.length > 0 ? new Date(commentArray[0].commentedDate) : new Date(post.postedDate);\n    activePost.set(post, recentDate);\n\n    //activePost.set(post, commentArray[0].commentedDate);\n  }\n  comPosts = Array.from(activePost);\n  //console.log(\"BEFORE\");\n  //console.log(comPosts);\n\n  comPosts.sort(function (a, b) {\n    //console.log(\"THIS IS A\", a[0].postID,  \"THIS IS B\", b[0].postID)\n    if (b[1] === a[1]) {\n      //console.log(\"SAME DATES FOR COMMENTS DETECTED\");\n      return new Date(b[0].postedDate) - new Date(a[0].postedDate);\n    }\n    return b[1] - a[1];\n  });\n\n  //console.log(\"AFTER\");\n  //console.log(comPosts);\n  comPosts = comPosts.map(function (element) {\n    return element[0];\n  });\n  return comPosts;\n  //postsList(comPosts, page);\n};\nexport function getTotalComments(post, comments) {\n  let commentArray = [];\n  if (post === null || post.commentIDs.length === 0 || post.commentIDs === null) {\n    return commentArray;\n  }\n  post.commentIDs.sort(function (a, b) {\n    //console.log(\"in the sort\");\n    return new Date(getComment(b, comments).commentedDate) - new Date(getComment(a, comments).commentedDate);\n  });\n  // console.log(\"THIS IS SORTED\");\n  //console.log(\"COMMENT IDS\", post.commentIDs);\n\n  let total = post.commentIDs.length;\n  for (let i = 0; i < total; i++) {\n    let comment = getComment(post.commentIDs[i], comments);\n    if (comment != null) {\n      // console.log(\"COMMENT GETTING PUSHED INTO ARRAY\");\n      // console.log(comment);\n      commentArray.push(comment);\n      let children = getTotalComments(comment, comments);\n      // console.log(\"CHILDREN BEING CONCAT\");\n      // console.log(children);\n\n      commentArray = commentArray.concat(children);\n      // console.log(\"CONCATING\");\n      // console.log(commentArray.concat(children));\n      // console.log(\"ARRAY AFTER\");\n      // console.log(commentArray);\n    }\n  }\n  // console.log(\"ARRAY BEING RETURNED\");\n  // console.log(commentArray);\n  return commentArray;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"InfoSection\");\n$RefreshReg$(_c2, \"PostCount\");","map":{"version":3,"names":["viewIcon","commentIcon","noSearchIcon","memberCountIcon","postCountIcon","upvoteIcon","downVoteIcon","React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TheHomePage","Component","constructor","props","state","order","orderNewest","updateOrder","bind","resetOrder","newOrder","setState","console","log","render","setPage","goToPostPage","posts","communities","comments","linkFlairs","handleOrderButtonClick","loggedIn","userInfo","userCommunityPosts","otherCommunityPosts","userCommunities","filter","community","members","includes","post","some","postIDs","_id","userPost","noPostsFound","length","id","className","children","HomePageHeader","fileName","_jsxFileName","lineNumber","columnNumber","PostCount","arrayLength","alt","src","height","width","PostSection","page","InfoSection","ButtonDisplay","orderOldest","orderActive","_s","upVotes","setUpVotes","updatePostVoteCountNReputation","upOrDown","postID","alert","userReputation","userReputationData","get","withCredentials","data","vote","response","success","error","checkprops","toLowerCase","trim","comName","description","TimeStamp","postedDate","startDate","createdBy","comPostCount","memberCount","txtInput","userName","title","linkFlairInput","content","viewCount","commentCount","disabled","onClick","setCommentOrReplyParentID","setCommentOrReply","_c","_c2","sortedPosts","postsList","listPosts","map","index","first20","postTitle","Post","postSectionInfo","class","Array","isArray","warn","topOfPost","handlePostView","postlinkFlairID","getPost","getCommunity","postedBy","getLinkFlair","linkFlairID","substring","views","getCommentNum","date","Date","updateTime","diff","seconds","Math","floor","minutes","hours","days","months","years","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","find","name","commentIDs","comment","total","i","getComment","linkFlair","flair","commentName","String","postsToDisplay","sortedList","postInfo","postToDisplay","comPosts","sort","a","b","activePost","Map","commentArray","getTotalComments","commentedDate","recentDate","set","from","element","push","concat","$RefreshReg$"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/homePage.js"],"sourcesContent":["import '../stylesheets/homePage.css';\nimport viewIcon from '../images/view.svg'\nimport commentIcon from '../images/comment.svg'\nimport noSearchIcon from '../images/no-search-result-icon.svg'\nimport memberCountIcon from '../images/memberCountIcon.svg'\nimport postCountIcon from '../images/postCountIcon.svg'\nimport upvoteIcon from '../images/upvoteIcon.png'\nimport downVoteIcon from '../images/downvoteIcon.png'\nimport React, {useState} from 'react';\nimport axios from 'axios';\n\n\nexport default class TheHomePage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {order: orderNewest};\n    \n        this.updateOrder = this.updateOrder.bind(this);\n        this.resetOrder = this.resetOrder.bind(this);\n    }\n\n    updateOrder(newOrder){\n        //console.log(\"Updating order to: \", newOrder);\n        this.setState({order: newOrder}, () => {\n            console.log(\"Updated state:\", this.state.order);\n        });\n    }\n\n    resetOrder(){\n        //console.log(\"Resetting to newest\");\n        this.setState({order: orderNewest});\n    }\n\n    render(){\n        const {setPage, goToPostPage, posts, communities, comments, linkFlairs, handleOrderButtonClick, loggedIn, userInfo} = this.props\n        //console.log(\"HOME PAGE PROPS\", this.props);\n\n        let userCommunityPosts = [];\n        let otherCommunityPosts = posts;\n\n        if (loggedIn) {\n            const userCommunities = communities.filter((community) =>\n                community.members.includes(userInfo[0])\n            );\n\n            userCommunityPosts = posts.filter((post) =>\n                userCommunities.some((community) => community.postIDs.includes(post._id))\n            );\n\n            otherCommunityPosts = posts.filter(\n                (post) => !userCommunityPosts.some((userPost) => userPost._id === post._id)\n            );\n        }\n        \n        const noPostsFound = userCommunityPosts.length === 0 && otherCommunityPosts.length === 0;\n\n        return(\n            <div id=\"homePage\" className=\"main_cont_divs\">\n                <HomePageHeader handleOrderButtonClick={handleOrderButtonClick} updateOrder={this.updateOrder} setPage={setPage}/>\n                <PostCount arrayLength = {posts.length}/> Total\n\n                {noPostsFound && (\n                    <div className=\"noPostsImage\">\n                        <img\n                            id=\"noSearchIcon\"\n                            alt=\"No search results\"\n                            src={noSearchIcon}\n                            height=\"100%\"\n                            width=\"100%\"\n                        />\n                    </div>\n                )}\n\n                {(!noPostsFound && loggedIn) && (\n                    <>\n                        <h3>Your Communities</h3>\n                        <PostSection\n                                posts={userCommunityPosts}\n                                order={this.state.order}\n                                comments={comments}\n                                linkFlairs={linkFlairs}\n                                communities={communities}\n                                goToPostPage={goToPostPage}\n                                page={\"home\"}\n                                loggedIn={loggedIn}\n                        />\n                    </>\n                )}\n                {!noPostsFound && (\n                    <>\n                    <h3>{loggedIn ? \"Other Communities\" : \"All Communities\"}</h3>\n                    <PostSection\n                        posts={otherCommunityPosts}\n                        order={this.state.order}\n                        comments={comments}\n                        linkFlairs={linkFlairs}\n                        communities={communities}\n                        goToPostPage={goToPostPage}\n                        page={\"home\"}\n                        loggedIn={loggedIn}\n                    />\n                    </>\n                )}\n            </div>\n        ); \n    }\n    \n}\n\nclass HomePageHeader extends React.Component{   \n    render(){\n        const {setPage} = this.props;\n        //console.log(\"IN HOME PAGE HEADER\", this.props);\n        return(\n            <div id=\"header\">\n                <InfoSection page={\"home\"} setPage={setPage}/>\n                <ButtonDisplay\n                    handleOrderButtonClick = {this.props.handleOrderButtonClick}\n                    updateOrder={this.props.updateOrder}\n                    orderNewest={orderNewest}\n                    orderOldest={orderOldest}\n                    orderActive={orderActive}\n                />\n            </div>\n        );\n    }\n}\n\nexport function InfoSection(props){\n    const [upVotes, setUpVotes] = useState(props.upVotes);\n    const updatePostVoteCountNReputation = async (upOrDown, postID, loggedIn, setUpVotes) => {\n        if (!loggedIn) {\n            alert(\"You need to log in to vote.\");\n            return;\n        }\n        try {\n            console.log(\"updatePostVoteCountNReputation is callllllleedddd\", postID, loggedIn);\n            let userReputation;\n            if(loggedIn){\n                let userReputationData = await axios.get('http://localhost:8000/getUserReputation', { withCredentials: true });\n                userReputation = userReputationData.data.userReputation\n                // console.log(\"USER REPUTATION\", userReputation);\n                // console.log(\"USER REPUTATION\", userReputation.data.userReputation);\n            }\n            if(userReputation < 50){\n                alert(\"You need a reputation of at least 50 to vote\");\n                return\n            }\n            if(userReputation >= 50){\n                let vote = upOrDown === \"up\" ? 1 : -1;\n                const response = await axios.post('http://localhost:8000/updatePostVoteCount', {\n                    id: postID,\n                    vote: vote\n                }, { withCredentials: true });\n                console.log(\"RESPONSE\", response);\n                if (response.data.success) {\n                    setUpVotes(response.data.upVotes); // Update state here\n                }\n            }\n        } catch (error) {\n            console.error(\"Error updating vote count:\", error);\n            alert(\"An error occurred while updating your vote.\");\n        }\n    };\n    //let setPage = props.setPage;\n    const checkprops = props.page.toLowerCase().trim();\n    //console.log(\"propppppppssssssss\",props)\n    if(checkprops === 'home'){\n        return(\n            <header id=\"left-side\">\n                All Posts \n            </header>\n        );\n    }\n    else if(checkprops === 'community'){\n        return(\n        <header id=\"left-side\">\n            <div className=\"comName\">\n            {props.comName}\n            </div>\n            <div className=\"description\">\n            {props.description}  \n            </div>\n\n            Created:  <TimeStamp key={props.startDate} postedDate={props.startDate}/>\n            <br></br>\n            Created By: {props.createdBy}  \n            \n            <div className=\"postCount\"> \n            {/* Post Count: {props.comPostCount} Member Count: {props.memberCount} */}\n            {<img id=\"postCountIcon\" alt=\"postCountIcon\" src={postCountIcon}/>} {props.comPostCount} {<img id=\"memberCountIcon\" alt=\"memberCountIcon\" src={memberCountIcon}/>} {props.memberCount}\n            </div> \n        </header>\n        );\n    }else if(checkprops === 'search'){\n        if(props.posts.length > 0){\n            return(\n                <header id=\"left-side\">\n                    Results for: {props.txtInput}\n                </header>\n            );\n        }\n        else{\n            return(\n                <header id=\"left-side\">\n                    No results found for: {props.txtInput}\n                </header>\n            );\n        }\n    }else{\n        //console.log(\"IN HERE BRO\", props);\n        return(\n            <header id=\"left-side\">\n                <div className=\"postTitle\">\n                    <div className=\"comName\">{props.comName}</div> \n                    <span>•</span> \n                        <TimeStamp key={props.startDate} postedDate={props.startDate}/>\n                </div>\n                <div className=\"postTitle\">\n                {props.userName}\n                </div>\n                <div id=\"postInfo\">\n                <div className=\"comName\">\n                {props.title}\n                </div> \n                {props.linkFlairInput}\n                <div className=\"content\">\n                {props.content}\n                </div>\n                </div>\n                <div className=\"counters\">\n                    <div className='counterDivs'>\n                        <img\n                            alt=\"viewingIcon\"\n                            className=\"viewIcon\"\n                            src={viewIcon}\n                            height=\"20\"\n                            width=\"20\"\n                        />\n                        {props.viewCount}\n                    </div>\n                \n                    <div className='counterDivs'>\n                        <img\n                            alt=\"commentingIcon\"\n                            src={commentIcon}\n                            height=\"17\"\n                            width=\"17\"\n                        />\n                        {props.commentCount}\n                    </div>\n                    \n                    {/* Post Page up/down votes */}\n                    <div className=\"voteDiv\">\n                        <button className='upVoteButton' disabled={!props.loggedIn} onClick={() => updatePostVoteCountNReputation(\"up\", props.postID, props.loggedIn, setUpVotes)}>\n                            <img\n                                className='upvoteIcon'\n                                alt=\"voteCountIcon\"\n                                src={upvoteIcon}\n                            />\n                        </button>\n                        <button className='downVoteButton' disabled={!props.loggedIn} onClick={() => updatePostVoteCountNReputation(\"down\", props.postID, props.loggedIn, setUpVotes)}>\n                            <img\n                            className='downvoteIcon'\n                            alt=\"voteCountIcon\"\n                            src={downVoteIcon}\n                        />\n                        </button>\n                        {upVotes}\n                    </div>\n                    {/* up and down votes */}\n                </div>\n                <button id=\"create_comment_button\" \n                    disabled={!props.loggedIn}\n                    onClick={() => { \n                    props.setPage(\"NewCommentPageView\"); \n                    props.setCommentOrReplyParentID(props.postID); \n                    props.setCommentOrReply(\"comment\");\n\n                }}\n                >Add a Comment\n                </button>\n                {/* comment button */}\n            </header>\n        );\n    }\n}\n\nexport class ButtonDisplay extends React.Component{\n    constructor(props) {\n        super(props);\n        this.orderNewest = this.orderNewest.bind(this);\n        this.orderOldest = this.orderOldest.bind(this);\n        this.orderActive = this.orderActive.bind(this);\n    }\n    \n    orderNewest(){\n        //console.log(\"Newest Clicked\");\n        this.props.handleOrderButtonClick();\n        this.props.updateOrder(orderNewest);\n    }\n\n    orderOldest(){\n        //console.log(\"Oldest Clicked\");\n        this.props.handleOrderButtonClick();\n        this.props.updateOrder(orderOldest)\n    }\n\n    orderActive(){\n        //console.log(\"Active Clicked\");\n        this.props.handleOrderButtonClick();\n        this.props.updateOrder(orderActive);\n    }\n\n\n    render(){\n        return(\n            <div id=\"buttonSection\">\n                <button className=\"rightSide\" id=\"newest\" onClick={this.orderNewest}>\n                    Newest\n                </button>\n                <button className=\"rightSide\" id=\"oldest\" onClick={this.orderOldest}>\n                    Oldest\n                </button>\n                \n                <button className=\"rightSide\" id=\"active\" onClick={this.orderActive}>\n                    Active\n                </button>\n            </div>\n        );\n    }\n}\n\nexport function PostCount(props){\n    return(\n        <div id=\"postCount\">\n            {props.arrayLength} Posts\n        </div>\n    );\n}\n\nexport class PostSection extends React.Component{\n\n    render(){\n        const {posts, communities, order, comments, linkFlairs} = this.props;\n        // console.log(\"THIS SI THE ORDER\", order)\n        //console.log(\"IN POST SECTION\", this.props.page)\n        //console.log(\"IN POST SECTION\", this.props.goToPostPage)\n        //console.log(\"POST SECTION COMMUNITIES\", communities);\n        const sortedPosts = postsList(posts, order, communities, comments, linkFlairs)\n        const listPosts = sortedPosts.map((post, index) =>{\n            //console.log(\"THIS IS POST\", this.openPostView)\n            // console.log(\"CURRENT POST TITLE\", post)\n            // console.log(post.props.postID)\n            //console.log(\"IN THE POST SECTION\", post.props)\n            return (\n            <div key={post.props.postID} id={\"id-\" + post.props.first20} onClick={\n                () => {\n                    //console.log(\"BEFORE ASSIGNMENT\")\n                    this.props.goToPostPage(post.props.postTitle)\n                    //console.log(\"AFTER ASSIGNMENT\")\n                    }}>\n                <Post \n                    {...post.props}\n                    page={this.props.page}\n                    loggedIn={this.props.loggedIn}\n                    //openPost={this.openPostView} // Pass the function as prop\n                />\n            </div>\n            );\n        })\n        //console.log(\"listPosts\", listPosts)\n        let postSectionInfo;\n        if(this.props.page === \"home\"){\n            postSectionInfo = \n            (\n            <div key={sortedPosts.length} class=\"posts\">\n                <PostCount arrayLength = {sortedPosts.length}/>\n                {listPosts}\n            </div>);\n            //console.log(postSectionInfo);\n        }\n        else if(this.props.page === \"community\"){\n            postSectionInfo = (<div key={\"community\"} id=\"posts\">{listPosts}</div>);\n        }\n        // else if(this.props.page === \"search\"){\n        //     postSectionInfo = \n        //     (\n        //     <div key={sortedPosts.length} class=\"posts\">\n        //         <PostCount arrayLength = {sortedPosts.length}/>\n        //         {listPosts}\n        //     </div>);\n        // }\n        //console.log(listPosts);\n\n        //console.log(\"BEFORE IF\");\n        if (Array.isArray(postSectionInfo)) {\n            console.warn(\"postSectionInfo is an array!:\", postSectionInfo);\n        }\n        return postSectionInfo;\n    }\n}\n\n\nexport class Post extends React.Component{\n    render(){\n    // console.log(\"THIS IS THE DATE\", this.props.startDate);\n    let topOfPost;\n    if(this.props.page === \"home\"){\n        topOfPost = (<div className=\"topOfPost\">\n            <div className=\"comName\">\n                {this.props.community}\n            </div>\n            <span>•</span>\n            <div className=\"user\">\n            {this.props.userName}\n            </div>\n            <span>•</span>\n            <TimeStamp key={this.props.startDate} postedDate={this.props.startDate}/>\n        </div>);\n    }\n    else if(this.props.page === \"community\"){\n        topOfPost = (<div className=\"topOfPost\">\n            <div className=\"user\">\n            {this.props.userName}\n            </div>\n            <span>•</span>\n            <TimeStamp key={this.props.startDate} postedDate={this.props.startDate}/>\n        </div>);\n    }\n    return(\n       <div className=\"post\" onClick={this.handlePostView}>\n        {topOfPost}\n        <div className=\"postTitle\">\n        {this.props.postTitle}\n        </div>\n        {this.props.postlinkFlairID}\n        {this.props.first20}\n        <div className=\"counters\">\n            <div className='counterDivs'>\n                <img\n                    alt=\"viewIcon\"\n                    id=\"viewIcon\"\n                    src={viewIcon}\n                    height=\"20\"\n                    width=\"20\"\n                />\n                <span className=\"counters\">\n                {this.props.viewCount}\n                </span>\n            </div>\n            \n            <div className='counterDivs'>   \n                <img\n                    alt=\"commentIcon\"\n                    src={commentIcon}\n                    height=\"17\"\n                    width=\"17\"\n                />\n                <span className=\"counters\">\n                {this.props.commentCount}\n                </span>\n            </div>\n            \n\n            {/* homepage up/down votes*/}\n            <div className=\"voteDiv\">\n                <button className='HomePageUpVoteButton' disabled={!this.props.loggedIn}>\n                    <img\n                        className='upvoteIcon'\n                        alt=\"voteCountIcon\"\n                        src={upvoteIcon}\n                    />\n                </button>\n                <button className='HomePageDownVoteButton' disabled={!this.props.loggedIn}>\n                    <img\n                    className='downvoteIcon'\n                    alt=\"voteCountIcon\"\n                    src={downVoteIcon}\n                />\n                </button>\n                <span className=\"counters\">\n                {this.props.upVotes}\n                </span>\n            </div>\n            {/* up and down votes*/}\n\n        </div>\n       </div> \n    );\n}\n}\n\nexport function getPost(post, communities, comments, linkFlairs){\n    //console.log(post);\n    // console.log(linkFlairs);\n    //console.log(\"THIS IS THE COMMUNITIES in Get post\", communities)\n    //console.log(\"GETPOST\", post)\n    const postID = post._id;\n    const community = getCommunity(post._id, communities);\n    const userName = post.postedBy;\n    const startDate = post.postedDate;\n    const postTitle = post.title;\n    const postlinkFlairID = getLinkFlair(post.linkFlairID, linkFlairs)\n    const first20 = post.content.substring(0, 80);\n    const viewCount = post.views\n    const commentCount = getCommentNum(post, comments);\n    const upVotes = post.upVotes;\n  \n    return [community, userName, startDate, postTitle, postlinkFlairID, first20, viewCount, commentCount, postID, upVotes];\n}\n\n\nexport class TimeStamp extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        this.state = {date: new Date(), startDate: new Date(props.postedDate)};\n    }\n    \n    updateTime(diff){\n        const seconds = Math.floor(diff/1000);\n        const minutes = Math.floor(diff/(1000 * 60));\n        const hours = Math.floor(diff/(1000 * 60 * 60));\n        const days = Math.floor(diff/(1000 * 60 * 60 * 24));\n        const months = Math.floor(diff/(1000 * 60 * 60 * 24 * 30));\n        const years = Math.floor(diff/(1000 * 60 * 60 * 24 * 30 * 12));\n    \n    \n        if(seconds < 60){\n        //console.log(\"Time Difference: \" + seconds + \" seconds\");\n        return seconds + \" second(s) ago\";\n        }\n        else if(minutes < 60){\n        //console.log(\"Time Difference: \" + minutes + \" minutes\");\n        return minutes + \" minute(s) ago\";\n        }\n        else if(hours < 24){\n        //console.log(\"Time Difference: \" + hours + \" hours\");\n        return hours + \" hour(s) ago\";\n        }\n        else if(days < 30){\n        //console.log(\"Time Difference: \" + days + \" days\");\n        return days + \" day(s) ago\";\n        }\n        else if(months < 12){\n        //console.log(\"Time Difference: \" + months + \" months\");\n        return months + \" month(s) ago\";\n        }\n        else{\n        //console.log(\"Time Difference: \" + years + \" years\");\n        return years + \" year(s) ago\";\n        }\n    }\n    \n    render()\n    {   \n        return (\n          <div className=\"timeStamp\" id={this.props.id}>\n              {this.updateTime(this.state.date - this.state.startDate)}\n          </div>\n        );\n    }\n    \n    componentDidMount()\n    {\n        //this.timerID = setInterval(\n        //  ()=> this.setState({date: new Date()}), 1000\n        //);\n        this.timerID = setInterval(()=> this.tick(), 1000);\n    }\n    \n    componentWillUnmount()\n    {\n        clearInterval(this.timerID);\n    }\n    \n    tick()\n    {\n        this.setState({date: new Date()});\n    }\n}\n\nexport function getCommunity(postID, communities){\n    //console.log(\"POST ID\", postID)\n    //console.log(\"COMMUNITIES\", communities)\n    const community = communities.find(community => {\n        //console.log(\"Checking community:\", community.postIDs);\n        //console.log(\"Checking for:\", postID);\n        return community.postIDs.includes(postID);\n      }) || { name: \"hsjkdhkfj\" };\n    \n    //console.log(\"POST IDS\", postID)\n    //console.log(\"COMMUNITY NAME\", community.name)\n    return community.name\n  }\n  \n  function getCommentNum(post, comments){\n    // console.log(\"POST OR COMMENT: \");\n    // console.log(post);\n    //console.log(\"THESE ARE THE COMMENTS\", comments);\n  \n    if(post === null || post.commentIDs.length === 0 || post.commentIDs === null){\n      // console.log(\"IN NULL RN BRO\");\n      return 0;\n    }\n    let comment;\n    let total = post.commentIDs.length;\n    for(let i = 0; i < total; i++){\n      comment = getComment(post.commentIDs[i], comments);\n      if(comment != null){\n        total += getCommentNum(comment, comments);\n      }\n    }\n    return total;\n  }\n  \n  function getLinkFlair(linkFlairID, linkFlairs){\n    // console.log(\"THIS IS THE LINK FLAIR ID\", linkFlairs)\n    // console.log(\"THIS IS THE linkflair id to look for\", linkFlairID)\n    const linkFlair = linkFlairs.find(flair => flair._id === linkFlairID);\n    if(!linkFlair){\n      return \"not FOUND\";\n    }\n    return linkFlair.content;\n  }\n  \n  export function getComment(commentName, comments){\n    //console.log(\"getComment\", comments);\n    //console.log(\"RETURNING THIS: \", comments.find(comment => String(comment._id) === String(commentName)));\n    return comments.find(comment => String(comment._id) === String(commentName)) || \n    console.log(\"CANT FIND THIS\", commentName);\n  }\n\nfunction postsList(postsToDisplay, order, communities, comments, linkFlairs){\n    //console.log(\"THIS IS THE POST BEFORE GOING TO ORDER\", postsToDisplay);\n    // console.log(\"IN POSTSLIST\", postsToDisplay);\n    //console.log(\"BEFORE communities in postsList\", communities);\n    const sortedList = order(postsToDisplay, comments);\n    //console.log(\"Sorted posts:\", sortedList);\n    //console.log(postsToDisplay);\n    const postsList = sortedList.map(function(post, index){\n        //console.log(\"AFTER communities in postsList\", communities);\n        let postInfo = getPost(post, communities, comments, linkFlairs);\n        //console.log(\"postsLIST\", postInfo)\n        const linkFlair = postInfo[4] !== 'not FOUND' ?\n        (\n        <div>\n            <span className=\"linkFlair\">\n                {postInfo[4]}\n            </span>\n        </div>\n        ) : null;\n        return(\n        <Post\n            postID = {postInfo[8]}\n            community = {postInfo[0]}\n            userName = {postInfo[1]}\n            startDate = {postInfo[2]}\n            postTitle= {postInfo[3]}\n            postlinkFlairID = {linkFlair}\n            first20 = {postInfo[5]}\n            viewCount = {postInfo[6]}\n            commentCount = {postInfo[7]}\n            upVotes = {postInfo[9]}\n        />);\n    })\n\n    return postsList;\n}\n\nexport const orderNewest = (postToDisplay) => {\n    //console.log(\"pressed newest\");\n    //console.log(\"This is conName:\" + comName);\n    //console.log(\"THESE ARE THE POSTS TO DISPLAY IN NEWEST: \",postToDisplay)\n    let comPosts = postToDisplay;\n    // if(page == \"community\"){\n    //   comPosts = filterPosts(\"community\", comName);\n    // }\n  \n    // if(page == \"search\"){\n    //   comPosts = Array.from(filterPosts(\"search\", comName));\n    // }\n    //console.log(\"IN HERE\");\n    comPosts.sort(function(a, b){\n      return(new Date(b.postedDate) - new Date(a.postedDate))\n    })\n    //console.log(comPosts);\n\n    return comPosts;\n  \n    //console.log(\"Newest\");\n    //console.log(comPosts);\n    \n    //postsList(comPosts, page);\n    //console.log(posts);\n  }\n  \n  export const orderOldest = (postToDisplay) => {\n    //console.log(\"BEING ORDERED BY OLDEST\")\n    // console.log(\"pressed oldest\");\n    let comPosts = postToDisplay;\n    // if(page == \"community\"){\n    //   comPosts = filterPosts(\"community\", comName);\n    // }\n  \n    // if(page == \"search\"){\n    //   comPosts = Array.from(filterPosts(\"search\", comName));\n    // }\n\n   // console.log(\"BEFORE\", comPosts);\n  \n    comPosts.sort(function(a, b){\n        // console.log(\"A\", a.postedDate)\n        // console.log(\"B\", b.postedDate)\n      return(new Date(a.postedDate) - new Date(b.postedDate))\n    })\n    //console.log(\"After\", comPosts);\n    return comPosts;\n    \n    //postsList(comPosts, page);\n\n  }\n  \n  export const orderActive = (postToDisplay, comments) => {\n    //console.log(\"pressed active\");\n    let comPosts = postToDisplay;\n    // if(page == \"community\"){\n    //   comPosts = filterPosts(\"community\", comName);\n    // }\n  \n    // if(page == \"search\"){\n    //   comPosts = Array.from(filterPosts(\"search\", comName));\n    // }\n  \n    let activePost = new Map([]);\n    for(const post of comPosts){\n        //let commentNum = getCommentNum(x, comments)\n        //console.log(\"COMMENTS\", comments);\n        let commentArray = getTotalComments(post, comments);\n        //console.log(\"COMMENT ARRAY\", commentArray);\n        commentArray.sort(function(a, b){\n            return(new Date(b.commentedDate) - new Date(a.commentedDate))\n        });\n\n        // If the post has comments, take the most recent comment date\n        // If no comments, use the post creation date\n        let recentDate = commentArray.length > 0 ? new Date(commentArray[0].commentedDate) : new Date(post.postedDate);\n        activePost.set(post, recentDate);\n\n        //activePost.set(post, commentArray[0].commentedDate);\n    }\n    comPosts = Array.from(activePost)\n    //console.log(\"BEFORE\");\n    //console.log(comPosts);\n  \n    comPosts.sort(function(a, b){\n        //console.log(\"THIS IS A\", a[0].postID,  \"THIS IS B\", b[0].postID)\n        if(b[1] === a[1]){\n            //console.log(\"SAME DATES FOR COMMENTS DETECTED\");\n            return (new Date(b[0].postedDate) - new Date(a[0].postedDate))\n        }\n      return(b[1] - a[1]);\n    });\n  \n    //console.log(\"AFTER\");\n    //console.log(comPosts);\n    comPosts = comPosts.map(function(element){\n      return element[0];\n    })\n    \n    return comPosts;\n    //postsList(comPosts, page);\n  }\n\n\n\nexport function getTotalComments(post, comments){\n    let commentArray = [];\n    if(post === null || post.commentIDs.length === 0 || post.commentIDs === null){\n      return commentArray;\n    }\n\n    post.commentIDs.sort(function(a,b){\n      //console.log(\"in the sort\");\n      return(new Date(getComment(b, comments).commentedDate) - new Date(getComment(a,  comments).commentedDate))\n    });\n    // console.log(\"THIS IS SORTED\");\n    //console.log(\"COMMENT IDS\", post.commentIDs);\n  \n    let total = post.commentIDs.length;\n    for(let i = 0; i < total; i++){\n      let comment = getComment(post.commentIDs[i], comments);\n      if(comment != null){\n        // console.log(\"COMMENT GETTING PUSHED INTO ARRAY\");\n        // console.log(comment);\n        commentArray.push(comment);\n  \n        let children = getTotalComments(comment,  comments);\n        // console.log(\"CHILDREN BEING CONCAT\");\n        // console.log(children);\n  \n        \n        commentArray = commentArray.concat(children);\n        // console.log(\"CONCATING\");\n        // console.log(commentArray.concat(children));\n        // console.log(\"ARRAY AFTER\");\n        // console.log(commentArray);\n      }\n    }\n    // console.log(\"ARRAY BEING RETURNED\");\n    // console.log(commentArray);\n    return commentArray;\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}