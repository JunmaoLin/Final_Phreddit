{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/userProf.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { PostSection, InfoSection, orderNewest, TimeStamp, getTotalComments } from './homePage.js';\nimport { Comment } from './postPage.js';\nimport '../stylesheets/userProf.css';\nimport memberCountIcon from '../images/memberCountIcon.svg';\nimport postCountIcon from '../images/postCountIcon.svg';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TheUserPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteComment = async commentId => {\n      console.log(\"COMMENT ID IN DELETE\", commentId);\n      try {\n        const response = await axios.delete(`http://localhost:8000/comments/${commentId}`, {\n          withCredentials: true\n        });\n        this.props.setComments(prevComments => prevComments.filter(comment => comment._id !== commentId));\n        alert('Comment deleted successfully!');\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n        alert('Failed to delete comment. Please try again.');\n      }\n    };\n    this.state = {\n      order: orderNewest\n    };\n    this.handleDeleteComment = this.handleDeleteComment.bind(this);\n  }\n  //get all users for phredditUsers\n  async fetchAllUsers() {\n    try {\n      const response = await axios.get('http://localhost:8000/getAllUsers', {\n        withCredentials: true\n      });\n      console.log(\"ALL USERS\", response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  render() {\n    const {\n      activeButton\n    } = this.props;\n    console.log(this.props);\n    const {\n      setPage,\n      goToEditCommunityPage,\n      goToEditPostPage,\n      goToEditCommentPage,\n      posts,\n      communities,\n      comments,\n      linkFlairs,\n      handleOrderButtonClick,\n      loggedIn,\n      userInfo\n    } = this.props;\n    const allUsers = this.fetchAllUsers();\n    console.log(\"HOME PAGE PROPS\", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homePage\",\n      className: \"main_cont_divs\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"this is the user info tab\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(TheUserPageHeader, {\n        user: this.props.userProf,\n        activeButton: activeButton,\n        handleButtonChange: this.props.handleButtonChange,\n        loggedIn: loggedIn,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), activeButton === 'phredditUsers' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), activeButton === 'posts' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PostSection, {\n          posts: this.props.userPosts.posts,\n          goToPostPage: goToEditPostPage,\n          comments: comments,\n          linkFlairs: linkFlairs,\n          communities: communities,\n          order: this.state.order,\n          page: 'userInfo',\n          loggedIn: loggedIn,\n          userInfo: userInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), activeButton === 'communities' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CommunitySection, {\n          communities: this.props.userComs,\n          goToEditCommunityPage: goToEditCommunityPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), activeButton === 'comments' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          comments: comments,\n          userComments: this.props.userComments,\n          posts: posts,\n          userPosts: this.props.userPosts,\n          goToEditCommentPage: goToEditCommentPage,\n          handleDeleteComment: this.handleDeleteComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n}\nclass TheUserPageHeader extends React.Component {\n  render() {\n    console.log(this.props);\n    const {\n      user\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n        user: user,\n        page: 'userProf'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserButtons, {\n        activeButton: this.props.activeButton,\n        handleButtonChange: this.props.handleButtonChange,\n        loggedIn: this.props.loggedIn,\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass CommentSection extends React.Component {\n  render() {\n    const {\n      posts,\n      communities,\n      order,\n      comments,\n      linkFlairs,\n      setPage,\n      userComments,\n      userPosts,\n      handleDeleteComment\n    } = this.props;\n    console.log(\"COMMENT SECTION hello?\", comments);\n    const sortedComments = commmentsList(comments, userPosts.posts, userComments.comments, posts);\n    const listComs = sortedComments.map((com, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userCommunitiesComment\",\n        id: \"id-\" + com.props._id,\n        onClick: () => {\n          console.log(\"BEFORE ASSIGNMENT\");\n          this.props.goToEditCommentPage(com);\n          //console.log(\"AFTER ASSIGNMENT\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(Comment, {\n          ...com.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deleteCommentButton\",\n          onClick: e => {\n            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n            console.log(com.props);\n            handleDeleteComment(com.props._id);\n          },\n          children: \"Delete Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, com.props._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this);\n    });\n    let commentSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: listComs\n    }, sortedComments.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n    return commentSectionInfo;\n  }\n}\nfunction commmentsList(comments, userPosts, userComments, posts) {\n  //console.log(\"comments B4\", comments, posts)\n  const sortedList = commentNewest(userComments);\n\n  //console.log(\"SORTED LIST\", sortedList)\n\n  const comsList = sortedList.map(function (com, index) {\n    let postWithComment;\n    let commentArray;\n    for (const post of posts) {\n      // Flatten the comments for the current post\n      console.log(\"this is the post info from\", post.title, post.commentIDs, comments);\n      commentArray = getTotalComments(post, comments);\n      //console.log(\"THIS SI THE COMMENT ARRAY FOR THIS POST\", post, commentArray)\n\n      // Check if the current comment exists in the flattened comment array\n      if (commentArray.some(nestedComment => nestedComment._id === com._id)) {\n        postWithComment = post;\n        break; // Exit the loop once the matching post is found\n      }\n    }\n\n    // Get the post title if found, or default to \"Post Not Found\"\n    const postTitle = postWithComment ? postWithComment.title : \"Post Not Found\";\n\n    //console.log(com, postTitle)\n    return /*#__PURE__*/_jsxDEV(Comment, {\n      _id: com._id,\n      page: 'userProf',\n      postTitle: postTitle,\n      comment: com\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this);\n  });\n  return comsList;\n}\nconst commentNewest = comToDisplay => {\n  let com = comToDisplay;\n  com.sort(function (a, b) {\n    return new Date(b.commentedDate) - new Date(a.commentedDate);\n  });\n  return com;\n};\nclass CommunitySection extends React.Component {\n  render() {\n    const {\n      posts,\n      communities,\n      order,\n      comments,\n      linkFlairs,\n      setPage\n    } = this.props;\n    //console.log(\"COM SECTION hello?\", communities)\n    const sortedCommunity = comsList(communities.communities);\n    const listComs = sortedCommunity.map((com, index) => {\n      //console.log(com)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"id-\" + com.props._id,\n        onClick: () => {\n          //console.log(\"BEFORE ASSIGNMENT\")\n          this.props.goToEditCommunityPage(com);\n          //console.log(\"AFTER ASSIGNMENT\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(Community, {\n          ...com.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deleteCommunityButton\",\n          onClick: e => {\n            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n            this.handleDeleteCommunity(com.props.postID);\n          },\n          children: \"Delete Community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, com.props._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this);\n    });\n    let comSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: listComs\n    }, sortedCommunity.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this);\n    //console.log(postSectionInfo);\n\n    return comSectionInfo;\n  }\n}\nfunction comsList(communities) {\n  //console.log(\"COMMUNITIES B4\", communities)\n  const sortedList = comNewest(communities);\n\n  //console.log(\"SORTED LIST\", sortedList)\n\n  const comsList = sortedList.map(function (com, index) {\n    return /*#__PURE__*/_jsxDEV(Community, {\n      name: com.name,\n      description: com.description,\n      startDate: com.startDate,\n      createdBy: com.createdBy,\n      memberCount: com.memberCount,\n      postIDs: com.postIDs,\n      _id: com._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 16\n    }, this);\n  });\n  return comsList;\n}\nclass Community extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userCommunities\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"userCommunitiesName\",\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 28\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created: \", /*#__PURE__*/_jsxDEV(TimeStamp, {\n          postedDate: this.props.startDate\n        }, this.props.startDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created By: \", this.props.createdBy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"postCountIcon\",\n        alt: \"postCountIcon\",\n        src: postCountIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 18\n      }, this), \" \", this.props.postIDs.length, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"memberCountIcon\",\n        alt: \"memberCountIcon\",\n        src: memberCountIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 114\n      }, this), \" \", this.props.memberCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst comNewest = comToDisplay => {\n  let com = comToDisplay;\n  com.sort(function (a, b) {\n    return new Date(b.startDate) - new Date(a.startDate);\n  });\n  return com;\n};\nclass UserButtons extends React.Component {\n  render() {\n    const {\n      activeButton,\n      handleButtonChange,\n      loggedIn,\n      userInfo\n    } = this.props;\n    console.log(\"am i adminnnnnnn\", userInfo[3]); //userInfo[3] is admin value\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttonSection\",\n      children: [userInfo[3] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'phredditUsers' ? 'active' : '',\n          onClick: () => handleButtonChange('phredditUsers'),\n          children: \"Phreddit Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'posts' ? 'active' : '',\n          onClick: () => handleButtonChange('posts'),\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'communities' ? 'active' : '',\n          onClick: () => handleButtonChange('communities'),\n          children: \"Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'comments' ? 'active' : '',\n          onClick: () => handleButtonChange('comments'),\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","axios","PostSection","InfoSection","orderNewest","TimeStamp","getTotalComments","Comment","memberCountIcon","postCountIcon","Fragment","_Fragment","jsxDEV","_jsxDEV","TheUserPage","Component","constructor","props","handleDeleteComment","commentId","console","log","response","delete","withCredentials","setComments","prevComments","filter","comment","_id","alert","error","state","order","bind","fetchAllUsers","get","data","render","activeButton","setPage","goToEditCommunityPage","goToEditPostPage","goToEditCommentPage","posts","communities","comments","linkFlairs","handleOrderButtonClick","loggedIn","userInfo","allUsers","id","className","children","TheUserPageHeader","user","userProf","handleButtonChange","fileName","_jsxFileName","lineNumber","columnNumber","userPosts","goToPostPage","page","CommunitySection","userComs","CommentSection","userComments","UserButtons","sortedComments","commmentsList","listComs","map","com","index","onClick","e","stopPropagation","commentSectionInfo","length","sortedList","commentNewest","comsList","postWithComment","commentArray","post","title","commentIDs","some","nestedComment","postTitle","comToDisplay","sort","a","b","Date","commentedDate","sortedCommunity","Community","handleDeleteCommunity","postID","comSectionInfo","comNewest","name","description","startDate","createdBy","memberCount","postIDs","postedDate","alt","src"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/userProf.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {PostSection, InfoSection, orderNewest, TimeStamp, getTotalComments} from './homePage.js';\nimport { Comment }  from './postPage.js';\nimport '../stylesheets/userProf.css';\nimport memberCountIcon from '../images/memberCountIcon.svg'\nimport postCountIcon from '../images/postCountIcon.svg'\n\nexport default class TheUserPage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          order: orderNewest,\n        };\n        \n        this.handleDeleteComment = this.handleDeleteComment.bind(this)\n    }\n\n    handleDeleteComment = async (commentId) => {\n        console.log(\"COMMENT ID IN DELETE\", commentId)\n        try {\n            const response = await axios.delete(`http://localhost:8000/comments/${commentId}`, { withCredentials: true });\n    \n            this.props.setComments((prevComments) =>\n                prevComments.filter((comment) => comment._id !== commentId)\n            );\n            alert('Comment deleted successfully!');\n        } catch (error) {\n            console.error('Error deleting comment:', error);\n            alert('Failed to delete comment. Please try again.');\n        }\n    };\n\n    //get all users for phredditUsers\n    async fetchAllUsers() {\n        try {\n            const response = await axios.get('http://localhost:8000/getAllUsers', { withCredentials: true });\n            console.log(\"ALL USERS\", response.data);\n            \n            return response.data;\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n    render(){\n        const {activeButton } = this.props;\n        console.log(this.props)\n        const {setPage, goToEditCommunityPage, goToEditPostPage, goToEditCommentPage, posts, communities, comments, linkFlairs, handleOrderButtonClick, loggedIn, userInfo} = this.props\n        const allUsers = this.fetchAllUsers();\n        console.log(\"HOME PAGE PROPS\", this.props);\n        return (\n        <div id=\"homePage\" className=\"main_cont_divs\">\n            <>this is the user info tab</>\n            <TheUserPageHeader \n                user={this.props.userProf}\n                activeButton={activeButton}\n                handleButtonChange={this.props.handleButtonChange}\n                loggedIn={loggedIn}\n                userInfo={userInfo}\n            >\n\n            </TheUserPageHeader>\n            {\n                activeButton === 'phredditUsers' && (\n                    <div>\n                        <h3>User Accounts</h3>\n\n                    </div>\n                )\n            }\n            {activeButton === 'posts' && (\n                <>\n                <h3>Your Posts</h3>\n                <PostSection\n                    posts={this.props.userPosts.posts}\n                    goToPostPage={goToEditPostPage}\n                    comments={comments} \n                    linkFlairs={linkFlairs} \n                    communities={communities}\n                    order={this.state.order} \n                    page={'userInfo'}\n                    loggedIn={loggedIn}\n                    userInfo={userInfo}\n                /> \n                </>\n            )}\n            {activeButton === 'communities' && (\n                <>\n                <h3>Your Communities</h3>\n                <CommunitySection\n                communities={this.props.userComs}\n                goToEditCommunityPage={goToEditCommunityPage}\n                />\n                </>\n            )}\n\n            {activeButton === 'comments' && (\n                <>\n                <h3>Your Comments</h3>\n                <CommentSection\n                comments={comments}\n                userComments={this.props.userComments}\n                posts={posts}\n                userPosts={this.props.userPosts}\n                goToEditCommentPage={goToEditCommentPage}\n                handleDeleteComment={this.handleDeleteComment}\n                />\n                </>\n            )}\n        </div>\n        )\n        \n    }\n    \n}\n\nclass TheUserPageHeader extends React.Component{\n\n    render(){\n        console.log(this.props)\n        const { user } = this.props\n        return(\n            <div id=\"header\">\n                <InfoSection\n                    user={user}\n                    page={'userProf'}\n                />\n                <UserButtons \n                    activeButton={this.props.activeButton} \n                    handleButtonChange={this.props.handleButtonChange} \n                    loggedIn={this.props.loggedIn}\n                    userInfo={this.props.userInfo}\n                />\n                {/* user button display here */}\n            </div>\n        );\n    }\n}\n\nclass CommentSection extends React.Component{\n    render(){\n        const {posts, communities, order, comments, linkFlairs, setPage, userComments, userPosts, handleDeleteComment} = this.props;\n        console.log(\"COMMENT SECTION hello?\", comments)\n        const sortedComments = commmentsList(comments, userPosts.posts, userComments.comments, posts)\n\n        const listComs = sortedComments.map((com, index) =>{\n            return (\n                <div className=\"userCommunitiesComment\" key={com.props._id} id={\"id-\" + com.props._id} onClick={\n                    () => {\n                        console.log(\"BEFORE ASSIGNMENT\")\n                        this.props.goToEditCommentPage(com)\n                        //console.log(\"AFTER ASSIGNMENT\")\n                        }}>\n                    <Comment \n                        {...com.props}\n                    />\n                    <br></br>\n                    <button className='deleteCommentButton'\n                        onClick={(e) => {\n                            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n                            console.log(com.props)\n                            handleDeleteComment(com.props._id);\n                        }}\n                    >\n                    Delete Comment\n                </button>\n                </div>\n            );\n        })\n\n        let commentSectionInfo = \n            (\n            <div key={sortedComments.length} className=\"posts\">\n                {listComs}\n            </div>);\n\n\n        return commentSectionInfo;\n    }\n}\n\nfunction commmentsList(comments, userPosts, userComments, posts){\n    //console.log(\"comments B4\", comments, posts)\n    const sortedList = commentNewest(userComments);\n\n    //console.log(\"SORTED LIST\", sortedList)\n\n    const comsList = sortedList.map(function(com, index){\n        let postWithComment;\n        let commentArray;\n    \n        for (const post of posts) {\n            // Flatten the comments for the current post\n            console.log(\"this is the post info from\",post.title, post.commentIDs, comments)\n            commentArray = getTotalComments(post, comments);\n            //console.log(\"THIS SI THE COMMENT ARRAY FOR THIS POST\", post, commentArray)\n    \n            // Check if the current comment exists in the flattened comment array\n            if (commentArray.some(nestedComment => nestedComment._id === com._id)) {\n                postWithComment = post;\n                break; // Exit the loop once the matching post is found\n            }\n        }\n    \n        // Get the post title if found, or default to \"Post Not Found\"\n        const postTitle = postWithComment ? postWithComment.title : \"Post Not Found\";\n\n        //console.log(com, postTitle)\n        return(\n            <Comment\n                _id={com._id}\n                page={'userProf'} \n                postTitle={postTitle} \n                comment={com} \n            />\n        );\n    })\n\n    return comsList;\n}\n\nconst commentNewest = (comToDisplay) => {\n\n    let com = comToDisplay;\n\n    com.sort(function(a, b){\n      return(new Date(b.commentedDate) - new Date(a.commentedDate))\n    })\n\n\n    return com;\n\n}\n\n\nclass CommunitySection extends React.Component{\n    render(){\n        const {posts, communities, order, comments, linkFlairs, setPage} = this.props;\n        //console.log(\"COM SECTION hello?\", communities)\n        const sortedCommunity = comsList(communities.communities)\n\n        const listComs = sortedCommunity.map((com, index) =>{\n            //console.log(com)\n            return (\n                <div key={com.props._id} id={\"id-\" + com.props._id} onClick={\n                    () => {\n                        //console.log(\"BEFORE ASSIGNMENT\")\n                        this.props.goToEditCommunityPage(com)\n                        //console.log(\"AFTER ASSIGNMENT\")\n                        }}>\n                    <Community \n                        {...com.props}\n                    />\n                    <button className='deleteCommunityButton'\n                        onClick={(e) => {\n                            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n                            this.handleDeleteCommunity(com.props.postID);\n                        }}\n                    >\n                    Delete Community\n                    </button>\n                </div>\n            );\n        })\n\n        let comSectionInfo = \n            (\n            <div key={sortedCommunity.length} className=\"posts\">\n                {listComs}\n            </div>);\n            //console.log(postSectionInfo);\n\n        return comSectionInfo;\n    }\n}\n\nfunction comsList(communities){\n    //console.log(\"COMMUNITIES B4\", communities)\n    const sortedList = comNewest(communities);\n\n    //console.log(\"SORTED LIST\", sortedList)\n\n    const comsList = sortedList.map(function(com, index){\n        return(<Community\n            name={com.name}\n            description={com.description}\n            startDate={com.startDate}\n            createdBy={com.createdBy}\n            memberCount={com.memberCount}\n            postIDs={com.postIDs}\n            _id={com._id}\n        />);\n    })\n\n    return comsList;\n}\n\nclass Community extends React.Component{\n    render(){\n        return (\n            <div className=\"userCommunities\">\n                {/*title*/}<p className='userCommunitiesName'>{this.props.name}</p> \n                {/* Description:  */} <p>{this.props.description}</p>\n                <p>Created: <TimeStamp key={this.props.startDate} postedDate={this.props.startDate}/></p>\n                <p>Created By: {this.props.createdBy}</p>\n                {/* <p>Post Count: {this.props.postIDs.length}</p> */}\n\n                {<img id=\"postCountIcon\" alt=\"postCountIcon\" src={postCountIcon}/>} {this.props.postIDs.length} {<img id=\"memberCountIcon\" alt=\"memberCountIcon\" src={memberCountIcon}/>} {this.props.memberCount}\n                \n            </div>\n        )\n    }\n}\n\nconst comNewest = (comToDisplay) => {\n\n    let com = comToDisplay;\n\n    com.sort(function(a, b){\n      return(new Date(b.startDate) - new Date(a.startDate))\n    })\n\n\n    return com;\n\n}\n\n\nclass UserButtons extends React.Component {\n    render() {\n        const { activeButton, handleButtonChange, loggedIn, userInfo } = this.props;\n        console.log(\"am i adminnnnnnn\", userInfo[3]); //userInfo[3] is admin value\n        return (\n            <div id=\"buttonSection\">\n                {/* display div not admin */}\n                {userInfo[3] &&\n                    <div className='userButtons' >\n                    <button\n                        className={activeButton === 'phredditUsers' ? 'active' : ''} \n                        onClick={() => handleButtonChange('phredditUsers')}\n                    >\n                    Phreddit Users\n                    </button>\n                    </div>\n                }\n                <div className='userButtons'>\n                    <button \n                        className={activeButton === 'posts' ? 'active' : ''} \n                        onClick={() => handleButtonChange('posts')}\n                    >\n                    Post\n                    </button>\n                </div>\n                <div className='userButtons'>\n                    <button \n                        className={activeButton === 'communities' ? 'active' : ''} \n                        onClick={() => handleButtonChange('communities')}\n                    >\n                    Communities\n                    </button>\n                </div>\n                <div className='userButtons'>\n                    <button \n                        className={activeButton === 'comments' ? 'active' : ''} \n                        onClick={() => handleButtonChange('comments')}\n                    >\n                    Comments\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}