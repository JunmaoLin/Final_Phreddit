{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/communityPage.js\";\nimport React from 'react';\nimport { PostSection, InfoSection, getTotalComments, getCommunity, ButtonDisplay, orderNewest } from './homePage.js';\nimport '../stylesheets/communityPage.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TheCommunityPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      order: orderNewest\n    };\n    this.updateOrder = this.updateOrder.bind(this);\n  }\n  updateOrder(newOrder) {\n    //console.log(\"UPDATING ORDER\");\n    this.setState({\n      order: newOrder\n    });\n  }\n  render() {\n    const {\n      community,\n      communities,\n      posts,\n      comments,\n      linkFlairs,\n      goToPostPage,\n      handleOrderButtonClick\n    } = this.props;\n    //console.log(\"COMMUNITY PROPS\", this.props);\n    //console.log(comName);\n    const filtered = filterPosts('community', community, posts, communities, comments);\n    //console.log(\"FILTERED POSTS\", filtered)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homePage\",\n      className: \"main_cont_divs\",\n      children: [/*#__PURE__*/_jsxDEV(CommunityPageHeader, {\n        comName: community,\n        communities: communities,\n        handleOrderButtonClick: handleOrderButtonClick,\n        updateOrder: this.updateOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PostSection, {\n        page: 'community',\n        posts: filtered,\n        comments: comments,\n        linkFlairs: linkFlairs,\n        communities: communities,\n        order: this.state.order,\n        goToPostPage: goToPostPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n}\nclass CommunityPageHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memberCount: null\n    };\n  }\n  async fetchMemberCount(community) {\n    try {\n      const response = await axios.get(`http://localhost:8000/communityInformation/${community._id}`);\n      this.setState({\n        memberCount: response.data\n      }); // Assuming response.data is the member count\n    } catch (error) {\n      console.log(\"No community found\");\n    }\n  }\n  componentDidMount() {\n    const {\n      communities,\n      comName\n    } = this.props;\n    const community = communities.find(community => community.name === comName);\n    if (community) {\n      this.fetchMemberCount(community);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      communities,\n      comName\n    } = this.props;\n    if (comName !== prevProps.comName) {\n      const community = communities.find(community => community.name === comName);\n      if (community) {\n        this.fetchMemberCount(community);\n      }\n    }\n  }\n  render() {\n    const {\n      communities,\n      comName,\n      updateOrder,\n      handleOrderButtonClick\n    } = this.props;\n    const community = communities.find(community => community.name === comName);\n    if (!community) return null;\n    const {\n      memberCount\n    } = this.state;\n    const startDate = community.startDate;\n    const comPostCount = community.postIDs.length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n        page: 'community',\n        startDate: startDate,\n        comName: comName,\n        memberCount: memberCount // Using memberCount from state\n        ,\n        description: community.description,\n        comPostCount: comPostCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonDisplay, {\n        handleOrderButtonClick: handleOrderButtonClick,\n        updateOrder: updateOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport function filterPosts(page, comName, posts, communities, comments) {\n  //console.log(\"CHECKING THE POSTS\", posts);\n  let filter = [...posts];\n  //console.log(filter);\n  if (page === \"community\") {\n    filter = filter.filter(function (element) {\n      // console.log(\"ELEMENT\", element);\n      // console.log(getCommunity(element._id, communities));\n      return getCommunity(element._id, communities) === comName;\n    });\n  }\n  if (page === \"search\") {\n    filter = new Set();\n    for (let i = 0; i < comName.length; i++) {\n      for (let j = 0; j < posts.length; j++) {\n        let commentArray = getTotalComments(posts[j], comments);\n        for (const x of commentArray) {\n          if (x.content.toLowerCase().includes(comName[i])) {\n            filter.add(posts[j]);\n          }\n        }\n        if (posts[j].title.toLowerCase().includes(comName[i])) {\n          filter.add(posts[j]);\n        } else if (posts[j].content.toLowerCase().includes(comName[i])) {\n          filter.add(posts[j]);\n        }\n      }\n    }\n  }\n  //console.log(filter);\n  return filter;\n}","map":{"version":3,"names":["React","PostSection","InfoSection","getTotalComments","getCommunity","ButtonDisplay","orderNewest","axios","jsxDEV","_jsxDEV","TheCommunityPage","Component","constructor","props","state","order","updateOrder","bind","newOrder","setState","render","community","communities","posts","comments","linkFlairs","goToPostPage","handleOrderButtonClick","filtered","filterPosts","id","className","children","CommunityPageHeader","comName","fileName","_jsxFileName","lineNumber","columnNumber","page","memberCount","fetchMemberCount","response","get","_id","data","error","console","log","componentDidMount","find","name","componentDidUpdate","prevProps","startDate","comPostCount","postIDs","length","description","filter","element","Set","i","j","commentArray","x","content","toLowerCase","includes","add","title"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/communityPage.js"],"sourcesContent":["import React from 'react';\nimport {PostSection, InfoSection, getTotalComments, getCommunity, ButtonDisplay, orderNewest} from './homePage.js';\nimport '../stylesheets/communityPage.css'\nimport axios from 'axios';\n\n\nexport default class TheCommunityPage extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {order: orderNewest};\n\n      this.updateOrder = this.updateOrder.bind(this);\n    }\n\n    updateOrder(newOrder){\n      //console.log(\"UPDATING ORDER\");\n      this.setState({order: newOrder})\n    }\n\n    render(){\n      const {community, communities, posts, comments, linkFlairs, goToPostPage, handleOrderButtonClick} = this.props;\n      //console.log(\"COMMUNITY PROPS\", this.props);\n      //console.log(comName);\n      const filtered = filterPosts('community', community, posts, communities, comments);\n      //console.log(\"FILTERED POSTS\", filtered)\n      return(\n        <div id=\"homePage\" className=\"main_cont_divs\">\n          <CommunityPageHeader \n            comName={community} \n            communities={communities} \n            handleOrderButtonClick={handleOrderButtonClick} \n            updateOrder={this.updateOrder}\n          />\n          <PostSection \n            page={'community'} \n            posts={filtered} \n            comments={comments} \n            linkFlairs={linkFlairs} \n            communities={communities} \n            order={this.state.order} \n            goToPostPage={goToPostPage}\n          />\n        </div>\n      );\n    }\n}\n\nclass CommunityPageHeader extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        memberCount: null,\n      };\n  }\n\n  async fetchMemberCount(community) {\n    try {\n      const response = await axios.get(`http://localhost:8000/communityInformation/${community._id}`);\n      this.setState({ memberCount: response.data }); // Assuming response.data is the member count\n    } catch (error) {\n      console.log(\"No community found\");\n    }\n  }\n\n  componentDidMount() {\n    const { communities, comName } = this.props;\n    const community = communities.find((community) => community.name === comName);\n\n    if (community) {\n      this.fetchMemberCount(community);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { communities, comName } = this.props;\n    if (comName !== prevProps.comName) {\n      const community = communities.find((community) => community.name === comName);\n      if (community) {\n        this.fetchMemberCount(community);\n      }\n    }\n  }\n\n  render() {\n    const { communities, comName, updateOrder, handleOrderButtonClick  } = this.props;\n    const community = communities.find((community) => community.name === comName);\n\n    if (!community) return null;\n\n    const { memberCount } = this.state;\n    const startDate = community.startDate;\n    const comPostCount = community.postIDs.length;\n\n    return (\n      <div id=\"header\">\n        <InfoSection \n          page={'community'}\n          startDate={startDate}\n          comName={comName}\n          memberCount={memberCount} // Using memberCount from state\n          description={community.description}\n          comPostCount={comPostCount}\n          \n        />\n        <ButtonDisplay handleOrderButtonClick={handleOrderButtonClick} updateOrder={updateOrder} />\n      </div>\n    );\n  }\n}\n\n\nexport function filterPosts(page, comName, posts, communities, comments){\n  //console.log(\"CHECKING THE POSTS\", posts);\n  let filter = [...posts];\n  //console.log(filter);\n  if(page === \"community\"){\n    filter = filter.filter(function(element){\n      // console.log(\"ELEMENT\", element);\n      // console.log(getCommunity(element._id, communities));\n      return getCommunity(element._id, communities) === comName;\n    });\n  }\n\n  if(page === \"search\"){\n    filter = new Set();\n    \n    for(let i = 0; i < comName.length; i++){\n      for(let j = 0; j < posts.length; j++){ \n        let commentArray = getTotalComments(posts[j], comments);\n        for(const x of commentArray){\n          if(x.content.toLowerCase().includes(comName[i])){\n            filter.add(posts[j]);\n          }\n        }\n        \n        if(posts[j].title.toLowerCase().includes(comName[i])){\n          filter.add(posts[j]);\n        }\n        else if(posts[j].content.toLowerCase().includes(comName[i])){\n          filter.add(posts[j]);\n        }\n      }\n    }\n  }\n  //console.log(filter);\n  return filter;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}