{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/phreddit.js\";\nimport '../stylesheets/phreddit.css';\nimport axios from 'axios';\nimport React, { createRef } from 'react';\n//import  Model  from '../models/model.js';\n\nimport TheBanner from './banner.js';\nimport TheCommunityPage from './communityPage.js';\nimport TheHomePage from './homePage.js';\nimport ThePostPage from './postPage.js';\nimport TheSearchResultsPage from './searchResultsPage.js';\nimport TheWelcomePage from './welcome.js';\nimport TheRegisterPage from './register.js';\nimport TheLoginPage from './login.js';\nimport TheUserPage from './userProf.js';\nimport NavBar from './navBar.js';\nimport NewCommunityPageView from './newCommunityPageView.js';\nimport NewPostPageView from './newPostPageView.js';\nimport NewCommentPageView from './newCommentPageView.js';\n\n//const model = new Model();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Phreddit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 'welcome',\n      selectedPost: null,\n      selectedCommunity: null,\n      txtInput: null,\n      communities: [],\n      linkFlairs: [],\n      posts: [],\n      comments: [],\n      commentOrReply: null,\n      commentOrReplyParentID: null,\n      isLoading: false,\n      user: 'Guest',\n      loggedIn: false,\n      message: 'Guest',\n      userInfo: [],\n      userProf: {},\n      userComs: [],\n      userPosts: [],\n      userComments: [],\n      userProfActive: 'posts',\n      postUser: null,\n      comUser: null,\n      commentUser: null,\n      allPhredditUsers: [],\n      isUserSelected: false\n    };\n    this.goToPostPage = this.goToPostPage.bind(this);\n    this.goToHomePage = this.goToHomePage.bind(this);\n    this.goToCommunityPage = this.goToCommunityPage.bind(this);\n    this.goToSearchResultsPage = this.goToSearchResultsPage.bind(this);\n    this.goToNewPostPageView = this.goToNewPostPageView.bind(this);\n    this.goToEditPostPage = this.goToEditPostPage.bind(this);\n    this.goToEditCommunityPage = this.goToEditCommunityPage.bind(this);\n    this.goToEditCommentPage = this.goToEditCommentPage.bind(this);\n    this.setPage = this.setPage.bind(this);\n    this.setCommunities = this.setCommunities.bind(this);\n    this.setLinkFlairs = this.setLinkFlairs.bind(this);\n    this.setPosts = this.setPosts.bind(this);\n    this.setComments = this.setComments.bind(this);\n    this.setCommentOrReply = this.setCommentOrReply.bind(this);\n    this.setCommentOrReplyParentID = this.setCommentOrReplyParentID.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.handleOrderButtonClick = this.handleOrderButtonClick.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.fetchUserData = this.fetchUserData.bind(this);\n    this.handleButtonChange = this.handleButtonChange.bind(this);\n    this.theHomePageRef = /*#__PURE__*/createRef();\n  }\n  async componentDidMount() {\n    console.log(\"MOUNTED\");\n    await this.fetchData();\n  }\n  async handleLogout() {\n    try {\n      await axios.post('http://localhost:8000/logout', {}, {\n        withCredentials: true\n      });\n      this.setState({\n        loggedIn: false,\n        user: 'Guest',\n        message: \"Guest\",\n        page: \"welcome\"\n      });\n      alert('You have been logged out.');\n    } catch (error) {\n      console.error('Error logging out:', error);\n      alert('Failed to log out. Please try again.');\n    }\n  }\n\n  //get all users for phredditUsers\n  async fetchAllUsers(isAdmin) {\n    try {\n      if (isAdmin) {\n        const response = await axios.get('http://localhost:8000/getAllUsers', {\n          withCredentials: true\n        });\n        console.log(\"ALL USERS\", response.data);\n        console.log(\"ALL USERSsssssssssss\", response.data[0]);\n        this.setState({\n          allPhredditUsers: response.data\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  async fetchUserData(user) {\n    console.log(\"FETCHING USER DATA\");\n    console.log(\"Is there a user????????\", user);\n    if (user) {\n      console.log(\"Is there a user????????\", user.email);\n    }\n    try {\n      await this.fetchData();\n      let userRes;\n      let communitiesRes;\n      let postsRes;\n      let commentsRes;\n      if (user) {\n        console.log(\"AFTER FETCHING PURE DATA\");\n        userRes = await axios.get(`http://localhost:8000/userInfo`, {\n          withCredentials: true,\n          params: {\n            userEmail: user.email\n          }\n        });\n        console.log(userRes.data);\n        communitiesRes = await axios.get(`http://localhost:8000/userCommunities`, {\n          withCredentials: true,\n          params: {\n            userEmail: user.email\n          }\n        });\n        console.log(communitiesRes.data);\n        postsRes = await axios.get(`http://localhost:8000/userPosts`, {\n          withCredentials: true,\n          params: {\n            userEmail: user.email\n          }\n        });\n        console.log(postsRes.data);\n        commentsRes = await axios.get(`http://localhost:8000/userComments`, {\n          withCredentials: true,\n          params: {\n            userEmail: user.email\n          }\n        });\n        console.log(commentsRes.data);\n      } else {\n        console.log(\"AFTER FETCHING PURE DATA\");\n        userRes = await axios.get(`http://localhost:8000/userInfo`, {\n          withCredentials: true\n        });\n        console.log(userRes.data);\n        communitiesRes = await axios.get(`http://localhost:8000/userCommunities`, {\n          withCredentials: true\n        });\n        console.log(communitiesRes.data);\n        postsRes = await axios.get(`http://localhost:8000/userPosts`, {\n          withCredentials: true\n        });\n        console.log(postsRes.data);\n        commentsRes = await axios.get(`http://localhost:8000/userComments`, {\n          withCredentials: true\n        });\n        console.log(commentsRes.data);\n      }\n      let pageProf = user ? \"posts\" : \"phredditUsers\";\n      console.log(\"active prof page\", pageProf);\n      let isUserSelected;\n      this.setState({\n        userProf: userRes.data.user,\n        userComs: communitiesRes.data,\n        userPosts: postsRes.data,\n        userComments: commentsRes.data,\n        userProfActive: pageProf\n        // isLoading: false,\n      });\n      console.log(\"USER INFO000000000000\", this.state.userInfo[3]);\n      this.fetchAllUsers(this.state.userInfo[3]);\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      //   this.setState({ isLoading: false });\n    }\n  }\n  async fetchData() {\n    console.log(\"FETCHING PURE DATA\");\n    if (this.state.isLoading) return;\n    this.setState({\n      isLoading: true\n    });\n    //console.log(\"FETCHING DATA AGAIN\");\n    try {\n      const sessionResponse = await axios.get(\"http://localhost:8000/\", {\n        withCredentials: true\n      });\n      //console.log(sessionResponse.data)\n      this.setState({\n        loggedIn: !!sessionResponse.data.loggedIn,\n        user: sessionResponse.data.user || \"Guest\",\n        message: sessionResponse.data.message,\n        userInfo: sessionResponse.data.userInfo\n      });\n      const communitiesRes = await axios.get(\"http://localhost:8000/communities\");\n      //console.log(\"Communities fetched:\", communitiesRes.data);\n      const postsRes = await axios.get(\"http://localhost:8000/posts\");\n      //console.log(\"Posts fetched:\", postsRes.data);\n      const commentsRes = await axios.get(\"http://localhost:8000/comments\");\n      //console.log(\"Comments fetched:\", commentsRes.data);\n      const linkFlairsRes = await axios.get(\"http://localhost:8000/linkflairs\");\n      //console.log(\"Link flairs fetched:\", linkFlairsRes.data);\n\n      this.setState({\n        communities: communitiesRes.data,\n        posts: postsRes.data,\n        comments: commentsRes.data,\n        linkFlairs: linkFlairsRes.data\n      });\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    } finally {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n  async handleOrderButtonClick() {\n    //console.log(\"Order button clicked, fetching new data...\");\n    await this.fetchData();\n  }\n  async handleButtonChange(opt) {\n    console.log(\"SETTING ACTIVE BUTTON\", opt);\n    await this.fetchUserData();\n    this.setState({\n      userProfActive: opt\n    });\n  }\n  async goToPostPage(postTitle) {\n    //console.log(\"GO TO POST THE POST TITLE\", postTitle);\n    await this.fetchData();\n    const post = this.state.posts.find(post => post.title === postTitle);\n    if (post) {\n      try {\n        const postRes = await axios.get(`http://localhost:8000/posts/${post._id}`);\n        this.setState({\n          page: 'post',\n          selectedPost: postRes.data,\n          selectedCommunity: null,\n          txtInput: null\n        });\n      } catch (error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n  async goToHomePage() {\n    await this.fetchData();\n    if (this.theHomePageRef.current) {\n      this.theHomePageRef.current.resetOrder();\n    }\n    this.setState({\n      page: 'home',\n      selectedPost: null,\n      selectedCommunity: null,\n      txtInput: null\n    });\n  }\n  async goToCommunityPage(comName) {\n    await this.fetchData();\n    this.setState({\n      page: 'community',\n      selectedPost: null,\n      selectedCommunity: comName,\n      txtInput: null\n    });\n  }\n  async goToSearchResultsPage(txtInput) {\n    await this.fetchData();\n    this.setState({\n      page: 'search',\n      selectedPost: null,\n      selectedCommunity: null,\n      txtInput: txtInput\n    });\n  }\n  async goToNewPostPageView() {\n    // used for creating new posts\n    await this.fetchData();\n    await this.fetchUserData();\n    this.setState({\n      page: 'NewPostPageView'\n    });\n  }\n  async goToEditPostPage(postTitle) {\n    await this.fetchData();\n    const post = this.state.posts.find(post => post.title === postTitle);\n    if (post) {\n      try {\n        const postRes = await axios.get(`http://localhost:8000/getPost/${post._id}`);\n        this.setState({\n          page: 'NewPostPageView',\n          postUser: postRes.data\n        });\n      } catch (error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n  async goToEditCommunityPage(community) {\n    await this.fetchData();\n    console.log(\"EDITING COM uh hello?\", community);\n    if (community) {\n      try {\n        const comRes = await axios.get(`http://localhost:8000/communityInformation/${community.props._id}`);\n        console.log(\"COM DATA:\", comRes.data);\n        this.setState({\n          page: 'NewCommunityPageView',\n          comUser: comRes.data.community\n        });\n      } catch (error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n  async goToEditCommentPage(comment) {\n    await this.fetchData();\n    console.log(\"EDITING COMMENT\", comment);\n    if (comment) {\n      try {\n        const commentRes = await axios.get(`http://localhost:8000/commentInformation/${comment.props._id}`);\n        console.log(\"COMMENT DATA:\", commentRes.data);\n        this.setState({\n          page: 'NewCommentPageView',\n          comUser: commentRes.data.comment\n        });\n      } catch (error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n\n  //change this to make it work for everything\n  async setPage(toGoPage, comName, user) {\n    //console.log(\"ABOUT TO SWITCH PAGES\", toGoPage);\n    await this.fetchData();\n    if (toGoPage === 'userProf' || toGoPage === 'NewPostPageView' || toGoPage === 'NewCommunityPageView' || toGoPage === 'NewCommentPageView') {\n      if (user) {\n        await this.fetchUserData(user);\n      } else {\n        await this.fetchUserData();\n      }\n    }\n    //console.log(\"Data fetched:\", this.state.communities, this.state.posts);\n    console.log(\"SETTING PAGE TO:\", toGoPage);\n    console.log(\"am i an adminn??????\", this.state.userInfo, this.state.loggedIn);\n    // let flag;\n    // if(this.state.userInfo[3]){\n    //   flag\n    // }\n    this.setState({\n      postUser: null,\n      comUser: null,\n      commentUser: null,\n      page: toGoPage,\n      selectedCommunity: comName,\n      userProfActive: toGoPage === \"userProf\" ? this.state.userInfo[3] ? \"phredditUsers\" : \"posts\" : this.state.activeButton\n    });\n  }\n  setCommunities(updater) {\n    // console.log(\"setting communities\", newCommunities)\n    // this.setState({communities: newCommunities});\n\n    this.setState(prevState => {\n      // Check if updater is a function\n      const newCommunities = typeof updater === 'function' ? updater(prevState.communities) : updater;\n      console.log(\"Setting communities:\", newCommunities);\n      return {\n        communities: newCommunities\n      };\n    });\n  }\n  setLinkFlairs(newLinkFlairs) {\n    this.setState({\n      linkFlairs: newLinkFlairs\n    });\n  }\n  setPosts(updater) {\n    this.setState(prevState => {\n      // Check if updater is a function\n      const newPosts = typeof updater === 'function' ? updater(prevState.posts) : updater;\n      console.log(\"Setting Posts:\", newPosts);\n      return {\n        posts: newPosts\n      };\n    });\n    // console.log(\"SETTING NEW POSTS\", newPosts)\n    // this.setState({posts: newPosts});\n  }\n  setComments(updater) {\n    this.setState(prevState => {\n      // Check if updater is a function\n      const newComments = typeof updater === 'function' ? updater(prevState.comments) : updater;\n      console.log(\"Setting comments:\", newComments);\n      return {\n        comments: newComments\n      };\n    });\n\n    // this.setState({comments: newComments});\n  }\n  setCommentOrReply(newCommentOrReply) {\n    // will be used for commenting and replying\n    this.setState({\n      commentOrReply: newCommentOrReply\n    }); // either \"comment\" or \"reply\"\n  }\n  setCommentOrReplyParentID(newCommentOrReplyParentID) {\n    // will be used for commenting and replying\n    this.setState({\n      commentOrReplyParentID: newCommentOrReplyParentID\n    }); // either \"comment\" or \"reply\"\n  }\n  changeMainContent() {\n    switch (this.state.page) {\n      case 'userProf':\n        return /*#__PURE__*/_jsxDEV(TheUserPage, {\n          posts: this.state.posts,\n          goToNewPostPageView: this.goToNewPostPageView,\n          goToEditPostPage: this.goToEditPostPage,\n          goToEditCommunityPage: this.goToEditCommunityPage,\n          goToEditCommentPage: this.goToEditCommentPage,\n          communities: this.state.communities,\n          comments: this.state.comments,\n          linkFlairs: this.state.linkFlairs,\n          loggedIn: this.state.loggedIn,\n          user: this.state.user,\n          setPage: this.setPage,\n          userInfo: this.state.userInfo,\n          userProf: this.state.userProf,\n          userComs: this.state.userComs,\n          userPosts: this.state.userPosts,\n          userComments: this.state.userComments,\n          activeButton: this.state.userProfActive,\n          handleButtonChange: this.handleButtonChange,\n          setComments: this.setComments,\n          setPosts: this.setPosts,\n          setCommunities: this.setCommunities,\n          allPhredditUsers: this.state.allPhredditUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 32\n        }, this);\n      case 'welcome':\n        return /*#__PURE__*/_jsxDEV(TheWelcomePage, {\n          setPage: this.setPage,\n          loggedIn: this.state.loggedIn,\n          handleLogout: this.handleLogout,\n          user: this.state.user,\n          message: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 9\n        }, this);\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(TheHomePage, {\n          ref: this.theHomePageRef,\n          posts: this.state.posts,\n          goToPostPage: this.goToPostPage,\n          communities: this.state.communities,\n          comments: this.state.comments,\n          linkFlairs: this.state.linkFlairs,\n          setPage: this.setPage,\n          handleOrderButtonClick: this.handleOrderButtonClick,\n          loggedIn: this.state.loggedIn,\n          user: this.state.user,\n          userInfo: this.state.userInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 9\n        }, this);\n      case 'NewCommunityPageView':\n        return /*#__PURE__*/_jsxDEV(NewCommunityPageView, {\n          communities: this.state.communities,\n          setCommunities: this.setCommunities,\n          setPage: this.setPage,\n          loggedIn: this.state.loggedIn,\n          userInfo: this.state.userInfo,\n          editCom: this.state.comUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }, this);\n      case 'NewPostPageView':\n        return /*#__PURE__*/_jsxDEV(NewPostPageView, {\n          communities: this.state.communities,\n          setCommunities: this.setCommunities,\n          linkFlairs: this.state.linkFlairs,\n          setLinkFlairs: this.setLinkFlairs,\n          posts: this.state.posts,\n          setPosts: this.setPosts,\n          setPage: this.setPage,\n          loggedIn: this.state.loggedIn,\n          userInfo: this.state.userInfo,\n          editPost: this.state.postUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 9\n        }, this);\n      case 'community':\n        return /*#__PURE__*/_jsxDEV(TheCommunityPage, {\n          community: this.state.selectedCommunity,\n          posts: this.state.posts,\n          communities: this.state.communities,\n          comments: this.state.comments,\n          linkFlairs: this.state.linkFlairs,\n          goToPostPage: this.goToPostPage,\n          handleOrderButtonClick: this.handleOrderButtonClick,\n          loggedIn: this.state.loggedIn,\n          user: this.state.user,\n          userInfo: this.state.userInfo,\n          setCommunities: this.setCommunities,\n          setPage: this.setPage,\n          goToCommunityPage: this.goToCommunityPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 9\n        }, this);\n      case 'post':\n        return /*#__PURE__*/_jsxDEV(ThePostPage, {\n          posts: this.state.posts,\n          post: this.state.selectedPost,\n          communities: this.state.communities,\n          comments: this.state.comments,\n          linkFlairs: this.state.linkFlairs,\n          setPage: this.setPage,\n          setCommentOrReply: this.setCommentOrReply,\n          setCommentOrReplyParentID: this.setCommentOrReplyParentID,\n          loggedIn: this.state.loggedIn,\n          userInfo: this.state.userInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 9\n        }, this);\n      case 'search':\n        return /*#__PURE__*/_jsxDEV(TheSearchResultsPage, {\n          posts: this.state.posts,\n          txtInput: this.state.txtInput,\n          goToPostPage: this.goToPostPage,\n          communities: this.state.communities,\n          comments: this.state.comments,\n          linkFlairs: this.state.linkFlairs,\n          handleOrderButtonClick: this.handleOrderButtonClick,\n          loggedIn: this.state.loggedIn,\n          user: this.state.user,\n          userInfo: this.state.userInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 9\n        }, this);\n      case \"NewCommentPageView\":\n        return /*#__PURE__*/_jsxDEV(NewCommentPageView, {\n          posts: this.state.posts,\n          setPosts: this.setPosts,\n          comments: this.state.comments,\n          setComments: this.setComments,\n          setPage: this.setPage,\n          commentOrReply: this.state.commentOrReply,\n          setCommentOrReply: this.setCommentOrReply,\n          commentOrReplyParentID: this.state.commentOrReplyParentID,\n          setCommentOrReplyParentID: this.setCommentOrReplyParentID,\n          loggedIn: this.state.loggedIn,\n          userInfo: this.state.userInfo,\n          editComment: this.state.comUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 9\n        }, this);\n      case \"welcome\":\n        return /*#__PURE__*/_jsxDEV(TheWelcomePage, {\n          setPage: this.setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 9\n        }, this);\n      case \"register\":\n        return /*#__PURE__*/_jsxDEV(TheRegisterPage, {\n          setPage: this.setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 9\n        }, this);\n      case 'login':\n        return /*#__PURE__*/_jsxDEV(TheLoginPage, {\n          setPage: this.setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 9\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TheWelcomePage, {\n          setPage: this.setPage,\n          loggedIn: this.state.loggedIn,\n          handleLogout: this.handleLogout,\n          user: this.state.user,\n          message: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 9\n        }, this);\n    }\n  }\n  render() {\n    const {\n      page,\n      selectedPost,\n      txtInput,\n      loggedIn,\n      user,\n      userInfo\n    } = this.state;\n    const showHeaderAndNavBar = page !== 'welcome' && page !== 'register' && page !== 'login';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showHeaderAndNavBar && /*#__PURE__*/_jsxDEV(TheBanner, {\n        goToHomePage: this.goToHomePage,\n        goToSearchResultsPage: this.goToSearchResultsPage,\n        goToNewPostPageView: this.goToNewPostPageView,\n        page: page,\n        user: user,\n        loggedIn: loggedIn,\n        handleLogout: this.handleLogout,\n        setPage: this.setPage,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"body\",\n        children: [showHeaderAndNavBar && /*#__PURE__*/_jsxDEV(NavBar, {\n          page: page,\n          selectedCommunity: this.state.selectedCommunity,\n          goToHomePage: this.goToHomePage,\n          goToCommunityPage: this.goToCommunityPage,\n          communities: this.state.communities,\n          setPage: this.setPage,\n          loggedIn: loggedIn,\n          userInfo: userInfo,\n          setCommunities: this.setCommunities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this), this.changeMainContent()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["axios","React","createRef","TheBanner","TheCommunityPage","TheHomePage","ThePostPage","TheSearchResultsPage","TheWelcomePage","TheRegisterPage","TheLoginPage","TheUserPage","NavBar","NewCommunityPageView","NewPostPageView","NewCommentPageView","jsxDEV","_jsxDEV","Phreddit","Component","constructor","props","state","page","selectedPost","selectedCommunity","txtInput","communities","linkFlairs","posts","comments","commentOrReply","commentOrReplyParentID","isLoading","user","loggedIn","message","userInfo","userProf","userComs","userPosts","userComments","userProfActive","postUser","comUser","commentUser","allPhredditUsers","isUserSelected","goToPostPage","bind","goToHomePage","goToCommunityPage","goToSearchResultsPage","goToNewPostPageView","goToEditPostPage","goToEditCommunityPage","goToEditCommentPage","setPage","setCommunities","setLinkFlairs","setPosts","setComments","setCommentOrReply","setCommentOrReplyParentID","fetchData","handleOrderButtonClick","handleLogout","fetchUserData","handleButtonChange","theHomePageRef","componentDidMount","console","log","post","withCredentials","setState","alert","error","fetchAllUsers","isAdmin","response","get","data","email","userRes","communitiesRes","postsRes","commentsRes","params","userEmail","pageProf","sessionResponse","linkFlairsRes","opt","postTitle","find","title","postRes","_id","current","resetOrder","comName","community","comRes","comment","commentRes","toGoPage","activeButton","updater","prevState","newCommunities","newLinkFlairs","newPosts","newComments","newCommentOrReply","newCommentOrReplyParentID","changeMainContent","fileName","_jsxFileName","lineNumber","columnNumber","ref","editCom","editPost","editComment","render","showHeaderAndNavBar","children","id"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/phreddit.js"],"sourcesContent":["import '../stylesheets/phreddit.css';\nimport axios from 'axios';\nimport React, {createRef} from 'react';\n//import  Model  from '../models/model.js';\n\nimport TheBanner from './banner.js';\nimport TheCommunityPage from './communityPage.js';\nimport TheHomePage from './homePage.js';\nimport ThePostPage from './postPage.js';\nimport TheSearchResultsPage from './searchResultsPage.js';\n\nimport TheWelcomePage from './welcome.js';\nimport TheRegisterPage from './register.js';\nimport TheLoginPage from './login.js';\nimport TheUserPage from './userProf.js';\n\nimport NavBar from './navBar.js';\nimport NewCommunityPageView from './newCommunityPageView.js';\nimport NewPostPageView from './newPostPageView.js';\nimport NewCommentPageView from './newCommentPageView.js';\n\n\n//const model = new Model();\n\nexport default class Phreddit extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      page: 'welcome', \n      selectedPost: null, \n      selectedCommunity: null, \n      txtInput: null,\n\n      communities: [],\n      linkFlairs: [],\n      posts: [],\n      comments: [],\n\n      commentOrReply: null,\n      commentOrReplyParentID: null,\n      isLoading: false,\n\n      user: 'Guest',\n      loggedIn: false,\n      message: 'Guest',\n      userInfo: [],\n\n      userProf: {},\n      userComs: [],\n      userPosts: [],\n      userComments: [],\n\n      userProfActive: 'posts',\n\n      postUser: null,\n      comUser: null,\n      commentUser: null,\n\n      allPhredditUsers: [],\n\n      isUserSelected: false,\n    };\n    this.goToPostPage = this.goToPostPage.bind(this);\n    this.goToHomePage = this.goToHomePage.bind(this);\n    this.goToCommunityPage = this.goToCommunityPage.bind(this);\n    this.goToSearchResultsPage = this.goToSearchResultsPage.bind(this);\n    this.goToNewPostPageView = this.goToNewPostPageView.bind(this);\n\n    this.goToEditPostPage = this.goToEditPostPage.bind(this);\n    this.goToEditCommunityPage = this.goToEditCommunityPage.bind(this);\n    this.goToEditCommentPage = this.goToEditCommentPage.bind(this);\n\n    this.setPage = this.setPage.bind(this);\n    this.setCommunities = this.setCommunities.bind(this);\n    this.setLinkFlairs = this.setLinkFlairs.bind(this);\n    this.setPosts = this.setPosts.bind(this);\n    this.setComments = this.setComments.bind(this);\n\n    this.setCommentOrReply = this.setCommentOrReply.bind(this);\n    this.setCommentOrReplyParentID = this.setCommentOrReplyParentID.bind(this);\n\n    this.fetchData = this.fetchData.bind(this);\n    this.handleOrderButtonClick = this.handleOrderButtonClick.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.fetchUserData = this.fetchUserData.bind(this);\n    this.handleButtonChange = this.handleButtonChange.bind(this);\n\n\n    this.theHomePageRef = createRef();\n  }\n\n  async componentDidMount(){\n    console.log(\"MOUNTED\");\n    await this.fetchData();\n  }\n\n  async handleLogout() {\n    try {\n      await axios.post('http://localhost:8000/logout', {}, { withCredentials: true });\n      this.setState({ loggedIn: false, user: 'Guest', message: \"Guest\", page: \"welcome\"});\n      alert('You have been logged out.');\n    } catch (error) {\n      console.error('Error logging out:', error);\n      alert('Failed to log out. Please try again.');\n    }\n  }\n  \n  //get all users for phredditUsers\n  async fetchAllUsers(isAdmin) {\n    try {\n      if(isAdmin){\n        const response = await axios.get('http://localhost:8000/getAllUsers', { withCredentials: true });\n        console.log(\"ALL USERS\", response.data);\n        console.log(\"ALL USERSsssssssssss\", response.data[0]);\n        this.setState({allPhredditUsers: response.data});\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  async fetchUserData(user) {\n    console.log(\"FETCHING USER DATA\")\n    console.log(\"Is there a user????????\", user)\n    if(user){\n      console.log(\"Is there a user????????\", user.email)\n    }\n    try {\n      await this.fetchData();\n      let userRes;\n      let communitiesRes;\n      let postsRes;\n      let commentsRes;\n      if(user){\n        console.log(\"AFTER FETCHING PURE DATA\")\n        userRes = await axios.get(`http://localhost:8000/userInfo`, { withCredentials: true, params: {userEmail: user.email} });\n        console.log(userRes.data)\n        communitiesRes = await axios.get(`http://localhost:8000/userCommunities`, { withCredentials: true, params: {userEmail: user.email} });\n        console.log(communitiesRes.data)\n        postsRes = await axios.get(`http://localhost:8000/userPosts`, { withCredentials: true, params: {userEmail: user.email} });\n        console.log(postsRes.data)\n        commentsRes = await axios.get(`http://localhost:8000/userComments`, { withCredentials: true, params: {userEmail: user.email} });\n        console.log(commentsRes.data)\n      }\n      else{\n        console.log(\"AFTER FETCHING PURE DATA\")\n        userRes = await axios.get(`http://localhost:8000/userInfo`, { withCredentials: true });\n        console.log(userRes.data)\n        communitiesRes = await axios.get(`http://localhost:8000/userCommunities`, { withCredentials: true });\n        console.log(communitiesRes.data)\n        postsRes = await axios.get(`http://localhost:8000/userPosts`, { withCredentials: true });\n        console.log(postsRes.data)\n        commentsRes = await axios.get(`http://localhost:8000/userComments`, { withCredentials: true });\n        console.log(commentsRes.data)\n      }\n\n      let pageProf = user ? \"posts\" : \"phredditUsers\";\n      console.log(\"active prof page\", pageProf);\n      let isUserSelected\n      \n      this.setState({\n        userProf: userRes.data.user,\n        userComs: communitiesRes.data,\n        userPosts: postsRes.data,\n        userComments: commentsRes.data,\n        userProfActive: pageProf,\n        // isLoading: false,\n      });\n\n      console.log(\"USER INFO000000000000\", this.state.userInfo[3]);\n      this.fetchAllUsers(this.state.userInfo[3]);\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    //   this.setState({ isLoading: false });\n    }\n  }\n\n  async fetchData(){\n    console.log(\"FETCHING PURE DATA\")\n    if (this.state.isLoading) return; \n    this.setState({ isLoading: true });\n    //console.log(\"FETCHING DATA AGAIN\");\n    try{\n      const sessionResponse = await axios.get(\"http://localhost:8000/\", { withCredentials: true });\n      //console.log(sessionResponse.data)\n      this.setState({ \n        loggedIn: !!sessionResponse.data.loggedIn, \n        user: sessionResponse.data.user || \"Guest\",\n        message: sessionResponse.data.message,\n        userInfo: sessionResponse.data.userInfo\n      });\n\n\n\n      const communitiesRes = await axios.get(\"http://localhost:8000/communities\");\n      //console.log(\"Communities fetched:\", communitiesRes.data);\n      const postsRes = await axios.get(\"http://localhost:8000/posts\");\n      //console.log(\"Posts fetched:\", postsRes.data);\n      const commentsRes = await axios.get(\"http://localhost:8000/comments\");\n      //console.log(\"Comments fetched:\", commentsRes.data);\n      const linkFlairsRes = await axios.get(\"http://localhost:8000/linkflairs\");\n      //console.log(\"Link flairs fetched:\", linkFlairsRes.data);\n\n\n      this.setState({\n        communities: communitiesRes.data,\n        posts: postsRes.data,\n        comments: commentsRes.data,\n        linkFlairs: linkFlairsRes.data,\n      });\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n    \n  }\n\n  async handleOrderButtonClick() {\n    //console.log(\"Order button clicked, fetching new data...\");\n    await this.fetchData(); \n  }\n\n  async handleButtonChange(opt) {\n    console.log(\"SETTING ACTIVE BUTTON\",opt);\n    await this.fetchUserData();\n    this.setState({ userProfActive: opt });\n}\n\n\n  \n  async goToPostPage(postTitle){\n    //console.log(\"GO TO POST THE POST TITLE\", postTitle);\n    await this.fetchData();\n    const post = this.state.posts.find(post => post.title === postTitle);\n\n    if (post) {\n      try{\n      const postRes = await axios.get(`http://localhost:8000/posts/${post._id}`)\n      this.setState({\n        page: 'post',\n        selectedPost: postRes.data, \n        selectedCommunity: null,\n        txtInput: null,\n      });\n        \n      } catch(error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n\n  async goToHomePage(){\n    await this.fetchData();\n    if (this.theHomePageRef.current) {\n      this.theHomePageRef.current.resetOrder();\n    }\n    this.setState({\n      page: 'home',\n      selectedPost: null, \n      selectedCommunity: null, \n      txtInput:null,\n    })\n  }\n\n\n    \n  async goToCommunityPage(comName){\n    await this.fetchData();\n      \n    this.setState({\n      page: 'community',\n      selectedPost: null, \n      selectedCommunity: comName, \n      txtInput:null,\n    });\n  }\n    \n  async goToSearchResultsPage(txtInput){\n    await this.fetchData();\n    this.setState({page: 'search', selectedPost: null, selectedCommunity: null, txtInput: txtInput})\n  }\n\n  async goToNewPostPageView(){ // used for creating new posts\n    await this.fetchData();\n    await this.fetchUserData(); \n    this.setState({page: 'NewPostPageView'})\n  }\n\n  async goToEditPostPage(postTitle) {\n    await this.fetchData();\n\n    const post = this.state.posts.find(post => post.title === postTitle);\n\n    if (post) {\n      try{\n      const postRes = await axios.get(`http://localhost:8000/getPost/${post._id}`)\n      this.setState({\n        page: 'NewPostPageView',\n        postUser: postRes.data, \n      });\n        \n      } catch(error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n\n  async goToEditCommunityPage(community) {\n    await this.fetchData();\n    console.log(\"EDITING COM uh hello?\", community)\n\n  \n    if (community) {\n      try{\n      const comRes = await axios.get(`http://localhost:8000/communityInformation/${community.props._id}`);\n      console.log(\"COM DATA:\", comRes.data)\n      this.setState({\n        page: 'NewCommunityPageView',\n        comUser: comRes.data.community, \n      });\n        \n      } catch(error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n\n  async goToEditCommentPage(comment) {\n    await this.fetchData();\n    console.log(\"EDITING COMMENT\", comment)\n\n  \n    if (comment) {\n      try{\n      const commentRes = await axios.get(`http://localhost:8000/commentInformation/${comment.props._id}`);\n      console.log(\"COMMENT DATA:\", commentRes.data)\n      this.setState({\n        page: 'NewCommentPageView',\n        comUser: commentRes.data.comment, \n      });\n        \n      } catch(error) {\n        console.error(\"Error fetching data\", error);\n      }\n    }\n  }\n\n\n  //change this to make it work for everything\n  async setPage(toGoPage, comName, user){\n    //console.log(\"ABOUT TO SWITCH PAGES\", toGoPage);\n    await this.fetchData();\n    \n    if (toGoPage === 'userProf' || toGoPage === 'NewPostPageView' || toGoPage === 'NewCommunityPageView' || toGoPage === 'NewCommentPageView') {\n      if(user){\n        await this.fetchUserData(user);\n      }\n      else{\n        await this.fetchUserData();  \n      }\n    }\n    //console.log(\"Data fetched:\", this.state.communities, this.state.posts);\n    console.log(\"SETTING PAGE TO:\", toGoPage)\n    console.log(\"am i an adminn??????\", this.state.userInfo, this.state.loggedIn);\n    // let flag;\n    // if(this.state.userInfo[3]){\n    //   flag\n    // }\n    this.setState({ \n      postUser: null,\n      comUser: null,\n      commentUser: null,\n      page: toGoPage, \n      selectedCommunity: comName, \n      userProfActive: toGoPage === \"userProf\" ? (this.state.userInfo[3] ? \"phredditUsers\" : \"posts\") \n        : this.state.activeButton\n    });\n  }\n  \n\n  setCommunities(updater){\n    // console.log(\"setting communities\", newCommunities)\n    // this.setState({communities: newCommunities});\n\n    this.setState((prevState) => {\n      // Check if updater is a function\n      const newCommunities = typeof updater === 'function' ? updater(prevState.communities) : updater;\n\n      console.log(\"Setting communities:\", newCommunities);\n      return { communities: newCommunities };\n  });\n\n  }\n  setLinkFlairs(newLinkFlairs){\n    this.setState({linkFlairs: newLinkFlairs});\n  }\n  setPosts(updater){\n    this.setState((prevState) => {\n      // Check if updater is a function\n      const newPosts = typeof updater === 'function' ? updater(prevState.posts) : updater;\n\n      console.log(\"Setting Posts:\", newPosts);\n      return { posts: newPosts };\n    });\n    // console.log(\"SETTING NEW POSTS\", newPosts)\n    // this.setState({posts: newPosts});\n  }\n  setComments(updater){\n    this.setState((prevState) => {\n      // Check if updater is a function\n      const newComments = typeof updater === 'function' ? updater(prevState.comments) : updater;\n\n      console.log(\"Setting comments:\", newComments);\n      return { comments: newComments };\n  });\n\n    // this.setState({comments: newComments});\n  }\n  \n  setCommentOrReply(newCommentOrReply){// will be used for commenting and replying\n    this.setState({commentOrReply: newCommentOrReply}); // either \"comment\" or \"reply\"\n  }\n  setCommentOrReplyParentID(newCommentOrReplyParentID){// will be used for commenting and replying\n    this.setState({commentOrReplyParentID: newCommentOrReplyParentID}); // either \"comment\" or \"reply\"\n  }\n  \n  changeMainContent(){\n    switch(this.state.page){\n      case 'userProf': return (<TheUserPage \n        posts={this.state.posts} \n        goToNewPostPageView={this.goToNewPostPageView}\n        goToEditPostPage={this.goToEditPostPage}\n        goToEditCommunityPage={this.goToEditCommunityPage}\n        goToEditCommentPage={this.goToEditCommentPage}\n        communities={this.state.communities} \n        comments={this.state.comments} \n        linkFlairs={this.state.linkFlairs}\n        loggedIn={this.state.loggedIn}\n        user={this.state.user}\n        setPage={this.setPage} \n        userInfo={this.state.userInfo}\n        userProf={this.state.userProf}\n        userComs={this.state.userComs}\n        userPosts={this.state.userPosts}\n        userComments={this.state.userComments}\n        activeButton={this.state.userProfActive}\n        handleButtonChange={this.handleButtonChange}\n        setComments={this.setComments}\n        setPosts={this.setPosts}\n        setCommunities={this.setCommunities}\n        allPhredditUsers={this.state.allPhredditUsers}\n        />\n      );\n\n      case 'welcome': return (\n        <TheWelcomePage \n        setPage={this.setPage} \n        loggedIn={this.state.loggedIn}\n        handleLogout={this.handleLogout}\n        user={this.state.user} \n        message={this.state.message}\n        />\n      );\n      case 'home':  return (\n        <TheHomePage\n        ref={this.theHomePageRef}\n        posts={this.state.posts} \n        goToPostPage={this.goToPostPage} \n        communities={this.state.communities} \n        comments={this.state.comments} \n        linkFlairs={this.state.linkFlairs}\n        setPage={this.setPage}\n        handleOrderButtonClick={this.handleOrderButtonClick}\n        loggedIn={this.state.loggedIn}\n        user={this.state.user} \n        userInfo={this.state.userInfo}\n        />\n      );\n      case 'NewCommunityPageView': return (\n        <NewCommunityPageView \n        communities={this.state.communities} \n        setCommunities={this.setCommunities}\n        setPage={this.setPage}\n        loggedIn={this.state.loggedIn}\n        userInfo={this.state.userInfo}\n        editCom={this.state.comUser}\n        />\n      );\n      case 'NewPostPageView': return (\n        <NewPostPageView\n        communities={this.state.communities}\n        setCommunities={this.setCommunities}\n        linkFlairs={this.state.linkFlairs}\n        setLinkFlairs={this.setLinkFlairs}\n        posts={this.state.posts}\n        setPosts={this.setPosts}\n        setPage={this.setPage}\n        loggedIn={this.state.loggedIn}\n        userInfo={this.state.userInfo}\n        editPost={this.state.postUser}\n        />\n      );\n      case 'community': return(\n        <TheCommunityPage\n        community={this.state.selectedCommunity}\n        posts={this.state.posts} \n        communities={this.state.communities} \n        comments={this.state.comments} \n        linkFlairs={this.state.linkFlairs}\n        goToPostPage={this.goToPostPage}\n        handleOrderButtonClick={this.handleOrderButtonClick}\n        loggedIn={this.state.loggedIn}\n        user={this.state.user} \n        userInfo={this.state.userInfo}\n        setCommunities={this.setCommunities}\n        setPage={this.setPage}\n        goToCommunityPage={this.goToCommunityPage}\n        />\n      );\n      case 'post' : return (\n        <ThePostPage \n        posts={this.state.posts}\n        post={this.state.selectedPost} \n        communities={this.state.communities} \n        comments={this.state.comments} \n        linkFlairs={this.state.linkFlairs}\n        setPage={this.setPage}\n        setCommentOrReply={this.setCommentOrReply}\n        setCommentOrReplyParentID={this.setCommentOrReplyParentID}\n        loggedIn={this.state.loggedIn}\n        userInfo={this.state.userInfo}\n        />\n      );\n      case 'search' : return(\n        <TheSearchResultsPage \n        posts={this.state.posts} \n        txtInput={this.state.txtInput} \n        goToPostPage={this.goToPostPage} \n        communities={this.state.communities} \n        comments={this.state.comments} \n        linkFlairs={this.state.linkFlairs}\n        handleOrderButtonClick={this.handleOrderButtonClick}\n        loggedIn={this.state.loggedIn}\n        user={this.state.user} \n        userInfo={this.state.userInfo}\n        />\n      );\n      case \"NewCommentPageView\": return(\n        <NewCommentPageView\n        posts={this.state.posts}\n        setPosts={this.setPosts}\n        comments={this.state.comments}\n        setComments={this.setComments}\n        setPage={this.setPage}\n        commentOrReply={this.state.commentOrReply}\n        setCommentOrReply={this.setCommentOrReply}\n        commentOrReplyParentID={this.state.commentOrReplyParentID}\n        setCommentOrReplyParentID={this.setCommentOrReplyParentID}\n        loggedIn={this.state.loggedIn}\n        userInfo={this.state.userInfo}\n        editComment={this.state.comUser}\n        />\n      );\n      case \"welcome\": return( \n        <TheWelcomePage\n        setPage={this.setPage}\n        />\n      );\n      case \"register\": return(\n        <TheRegisterPage\n        setPage={this.setPage}\n        />\n      );\n      case 'login': return (\n        <TheLoginPage \n        setPage={this.setPage}\n        />\n      );\n      default: return (\n        <TheWelcomePage \n        setPage={this.setPage} \n        loggedIn={this.state.loggedIn}\n        handleLogout={this.handleLogout}\n        user={this.state.user} \n        message={this.state.message}\n        />\n      );\n    }\n  }\n  \n  render(){\n    const {page , selectedPost, txtInput, loggedIn, user, userInfo} = this.state;\n\n\n    const showHeaderAndNavBar = page !== 'welcome' && page !== 'register' && page !== 'login';\n\n    return (\n      <div>\n        {showHeaderAndNavBar && (\n          <TheBanner\n            goToHomePage={this.goToHomePage}\n            goToSearchResultsPage={this.goToSearchResultsPage}\n            goToNewPostPageView={this.goToNewPostPageView}\n            page={page}\n            user={user}\n            loggedIn={loggedIn}\n            handleLogout={this.handleLogout}\n            setPage={this.setPage}\n            userInfo={userInfo}\n          />\n        )}\n        <div id=\"body\">\n          {showHeaderAndNavBar && (\n            <NavBar\n              page={page}\n              selectedCommunity={this.state.selectedCommunity}\n              goToHomePage={this.goToHomePage}\n              goToCommunityPage={this.goToCommunityPage}\n              communities={this.state.communities}\n              setPage={this.setPage}\n              loggedIn={loggedIn}\n              userInfo={userInfo}\n              setCommunities={this.setCommunities}\n            />\n          )}\n          {this.changeMainContent()}\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}