{"ast":null,"code":"var _jsxFileName = \"/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/userProf.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { PostSection, InfoSection, orderNewest, TimeStamp, getTotalComments } from './homePage.js';\nimport { Comment } from './postPage.js';\nimport '../stylesheets/userProf.css';\nimport memberCountIcon from '../images/memberCountIcon.svg';\nimport postCountIcon from '../images/postCountIcon.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TheUserPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteComment = async commentId => {\n      console.log(\"COMMENT ID IN DELETE\", commentId);\n      try {\n        const response = await axios.delete(`http://localhost:8000/comments/${commentId}`, {\n          withCredentials: true\n        });\n        console.log(response.data);\n        if (response.data.updatedPost) {\n          this.props.setPosts(prevPosts => prevPosts.map(post => post._id === response.data.updatedPost._id ? {\n            ...post,\n            ...response.data.updatedPost\n          } : post));\n        }\n        if (response.data.updatedComment) {\n          this.props.setComments(prevComments => prevComments.map(comment => comment._id === response.data.updatedComment._id ? {\n            ...comment,\n            ...response.data.updatedComment\n          } : comment));\n        }\n        this.props.setComments(prevComments => prevComments.filter(comment => !response.data.deletedComments.includes(comment._id)));\n        alert('Comment deleted successfully!');\n        this.props.handleButtonChange(\"comments\");\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n        alert('Failed to delete comment. Please try again.');\n      }\n    };\n    this.handleDeletePost = async postID => {\n      console.log(\"POST ID IN DELETE\", postID);\n      try {\n        const response = await axios.delete(`http://localhost:8000/posts/${postID}`);\n        console.log(response.data);\n        if (response.data.deletedPost) {\n          this.props.setPosts(prevPosts => prevPosts.filter(post => post._id !== response.data.deletedPost._id));\n        }\n        if (response.data.updatedCommunity) {\n          this.props.setCommunities(prevCommunities => prevCommunities.map(community => community._id === response.data.updatedCommunity._id ? {\n            ...community,\n            ...response.data.updatedCommunity\n          } : community));\n        }\n        if (response.data.deletedComments) {\n          this.props.setComments(prevComments => prevComments.filter(comment => !response.data.deletedComments.includes(comment._id)));\n        }\n        alert('POST deleted successfully!');\n        this.props.handleButtonChange(\"posts\");\n      } catch (error) {\n        console.error('Error deleting posts:', error);\n        alert('Failed to delete posts. Please try again.');\n      }\n    };\n    this.handleDeleteCommunity = async comID => {\n      console.log(\"COMMUNITY ID IN DELETE\", comID);\n      try {\n        const response = await axios.delete(`http://localhost:8000/communities/${comID}`);\n        console.log(response.data);\n        if (response.data.deletedCommunity) {\n          this.props.setCommunities(prevCommunities => prevCommunities.filter(community => community._id !== response.data.deletedCommunity._id));\n        }\n        if (response.data.deletedPosts) {\n          const deletedPostIds = response.data.deletedPosts.map(post => post._id);\n          this.props.setPosts(prevPosts => prevPosts.filter(post => !deletedPostIds.includes(post._id)));\n        }\n        if (response.data.deletedComments) {\n          this.props.setComments(prevComments => prevComments.filter(comment => !response.data.deletedComments.includes(comment._id)));\n        }\n        alert('COMMUNITY deleted successfully!');\n        this.props.handleButtonChange(\"communities\");\n      } catch (error) {\n        console.error('Error deleting communities:', error);\n        alert('Failed to delete communities. Please try again.');\n      }\n    };\n    this.handleDeleteUser = async userId => {};\n    this.state = {\n      order: orderNewest\n    };\n    this.handleDeleteComment = this.handleDeleteComment.bind(this);\n  }\n  //get all users for phredditUsers\n  // async fetchAllUsers() {\n  //     try {\n  //         const response = await axios.get('http://localhost:8000/getAllUsers', { withCredentials: true });\n  //         console.log(\"ALL USERS\", response.data);\n  //         console.log(\"ALL USERS\", response.data[0]);\n  //         return response.data;\n  //     } catch (error) {\n  //         console.error('Error fetching users:', error);\n  //     }\n  // };\n\n  render() {\n    const {\n      activeButton\n    } = this.props;\n    console.log(this.props);\n    const {\n      setPage,\n      goToEditCommunityPage,\n      goToEditPostPage,\n      goToEditCommentPage,\n      posts,\n      communities,\n      comments,\n      linkFlairs,\n      handleOrderButtonClick,\n      loggedIn,\n      userInfo,\n      allPhredditUsers\n    } = this.props;\n    const allUsers = allPhredditUsers;\n    console.log(\"ALL USERSsssssssssss\", allUsers);\n    console.log(\"HOME PAGE PROPS\", this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homePage\",\n      className: \"main_cont_divs\",\n      children: [/*#__PURE__*/_jsxDEV(TheUserPageHeader, {\n        user: this.props.userProf,\n        activeButton: activeButton,\n        handleButtonChange: this.props.handleButtonChange,\n        loggedIn: loggedIn,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), activeButton === 'phredditUsers' && userInfo[3] && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), allUsers.map(user => {\n          // don't display admin users\n          if (user.admin) {} else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userAccounts\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"userAccountDiv\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Display Name: \", user.display]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Email Address: \", user.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Reputation: \", user.reputation]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"userAccountsSpaceDivTag\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"deleteUserButton\",\n                onClick: e => {\n                  e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n                  console.log(user);\n                  this.handleDeleteUser(user._id);\n                },\n                children: \"Delete User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 45\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 41\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), activeButton === 'posts' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PostSection, {\n          posts: this.props.userPosts.posts,\n          goToPostPage: goToEditPostPage,\n          comments: comments,\n          linkFlairs: linkFlairs,\n          communities: communities,\n          order: this.state.order,\n          page: 'userInfo',\n          loggedIn: loggedIn,\n          userInfo: userInfo,\n          handleDeletePost: this.handleDeletePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), activeButton === 'communities' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CommunitySection, {\n          communities: this.props.userComs,\n          goToEditCommunityPage: goToEditCommunityPage,\n          handleDeleteCommunity: this.handleDeleteCommunity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), activeButton === 'comments' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          comments: comments,\n          userComments: this.props.userComments,\n          posts: posts,\n          userPosts: this.props.userPosts,\n          goToEditCommentPage: goToEditCommentPage,\n          handleDeleteComment: this.handleDeleteComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this);\n  }\n}\nclass TheUserPageHeader extends React.Component {\n  render() {\n    console.log(this.props);\n    const {\n      user\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(InfoSection, {\n        user: user,\n        page: 'userProf'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserButtons, {\n        activeButton: this.props.activeButton,\n        handleButtonChange: this.props.handleButtonChange,\n        loggedIn: this.props.loggedIn,\n        userInfo: this.props.userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass CommentSection extends React.Component {\n  render() {\n    const {\n      posts,\n      communities,\n      order,\n      comments,\n      linkFlairs,\n      setPage,\n      userComments,\n      userPosts,\n      handleDeleteComment\n    } = this.props;\n    console.log(\"COMMENT SECTION hello?\", comments);\n    const sortedComments = commmentsList(comments, userPosts.posts, userComments.comments, posts);\n    const listComs = sortedComments.map((com, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userCommunitiesComment\",\n        id: \"id-\" + com.props._id,\n        onClick: () => {\n          console.log(\"BEFORE ASSIGNMENT\");\n          this.props.goToEditCommentPage(com);\n          //console.log(\"AFTER ASSIGNMENT\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userComments\",\n          children: [com.props.postTitle, \" \\u2022 \", /*#__PURE__*/_jsxDEV(TimeStamp, {\n            postedDate: com.props.comment.commentedDate\n          }, com.props.comment.commentedDate, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: com.props.comment.content.length > 20 ? `${com.props.comment.content.slice(0, 20)}...` : com.props.comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deleteCommentButton\",\n          onClick: e => {\n            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n            console.log(com.props);\n            handleDeleteComment(com.props._id);\n          },\n          children: \"Delete Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, com.props._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this);\n    });\n    let commentSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: listComs\n    }, sortedComments.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this);\n    return commentSectionInfo;\n  }\n}\nfunction commmentsList(comments, userPosts, userComments, posts) {\n  console.log(\"comments B4\", comments, posts);\n  const sortedList = commentNewest(userComments);\n\n  //console.log(\"SORTED LIST\", sortedList)\n\n  const comsList = sortedList.map(function (com, index) {\n    let postWithComment;\n    let commentArray;\n    for (const post of posts) {\n      // Flatten the comments for the current post\n      console.log(\"this is the post info from\", post.title, post.commentIDs, comments);\n      commentArray = getTotalComments(post, comments);\n      //console.log(\"THIS SI THE COMMENT ARRAY FOR THIS POST\", post, commentArray)\n\n      // Check if the current comment exists in the flattened comment array\n      if (commentArray.some(nestedComment => nestedComment._id === com._id)) {\n        postWithComment = post;\n        break; // Exit the loop once the matching post is found\n      }\n    }\n\n    // Get the post title if found, or default to \"Post Not Found\"\n    const postTitle = postWithComment ? postWithComment.title : \"Post Not Found\";\n\n    //console.log(com, postTitle)\n    return /*#__PURE__*/_jsxDEV(Comment, {\n      _id: com._id,\n      page: 'userProf',\n      postTitle: postTitle,\n      comment: com\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this);\n  });\n  return comsList;\n}\nconst commentNewest = comToDisplay => {\n  let com = comToDisplay;\n  com.sort(function (a, b) {\n    return new Date(b.commentedDate) - new Date(a.commentedDate);\n  });\n  return com;\n};\nclass CommunitySection extends React.Component {\n  render() {\n    const {\n      posts,\n      communities,\n      order,\n      comments,\n      linkFlairs,\n      setPage\n    } = this.props;\n    //console.log(\"COM SECTION hello?\", communities)\n    const sortedCommunity = comsList(communities.communities);\n    const listComs = sortedCommunity.map((com, index) => {\n      //console.log(com)\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"id-\" + com.props._id,\n        onClick: () => {\n          //console.log(\"BEFORE ASSIGNMENT\")\n          this.props.goToEditCommunityPage(com);\n          //console.log(\"AFTER ASSIGNMENT\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(Community, {\n          ...com.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deleteCommunityButton\",\n          onClick: e => {\n            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n            // console.log(com.props)\n            this.props.handleDeleteCommunity(com.props._id);\n          },\n          children: \"Delete Community\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this)]\n      }, com.props._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this);\n    });\n    let comSectionInfo = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: listComs\n    }, sortedCommunity.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this);\n    //console.log(postSectionInfo);\n\n    return comSectionInfo;\n  }\n}\nfunction comsList(communities) {\n  //console.log(\"COMMUNITIES B4\", communities)\n  const sortedList = comNewest(communities);\n\n  //console.log(\"SORTED LIST\", sortedList)\n\n  const comsList = sortedList.map(function (com, index) {\n    return /*#__PURE__*/_jsxDEV(Community, {\n      name: com.name,\n      description: com.description,\n      startDate: com.startDate,\n      createdBy: com.createdBy,\n      memberCount: com.memberCount,\n      postIDs: com.postIDs,\n      _id: com._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 16\n    }, this);\n  });\n  return comsList;\n}\nclass Community extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userCommunities\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"userCommunitiesName\",\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 28\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 39\n      }, this), \"Created: \", /*#__PURE__*/_jsxDEV(TimeStamp, {\n        postedDate: this.props.startDate\n      }, this.props.startDate, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created By: \", this.props.createdBy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"postCountIcon\",\n        alt: \"postCountIcon\",\n        src: postCountIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 18\n      }, this), \" \", this.props.postIDs.length, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"memberCountIcon\",\n        alt: \"memberCountIcon\",\n        src: memberCountIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 114\n      }, this), \" \", this.props.memberCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst comNewest = comToDisplay => {\n  let com = comToDisplay;\n  com.sort(function (a, b) {\n    return new Date(b.startDate) - new Date(a.startDate);\n  });\n  return com;\n};\nclass UserButtons extends React.Component {\n  render() {\n    const {\n      activeButton,\n      handleButtonChange,\n      loggedIn,\n      userInfo\n    } = this.props;\n    console.log(\"am i adminnnnnnn\", userInfo[3]); //userInfo[3] is admin value\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttonSection\",\n      children: [userInfo[3] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'phredditUsers' ? 'active' : '',\n          onClick: () => handleButtonChange('phredditUsers'),\n          children: \"Phreddit Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'posts' ? 'active' : '',\n          onClick: () => handleButtonChange('posts'),\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'communities' ? 'active' : '',\n          onClick: () => handleButtonChange('communities'),\n          children: \"Communities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userButtons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeButton === 'comments' ? 'active' : '',\n          onClick: () => handleButtonChange('comments'),\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","axios","PostSection","InfoSection","orderNewest","TimeStamp","getTotalComments","Comment","memberCountIcon","postCountIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","TheUserPage","Component","constructor","props","handleDeleteComment","commentId","console","log","response","delete","withCredentials","data","updatedPost","setPosts","prevPosts","map","post","_id","updatedComment","setComments","prevComments","comment","filter","deletedComments","includes","alert","handleButtonChange","error","handleDeletePost","postID","deletedPost","updatedCommunity","setCommunities","prevCommunities","community","handleDeleteCommunity","comID","deletedCommunity","deletedPosts","deletedPostIds","handleDeleteUser","userId","state","order","bind","render","activeButton","setPage","goToEditCommunityPage","goToEditPostPage","goToEditCommentPage","posts","communities","comments","linkFlairs","handleOrderButtonClick","loggedIn","userInfo","allPhredditUsers","allUsers","id","className","children","TheUserPageHeader","user","userProf","fileName","_jsxFileName","lineNumber","columnNumber","admin","display","email","reputation","onClick","e","stopPropagation","userPosts","goToPostPage","page","CommunitySection","userComs","CommentSection","userComments","UserButtons","sortedComments","commmentsList","listComs","com","index","postTitle","postedDate","commentedDate","content","length","slice","commentSectionInfo","sortedList","commentNewest","comsList","postWithComment","commentArray","title","commentIDs","some","nestedComment","comToDisplay","sort","a","b","Date","sortedCommunity","Community","comSectionInfo","comNewest","name","description","startDate","createdBy","memberCount","postIDs","alt","src"],"sources":["/Users/junmao/Desktop/CSE316_HW/project-thomaschuchu/client/src/components/userProf.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {PostSection, InfoSection, orderNewest, TimeStamp, getTotalComments} from './homePage.js';\nimport { Comment }  from './postPage.js';\nimport '../stylesheets/userProf.css';\nimport memberCountIcon from '../images/memberCountIcon.svg'\nimport postCountIcon from '../images/postCountIcon.svg'\n\nexport default class TheUserPage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          order: orderNewest,\n        };\n        \n        this.handleDeleteComment = this.handleDeleteComment.bind(this)\n    }\n\n    handleDeleteComment = async (commentId) => {\n        console.log(\"COMMENT ID IN DELETE\", commentId)\n        try {\n            const response = await axios.delete(`http://localhost:8000/comments/${commentId}`, { withCredentials: true });\n\n            console.log(response.data)\n\n            if (response.data.updatedPost) {\n                this.props.setPosts((prevPosts) =>\n                    prevPosts.map((post) =>\n                        post._id === response.data.updatedPost._id ? { ...post, ...response.data.updatedPost } : post\n                    )\n                );\n            }\n\n            if (response.data.updatedComment) {\n                this.props.setComments((prevComments) =>\n                    prevComments.map((comment) =>\n                        comment._id === response.data.updatedComment._id ? { ...comment, ...response.data.updatedComment } : comment\n                    )\n                );\n            }\n    \n            this.props.setComments((prevComments) =>\n                prevComments.filter((comment) => !response.data.deletedComments.includes(comment._id))\n            );\n            alert('Comment deleted successfully!');\n            this.props.handleButtonChange(\"comments\")\n        } catch (error) {\n            console.error('Error deleting comment:', error);\n            alert('Failed to delete comment. Please try again.');\n        }\n    };\n\n    handleDeletePost = async (postID) => {\n        console.log(\"POST ID IN DELETE\", postID)\n        try {\n            const response = await axios.delete(`http://localhost:8000/posts/${postID}`);\n\n            console.log(response.data)\n\n            if (response.data.deletedPost) {\n                this.props.setPosts((prevPosts) =>\n                    prevPosts.filter((post) => post._id !== response.data.deletedPost._id)\n                );\n            }\n    \n            if (response.data.updatedCommunity) {\n                this.props.setCommunities((prevCommunities) =>\n                    prevCommunities.map((community) =>\n                        community._id === response.data.updatedCommunity._id\n                            ? { ...community, ...response.data.updatedCommunity }\n                            : community\n                    )\n                );\n            }\n    \n            if (response.data.deletedComments) {\n                this.props.setComments((prevComments) =>\n                    prevComments.filter((comment) => !response.data.deletedComments.includes(comment._id))\n                );\n            }\n            alert('POST deleted successfully!');\n            this.props.handleButtonChange(\"posts\")\n        } catch (error) {\n            console.error('Error deleting posts:', error);\n            alert('Failed to delete posts. Please try again.');\n        }\n    };\n\n    handleDeleteCommunity = async (comID) => {\n        console.log(\"COMMUNITY ID IN DELETE\", comID)\n        try {\n            const response = await axios.delete(`http://localhost:8000/communities/${comID}`);\n\n            console.log(response.data)\n\n            if (response.data.deletedCommunity) {\n                this.props.setCommunities((prevCommunities) =>\n                    prevCommunities.filter((community) => community._id !== response.data.deletedCommunity._id)\n                );\n            }\n    \n            if (response.data.deletedPosts) {\n                const deletedPostIds = response.data.deletedPosts.map((post) => post._id);\n                this.props.setPosts((prevPosts) =>\n                    prevPosts.filter((post) => !deletedPostIds.includes(post._id))\n                );\n            }\n    \n            if (response.data.deletedComments) {\n                this.props.setComments((prevComments) =>\n                    prevComments.filter((comment) => !response.data.deletedComments.includes(comment._id))\n                );\n            }\n            alert('COMMUNITY deleted successfully!');\n            this.props.handleButtonChange(\"communities\")\n        } catch (error) {\n            console.error('Error deleting communities:', error);\n            alert('Failed to delete communities. Please try again.');\n        }\n    };\n\n    handleDeleteUser = async (userId) => {\n\n    };\n\n    //get all users for phredditUsers\n    // async fetchAllUsers() {\n    //     try {\n    //         const response = await axios.get('http://localhost:8000/getAllUsers', { withCredentials: true });\n    //         console.log(\"ALL USERS\", response.data);\n    //         console.log(\"ALL USERS\", response.data[0]);\n    //         return response.data;\n    //     } catch (error) {\n    //         console.error('Error fetching users:', error);\n    //     }\n    // };\n\n    render(){\n        const {activeButton } = this.props;\n        console.log(this.props)\n        const {setPage, goToEditCommunityPage, goToEditPostPage, goToEditCommentPage, posts, communities, comments, linkFlairs, handleOrderButtonClick, loggedIn, userInfo, allPhredditUsers} = this.props\n        const allUsers = allPhredditUsers;\n        console.log(\"ALL USERSsssssssssss\", allUsers)\n        console.log(\"HOME PAGE PROPS\", this.props);\n        return (\n        <div id=\"homePage\" className=\"main_cont_divs\">\n            {/* <>this is the user info tab</> */}\n            <TheUserPageHeader \n                user={this.props.userProf}\n                activeButton={activeButton}\n                handleButtonChange={this.props.handleButtonChange}\n                loggedIn={loggedIn}\n                userInfo={userInfo}\n            >\n\n            </TheUserPageHeader>\n            {\n                activeButton === 'phredditUsers' && userInfo[3] && (\n                    <div>\n                        <h3>User Accounts</h3>\n                        {\n                            allUsers.map((user) => {\n                                // don't display admin users\n                                if(user.admin){\n                                }\n                                else{\n                                    return (\n                                        <div key={user._id} className=\"userAccounts\">\n                                            <button className='userAccountDiv'\n                                            \n                                            >\n                                                <p>Display Name: {user.display}</p>\n                                                <p>Email Address: {user.email}</p>\n                                                <p>Reputation: {user.reputation}</p>\n                                                <div className=\"userAccountsSpaceDivTag\"></div>\n                                            </button>\n                                            <button className='deleteUserButton'\n                                                onClick={(e) => {\n                                                    e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n                                                    console.log(user)\n                                                    this.handleDeleteUser(user._id);\n                                                }}\n                                            >\n                                                Delete User\n                                            </button>\n                                        </div>\n\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                )\n            }\n            {activeButton === 'posts' && (\n                <>\n                <h3>Your Posts</h3>\n                <PostSection\n                    posts={this.props.userPosts.posts}\n                    goToPostPage={goToEditPostPage}\n                    comments={comments} \n                    linkFlairs={linkFlairs} \n                    communities={communities}\n                    order={this.state.order} \n                    page={'userInfo'}\n                    loggedIn={loggedIn}\n                    userInfo={userInfo}\n                    handleDeletePost={this.handleDeletePost}\n                /> \n                </>\n            )}\n            {activeButton === 'communities' && (\n                <>\n                <h3>Your Communities</h3>\n                <CommunitySection\n                communities={this.props.userComs}\n                goToEditCommunityPage={goToEditCommunityPage}\n                handleDeleteCommunity={this.handleDeleteCommunity}\n                />\n                </>\n            )}\n\n            {activeButton === 'comments' && (\n                <>\n                <h3>Your Comments</h3>\n                <CommentSection\n                comments={comments}\n                userComments={this.props.userComments}\n                posts={posts}\n                userPosts={this.props.userPosts}\n                goToEditCommentPage={goToEditCommentPage}\n                handleDeleteComment={this.handleDeleteComment}\n                />\n                </>\n            )}\n        </div>\n        )\n        \n    }\n    \n}\n\nclass TheUserPageHeader extends React.Component{\n\n    render(){\n        console.log(this.props)\n        const { user } = this.props\n        return(\n            <div id=\"header\">\n                <InfoSection\n                    user={user}\n                    page={'userProf'}\n                />\n                <UserButtons \n                    activeButton={this.props.activeButton} \n                    handleButtonChange={this.props.handleButtonChange} \n                    loggedIn={this.props.loggedIn}\n                    userInfo={this.props.userInfo}\n                />\n                {/* user button display here */}\n            </div>\n        );\n    }\n}\n\nclass CommentSection extends React.Component{\n    render(){\n        const {posts, communities, order, comments, linkFlairs, setPage, userComments, userPosts, handleDeleteComment} = this.props;\n        console.log(\"COMMENT SECTION hello?\", comments)\n        const sortedComments = commmentsList(comments, userPosts.posts, userComments.comments, posts)\n\n        const listComs = sortedComments.map((com, index) =>{\n            return (\n                <div className=\"userCommunitiesComment\" key={com.props._id} id={\"id-\" + com.props._id} onClick={\n                    () => {\n                        console.log(\"BEFORE ASSIGNMENT\")\n                        this.props.goToEditCommentPage(com)\n                        //console.log(\"AFTER ASSIGNMENT\")\n                        }}>\n                        \n                    <div className='userComments'>\n                        {com.props.postTitle} • <TimeStamp key={com.props.comment.commentedDate} postedDate={com.props.comment.commentedDate}/>\n                        <p>{com.props.comment.content.length > 20 ? `${com.props.comment.content.slice(0, 20)}...` : com.props.comment.content}</p>\n                    </div>\n                    {/* <Comment \n                        {...com.props}\n                    /> */}\n                    <br></br>\n                    <button className='deleteCommentButton'\n                        onClick={(e) => {\n                            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n                            console.log(com.props)\n                            handleDeleteComment(com.props._id);\n                        }}\n                    >\n                    Delete Comment\n                </button>\n                </div>\n            );\n        })\n\n        let commentSectionInfo = \n            (\n            <div key={sortedComments.length} className=\"posts\">\n                {listComs}\n            </div>);\n\n\n        return commentSectionInfo;\n    }\n}\n\nfunction commmentsList(comments, userPosts, userComments, posts){\n    console.log(\"comments B4\", comments, posts)\n    const sortedList = commentNewest(userComments);\n\n    //console.log(\"SORTED LIST\", sortedList)\n\n    const comsList = sortedList.map(function(com, index){\n        let postWithComment;\n        let commentArray;\n    \n        for (const post of posts) {\n            // Flatten the comments for the current post\n            console.log(\"this is the post info from\",post.title, post.commentIDs, comments)\n            commentArray = getTotalComments(post, comments);\n            //console.log(\"THIS SI THE COMMENT ARRAY FOR THIS POST\", post, commentArray)\n    \n            // Check if the current comment exists in the flattened comment array\n            if (commentArray.some(nestedComment => nestedComment._id === com._id)) {\n                postWithComment = post;\n                break; // Exit the loop once the matching post is found\n            }\n        }\n    \n        // Get the post title if found, or default to \"Post Not Found\"\n        const postTitle = postWithComment ? postWithComment.title : \"Post Not Found\";\n\n        //console.log(com, postTitle)\n        return(\n            <Comment\n                _id={com._id}\n                page={'userProf'} \n                postTitle={postTitle} \n                comment={com} \n            />\n        );\n    })\n\n    return comsList;\n}\n\nconst commentNewest = (comToDisplay) => {\n\n    let com = comToDisplay;\n\n    com.sort(function(a, b){\n      return(new Date(b.commentedDate) - new Date(a.commentedDate))\n    })\n\n\n    return com;\n\n}\n\n\nclass CommunitySection extends React.Component{\n    render(){\n        const {posts, communities, order, comments, linkFlairs, setPage} = this.props;\n        //console.log(\"COM SECTION hello?\", communities)\n        const sortedCommunity = comsList(communities.communities)\n\n        const listComs = sortedCommunity.map((com, index) =>{\n            //console.log(com)\n            return (\n                <div key={com.props._id} id={\"id-\" + com.props._id} onClick={\n                    () => {\n                        //console.log(\"BEFORE ASSIGNMENT\")\n                        this.props.goToEditCommunityPage(com)\n                        //console.log(\"AFTER ASSIGNMENT\")\n                        }}>\n                    \n                    <Community \n                        {...com.props}\n                    />\n                    <button className='deleteCommunityButton'\n                        onClick={(e) => {\n                            e.stopPropagation(); // Prevent triggering the `goToPostPage` click\n                            // console.log(com.props)\n                            this.props.handleDeleteCommunity(com.props._id);\n                        }}\n                    >\n                    Delete Community\n                    </button>\n                </div>\n            );\n        })\n\n        let comSectionInfo = \n            (\n            <div key={sortedCommunity.length} className=\"posts\">\n                {listComs}\n            </div>);\n            //console.log(postSectionInfo);\n\n        return comSectionInfo;\n    }\n}\n\nfunction comsList(communities){\n    //console.log(\"COMMUNITIES B4\", communities)\n    const sortedList = comNewest(communities);\n\n    //console.log(\"SORTED LIST\", sortedList)\n\n    const comsList = sortedList.map(function(com, index){\n        return(<Community\n            name={com.name}\n            description={com.description}\n            startDate={com.startDate}\n            createdBy={com.createdBy}\n            memberCount={com.memberCount}\n            postIDs={com.postIDs}\n            _id={com._id}\n        />);\n    })\n\n    return comsList;\n}\n\nclass Community extends React.Component{\n    render(){\n        return (\n            <div className=\"userCommunities\">\n                {/*title*/}<p className='userCommunitiesName'>{this.props.name}</p> \n                {/* Description:  */} <p>{this.props.description}</p>\n                Created: <TimeStamp key={this.props.startDate} postedDate={this.props.startDate}/>\n                <p>Created By: {this.props.createdBy}</p>\n                {/* <p>Post Count: {this.props.postIDs.length}</p> */}\n\n                {<img id=\"postCountIcon\" alt=\"postCountIcon\" src={postCountIcon}/>} {this.props.postIDs.length} {<img id=\"memberCountIcon\" alt=\"memberCountIcon\" src={memberCountIcon}/>} {this.props.memberCount}\n                \n            </div>\n        )\n    }\n}\n\nconst comNewest = (comToDisplay) => {\n\n    let com = comToDisplay;\n\n    com.sort(function(a, b){\n      return(new Date(b.startDate) - new Date(a.startDate))\n    })\n\n\n    return com;\n\n}\n\n\nclass UserButtons extends React.Component {\n    render() {\n        const { activeButton, handleButtonChange, loggedIn, userInfo } = this.props;\n        console.log(\"am i adminnnnnnn\", userInfo[3]); //userInfo[3] is admin value\n        return (\n            <div id=\"buttonSection\">\n                {/* display div not admin */}\n                {userInfo[3] &&\n                    <div className='userButtons' >\n                    <button\n                        className={activeButton === 'phredditUsers' ? 'active' : ''} \n                        onClick={() => handleButtonChange('phredditUsers')}\n                    >\n                    Phreddit Users\n                    </button>\n                    </div>\n                }\n                <div className='userButtons'>\n                    <button \n                        className={activeButton === 'posts' ? 'active' : ''} \n                        onClick={() => handleButtonChange('posts')}\n                    >\n                    Post\n                    </button>\n                </div>\n                <div className='userButtons'>\n                    <button \n                        className={activeButton === 'communities' ? 'active' : ''} \n                        onClick={() => handleButtonChange('communities')}\n                    >\n                    Communities\n                    </button>\n                </div>\n                <div className='userButtons'>\n                    <button \n                        className={activeButton === 'comments' ? 'active' : ''} \n                        onClick={() => handleButtonChange('comments')}\n                    >\n                    Comments\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}